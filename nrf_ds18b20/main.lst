                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.9 #9960 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _CRC8
                                     13 	.globl _available
                                     14 	.globl _openAllPipe
                                     15 	.globl _setPALevel
                                     16 	.globl _setCRCLength
                                     17 	.globl _setAutoAck
                                     18 	.globl _setDataRate
                                     19 	.globl _setChannel
                                     20 	.globl _radiobegin
                                     21 	.globl _watchdog_start_and_set_timeout_in_ms
                                     22 	.globl _watchdog_set_wdsv_count
                                     23 	.globl _gpio_pin_val_write
                                     24 	.globl _gpio_pin_val_set
                                     25 	.globl _gpio_pin_val_clear
                                     26 	.globl _gpio_pin_val_read
                                     27 	.globl _FSR_SB_ENDBG
                                     28 	.globl _FSR_SB_STP
                                     29 	.globl _FSR_SB_WEN
                                     30 	.globl _FSR_SB_RDYN
                                     31 	.globl _FSR_SB_INFEN
                                     32 	.globl _FSR_SB_RDISMB
                                     33 	.globl _RFCON_SB_RFCKEN
                                     34 	.globl _RFCON_SB_RFCSN
                                     35 	.globl _RFCON_SB_RFCE
                                     36 	.globl _ADCON_SB_BD
                                     37 	.globl _PSW_SB_P
                                     38 	.globl _PSW_SB_F1
                                     39 	.globl _PSW_SB_OV
                                     40 	.globl _PSW_SB_RS0
                                     41 	.globl _PSW_SB_RS1
                                     42 	.globl _PSW_SB_F0
                                     43 	.globl _PSW_SB_AC
                                     44 	.globl _PSW_SB_CY
                                     45 	.globl _T2CON_SB_T2PS
                                     46 	.globl _T2CON_SB_I3FR
                                     47 	.globl _T2CON_SB_I2FR
                                     48 	.globl _T2CON_SB_T2R1
                                     49 	.globl _T2CON_SB_T2R0
                                     50 	.globl _T2CON_SB_T2CM
                                     51 	.globl _T2CON_SB_T2I1
                                     52 	.globl _T2CON_SB_T2I0
                                     53 	.globl _IRCON_SB_EXF2
                                     54 	.globl _IRCON_SB_TF2
                                     55 	.globl _IRCON_SB_TICK
                                     56 	.globl _IRCON_SB_MISCIRQ
                                     57 	.globl _IRCON_SB_WUOPIRQ
                                     58 	.globl _IRCON_SB_SPI_2WIRE
                                     59 	.globl _IRCON_SB_RFIRQ
                                     60 	.globl _IRCON_SB_RFRDY
                                     61 	.globl _IEN1_SB_T2EXTRLD
                                     62 	.globl _IEN1_SB_TICK
                                     63 	.globl _IEN1_SB_MISCIRQ
                                     64 	.globl _IEN1_SB_WUOPIRQ
                                     65 	.globl _IEN1_SB_SPI_2WIRE
                                     66 	.globl _IEN1_SB_RFIRQ
                                     67 	.globl _IEN1_SB_RFRDY
                                     68 	.globl _P3_SB_D7
                                     69 	.globl _P3_SB_D6
                                     70 	.globl _P3_SB_D5
                                     71 	.globl _P3_SB_D4
                                     72 	.globl _P3_SB_D3
                                     73 	.globl _P3_SB_D2
                                     74 	.globl _P3_SB_D1
                                     75 	.globl _P3_SB_D0
                                     76 	.globl _IEN0_SB_GLOBAL
                                     77 	.globl _IEN0_SB_T2
                                     78 	.globl _IEN0_SB_UART
                                     79 	.globl _IEN0_SB_T1
                                     80 	.globl _IEN0_SB_POFIRQ
                                     81 	.globl _IEN0_SB_T0
                                     82 	.globl _IEN0_SB_IFP
                                     83 	.globl _P2_SB_D7
                                     84 	.globl _P2_SB_D6
                                     85 	.globl _P2_SB_D5
                                     86 	.globl _P2_SB_D4
                                     87 	.globl _P2_SB_D3
                                     88 	.globl _P2_SB_D2
                                     89 	.globl _P2_SB_D1
                                     90 	.globl _P2_SB_D0
                                     91 	.globl _S0CON_SB_SM0
                                     92 	.globl _S0CON_SB_SM1
                                     93 	.globl _S0CON_SB_SM20
                                     94 	.globl _S0CON_SB_REN0
                                     95 	.globl _S0CON_SB_TB80
                                     96 	.globl _S0CON_SB_RB80
                                     97 	.globl _S0CON_SB_TI0
                                     98 	.globl _S0CON_SB_RI0
                                     99 	.globl _P1_SB_D7
                                    100 	.globl _P1_SB_D6
                                    101 	.globl _P1_SB_D5
                                    102 	.globl _P1_SB_D4
                                    103 	.globl _P1_SB_D3
                                    104 	.globl _P1_SB_D2
                                    105 	.globl _P1_SB_D1
                                    106 	.globl _P1_SB_D0
                                    107 	.globl _TCON_SB_TF1
                                    108 	.globl _TCON_SB_TR1
                                    109 	.globl _TCON_SB_TF0
                                    110 	.globl _TCON_SB_TR0
                                    111 	.globl _TCON_SB_IE1
                                    112 	.globl _TCON_SB_IT1
                                    113 	.globl _TCON_SB_IE0
                                    114 	.globl _TCON_SB_IT0
                                    115 	.globl _P0_SB_D7
                                    116 	.globl _P0_SB_D6
                                    117 	.globl _P0_SB_D5
                                    118 	.globl _P0_SB_D4
                                    119 	.globl _P0_SB_D3
                                    120 	.globl _P0_SB_D2
                                    121 	.globl _P0_SB_D1
                                    122 	.globl _P0_SB_D0
                                    123 	.globl _ADCDAT
                                    124 	.globl _S0REL
                                    125 	.globl _T2
                                    126 	.globl _T1
                                    127 	.globl _T0
                                    128 	.globl _CRC
                                    129 	.globl _CC3
                                    130 	.globl _CC2
                                    131 	.globl _CC1
                                    132 	.globl _SPIMDAT
                                    133 	.globl _SPIMSTAT
                                    134 	.globl _SPIMCON1
                                    135 	.globl _SPIMCON0
                                    136 	.globl _FCR
                                    137 	.globl _FPCR
                                    138 	.globl _FSR
                                    139 	.globl _B
                                    140 	.globl _ARCON
                                    141 	.globl _MD5
                                    142 	.globl _MD4
                                    143 	.globl _MD3
                                    144 	.globl _MD2
                                    145 	.globl _MD1
                                    146 	.globl _MD0
                                    147 	.globl _RFCON
                                    148 	.globl _SPIRDAT
                                    149 	.globl _SPIRSTAT
                                    150 	.globl _SPIRCON1
                                    151 	.globl _SPIRCON0
                                    152 	.globl _W2CON0
                                    153 	.globl _W2CON1
                                    154 	.globl _ACC
                                    155 	.globl _CCPDATO
                                    156 	.globl _CCPDATIB
                                    157 	.globl _CCPDATIA
                                    158 	.globl _POFCON
                                    159 	.globl _COMPCON
                                    160 	.globl _W2DAT
                                    161 	.globl _W2SADR
                                    162 	.globl _ADCON
                                    163 	.globl _RNGDAT
                                    164 	.globl _RNGCTL
                                    165 	.globl _ADCDATL
                                    166 	.globl _ADCDATH
                                    167 	.globl _ADCCON1
                                    168 	.globl _ADCCON2
                                    169 	.globl _ADCCON3
                                    170 	.globl _PSW
                                    171 	.globl _WUOPC0
                                    172 	.globl _WUOPC1
                                    173 	.globl _TH2
                                    174 	.globl _TL2
                                    175 	.globl _CRCH
                                    176 	.globl _CRCL
                                    177 	.globl __XPAGE
                                    178 	.globl _MPAGE
                                    179 	.globl _T2CON
                                    180 	.globl _CCH3
                                    181 	.globl _CCL3
                                    182 	.globl _CCH2
                                    183 	.globl _CCL2
                                    184 	.globl _CCH1
                                    185 	.globl _CCL1
                                    186 	.globl _CCEN
                                    187 	.globl _IRCON
                                    188 	.globl _SPISDAT
                                    189 	.globl _SPISSTAT
                                    190 	.globl _SPISCON1
                                    191 	.globl _SPISCON0
                                    192 	.globl _S0RELH
                                    193 	.globl _IP1
                                    194 	.globl _IEN1
                                    195 	.globl _SPISRDSZ
                                    196 	.globl _RTC2CPT00
                                    197 	.globl _RTC2CMP1
                                    198 	.globl _RTC2CMP0
                                    199 	.globl _RTC2CON
                                    200 	.globl _PWMCON
                                    201 	.globl _RSTREAS
                                    202 	.globl _P3
                                    203 	.globl _WDSV
                                    204 	.globl _OPMCON
                                    205 	.globl _CLKLFCTRL
                                    206 	.globl _RTC2CPT10
                                    207 	.globl _RTC2CPT01
                                    208 	.globl _S0RELL
                                    209 	.globl _IP0
                                    210 	.globl _IEN0
                                    211 	.globl _MEMCON
                                    212 	.globl _INTEXP
                                    213 	.globl _WUCON
                                    214 	.globl _PWRDWN
                                    215 	.globl _CLKCTRL
                                    216 	.globl _PWMDC1
                                    217 	.globl _PWMDC0
                                    218 	.globl _P2
                                    219 	.globl _P1CON
                                    220 	.globl _P0CON
                                    221 	.globl _S0BUF
                                    222 	.globl _S0CON
                                    223 	.globl _P2CON
                                    224 	.globl _P3DIR
                                    225 	.globl _P2DIR
                                    226 	.globl _P1DIR
                                    227 	.globl _P0DIR
                                    228 	.globl _DPS
                                    229 	.globl _P1
                                    230 	.globl _P3CON
                                    231 	.globl _TH1
                                    232 	.globl _TH0
                                    233 	.globl _TL1
                                    234 	.globl _TL0
                                    235 	.globl _TMOD
                                    236 	.globl _TCON
                                    237 	.globl _PCON
                                    238 	.globl _DPH1
                                    239 	.globl _DPL1
                                    240 	.globl _DPH
                                    241 	.globl _DPL
                                    242 	.globl _SP
                                    243 	.globl _P0
                                    244 	.globl _DSTemp
                                    245 	.globl _clientnf
                                    246 	.globl _rtc2_configure_PARM_2
                                    247 	.globl _timer1_configure_PARM_2
                                    248 	.globl _timer0_configure_PARM_2
                                    249 	.globl _interrupt_configure_ifp_PARM_2
                                    250 	.globl _pwr_clk_mgmt_wakeup_configure_PARM_2
                                    251 	.globl _pwm_start_PARM_2
                                    252 	.globl _gpio_pin_val_write_PARM_2
                                    253 	.globl _gpio_pin_configure_PARM_2
                                    254 	.globl _rf_set_rx_addr_PARM_3
                                    255 	.globl _rf_set_rx_addr_PARM_2
                                    256 	.globl _rf_read_register_PARM_3
                                    257 	.globl _rf_read_register_PARM_2
                                    258 	.globl _rf_power_up_param_PARM_2
                                    259 	.globl _rf_spi_send_read_PARM_3
                                    260 	.globl _rf_spi_send_read_PARM_2
                                    261 	.globl _rf_spi_execute_command_PARM_4
                                    262 	.globl _rf_spi_execute_command_PARM_3
                                    263 	.globl _rf_spi_execute_command_PARM_2
                                    264 	.globl _rf_write_tx_payload_PARM_3
                                    265 	.globl _rf_write_tx_payload_PARM_2
                                    266 	.globl _rf_write_register_PARM_3
                                    267 	.globl _rf_write_register_PARM_2
                                    268 	.globl _rf_read_rx_payload_PARM_2
                                    269 	.globl _rf_read_rx_payload
                                    270 	.globl _rf_write_register
                                    271 	.globl _rf_spi_configure_enable
                                    272 	.globl _rf_write_tx_payload
                                    273 	.globl _rf_transmit
                                    274 	.globl _rf_set_as_rx
                                    275 	.globl _rf_irq_clear_all
                                    276 	.globl _rf_set_as_tx
                                    277 	.globl _rf_spi_execute_command
                                    278 	.globl _rf_spi_send_read
                                    279 	.globl _rf_power_up_param
                                    280 	.globl _rf_read_register
                                    281 	.globl _rf_spi_send_read_byte
                                    282 	.globl _rf_set_rx_addr
                                    283 	.globl _rf_power_down
                                    284 	.globl _rf_power_up
                                    285 	.globl _gpio_pin_configure
                                    286 	.globl _delay_us
                                    287 	.globl _delay_s
                                    288 	.globl _delay_ms
                                    289 	.globl _pwm_configure
                                    290 	.globl _pwm_start
                                    291 	.globl _pwr_clk_mgmt_clklf_configure
                                    292 	.globl _pwr_clk_mgmt_get_cclk_freq_in_hz
                                    293 	.globl _pwr_clk_mgmt_wakeup_configure
                                    294 	.globl _pwr_clk_mgmt_pwr_failure_configure
                                    295 	.globl _interrupt_configure_ifp
                                    296 	.globl _adc_configure
                                    297 	.globl _adc_set_input_channel
                                    298 	.globl _adc_start_single_conversion
                                    299 	.globl _adc_start_single_conversion_get_value
                                    300 	.globl _timer0_configure
                                    301 	.globl _timer1_configure
                                    302 	.globl _rtc2_configure
                                    303 	.globl _ds18b20_read
                                    304 ;--------------------------------------------------------
                                    305 ; special function registers
                                    306 ;--------------------------------------------------------
                                    307 	.area RSEG    (ABS,DATA)
      000000                        308 	.org 0x0000
                           000080   309 _P0	=	0x0080
                           000081   310 _SP	=	0x0081
                           000082   311 _DPL	=	0x0082
                           000083   312 _DPH	=	0x0083
                           000084   313 _DPL1	=	0x0084
                           000085   314 _DPH1	=	0x0085
                           000087   315 _PCON	=	0x0087
                           000088   316 _TCON	=	0x0088
                           000089   317 _TMOD	=	0x0089
                           00008A   318 _TL0	=	0x008a
                           00008B   319 _TL1	=	0x008b
                           00008C   320 _TH0	=	0x008c
                           00008D   321 _TH1	=	0x008d
                           00008F   322 _P3CON	=	0x008f
                           000090   323 _P1	=	0x0090
                           000092   324 _DPS	=	0x0092
                           000093   325 _P0DIR	=	0x0093
                           000094   326 _P1DIR	=	0x0094
                           000095   327 _P2DIR	=	0x0095
                           000096   328 _P3DIR	=	0x0096
                           000097   329 _P2CON	=	0x0097
                           000098   330 _S0CON	=	0x0098
                           000099   331 _S0BUF	=	0x0099
                           00009E   332 _P0CON	=	0x009e
                           00009F   333 _P1CON	=	0x009f
                           0000A0   334 _P2	=	0x00a0
                           0000A1   335 _PWMDC0	=	0x00a1
                           0000A2   336 _PWMDC1	=	0x00a2
                           0000A3   337 _CLKCTRL	=	0x00a3
                           0000A4   338 _PWRDWN	=	0x00a4
                           0000A5   339 _WUCON	=	0x00a5
                           0000A6   340 _INTEXP	=	0x00a6
                           0000A7   341 _MEMCON	=	0x00a7
                           0000A8   342 _IEN0	=	0x00a8
                           0000A9   343 _IP0	=	0x00a9
                           0000AA   344 _S0RELL	=	0x00aa
                           0000AB   345 _RTC2CPT01	=	0x00ab
                           0000AC   346 _RTC2CPT10	=	0x00ac
                           0000AD   347 _CLKLFCTRL	=	0x00ad
                           0000AE   348 _OPMCON	=	0x00ae
                           0000AF   349 _WDSV	=	0x00af
                           0000B0   350 _P3	=	0x00b0
                           0000B1   351 _RSTREAS	=	0x00b1
                           0000B2   352 _PWMCON	=	0x00b2
                           0000B3   353 _RTC2CON	=	0x00b3
                           0000B4   354 _RTC2CMP0	=	0x00b4
                           0000B5   355 _RTC2CMP1	=	0x00b5
                           0000B6   356 _RTC2CPT00	=	0x00b6
                           0000B7   357 _SPISRDSZ	=	0x00b7
                           0000B8   358 _IEN1	=	0x00b8
                           0000B9   359 _IP1	=	0x00b9
                           0000BA   360 _S0RELH	=	0x00ba
                           0000BC   361 _SPISCON0	=	0x00bc
                           0000BD   362 _SPISCON1	=	0x00bd
                           0000BE   363 _SPISSTAT	=	0x00be
                           0000BF   364 _SPISDAT	=	0x00bf
                           0000C0   365 _IRCON	=	0x00c0
                           0000C1   366 _CCEN	=	0x00c1
                           0000C2   367 _CCL1	=	0x00c2
                           0000C3   368 _CCH1	=	0x00c3
                           0000C4   369 _CCL2	=	0x00c4
                           0000C5   370 _CCH2	=	0x00c5
                           0000C6   371 _CCL3	=	0x00c6
                           0000C7   372 _CCH3	=	0x00c7
                           0000C8   373 _T2CON	=	0x00c8
                           0000C9   374 _MPAGE	=	0x00c9
                           0000C9   375 __XPAGE	=	0x00c9
                           0000CA   376 _CRCL	=	0x00ca
                           0000CB   377 _CRCH	=	0x00cb
                           0000CC   378 _TL2	=	0x00cc
                           0000CD   379 _TH2	=	0x00cd
                           0000CE   380 _WUOPC1	=	0x00ce
                           0000CF   381 _WUOPC0	=	0x00cf
                           0000D0   382 _PSW	=	0x00d0
                           0000D1   383 _ADCCON3	=	0x00d1
                           0000D2   384 _ADCCON2	=	0x00d2
                           0000D3   385 _ADCCON1	=	0x00d3
                           0000D4   386 _ADCDATH	=	0x00d4
                           0000D5   387 _ADCDATL	=	0x00d5
                           0000D6   388 _RNGCTL	=	0x00d6
                           0000D7   389 _RNGDAT	=	0x00d7
                           0000D8   390 _ADCON	=	0x00d8
                           0000D9   391 _W2SADR	=	0x00d9
                           0000DA   392 _W2DAT	=	0x00da
                           0000DB   393 _COMPCON	=	0x00db
                           0000DC   394 _POFCON	=	0x00dc
                           0000DD   395 _CCPDATIA	=	0x00dd
                           0000DE   396 _CCPDATIB	=	0x00de
                           0000DF   397 _CCPDATO	=	0x00df
                           0000E0   398 _ACC	=	0x00e0
                           0000E1   399 _W2CON1	=	0x00e1
                           0000E2   400 _W2CON0	=	0x00e2
                           0000E4   401 _SPIRCON0	=	0x00e4
                           0000E5   402 _SPIRCON1	=	0x00e5
                           0000E6   403 _SPIRSTAT	=	0x00e6
                           0000E7   404 _SPIRDAT	=	0x00e7
                           0000E8   405 _RFCON	=	0x00e8
                           0000E9   406 _MD0	=	0x00e9
                           0000EA   407 _MD1	=	0x00ea
                           0000EB   408 _MD2	=	0x00eb
                           0000EC   409 _MD3	=	0x00ec
                           0000ED   410 _MD4	=	0x00ed
                           0000EE   411 _MD5	=	0x00ee
                           0000EF   412 _ARCON	=	0x00ef
                           0000F0   413 _B	=	0x00f0
                           0000F8   414 _FSR	=	0x00f8
                           0000F9   415 _FPCR	=	0x00f9
                           0000FA   416 _FCR	=	0x00fa
                           0000FC   417 _SPIMCON0	=	0x00fc
                           0000FD   418 _SPIMCON1	=	0x00fd
                           0000FE   419 _SPIMSTAT	=	0x00fe
                           0000FF   420 _SPIMDAT	=	0x00ff
                           00C3C2   421 _CC1	=	0xc3c2
                           00C5C4   422 _CC2	=	0xc5c4
                           00C7C6   423 _CC3	=	0xc7c6
                           00CBCA   424 _CRC	=	0xcbca
                           008C8A   425 _T0	=	0x8c8a
                           008D8B   426 _T1	=	0x8d8b
                           00CDCC   427 _T2	=	0xcdcc
                           00BAAA   428 _S0REL	=	0xbaaa
                           00D4D5   429 _ADCDAT	=	0xd4d5
                                    430 ;--------------------------------------------------------
                                    431 ; special function bits
                                    432 ;--------------------------------------------------------
                                    433 	.area RSEG    (ABS,DATA)
      000000                        434 	.org 0x0000
                           000080   435 _P0_SB_D0	=	0x0080
                           000081   436 _P0_SB_D1	=	0x0081
                           000082   437 _P0_SB_D2	=	0x0082
                           000083   438 _P0_SB_D3	=	0x0083
                           000084   439 _P0_SB_D4	=	0x0084
                           000085   440 _P0_SB_D5	=	0x0085
                           000086   441 _P0_SB_D6	=	0x0086
                           000087   442 _P0_SB_D7	=	0x0087
                           000088   443 _TCON_SB_IT0	=	0x0088
                           000089   444 _TCON_SB_IE0	=	0x0089
                           00008A   445 _TCON_SB_IT1	=	0x008a
                           00008B   446 _TCON_SB_IE1	=	0x008b
                           00008C   447 _TCON_SB_TR0	=	0x008c
                           00008D   448 _TCON_SB_TF0	=	0x008d
                           00008E   449 _TCON_SB_TR1	=	0x008e
                           00008F   450 _TCON_SB_TF1	=	0x008f
                           000090   451 _P1_SB_D0	=	0x0090
                           000091   452 _P1_SB_D1	=	0x0091
                           000092   453 _P1_SB_D2	=	0x0092
                           000093   454 _P1_SB_D3	=	0x0093
                           000094   455 _P1_SB_D4	=	0x0094
                           000095   456 _P1_SB_D5	=	0x0095
                           000096   457 _P1_SB_D6	=	0x0096
                           000097   458 _P1_SB_D7	=	0x0097
                           000098   459 _S0CON_SB_RI0	=	0x0098
                           000099   460 _S0CON_SB_TI0	=	0x0099
                           00009A   461 _S0CON_SB_RB80	=	0x009a
                           00009B   462 _S0CON_SB_TB80	=	0x009b
                           00009C   463 _S0CON_SB_REN0	=	0x009c
                           00009D   464 _S0CON_SB_SM20	=	0x009d
                           00009E   465 _S0CON_SB_SM1	=	0x009e
                           00009F   466 _S0CON_SB_SM0	=	0x009f
                           0000A0   467 _P2_SB_D0	=	0x00a0
                           0000A1   468 _P2_SB_D1	=	0x00a1
                           0000A2   469 _P2_SB_D2	=	0x00a2
                           0000A3   470 _P2_SB_D3	=	0x00a3
                           0000A4   471 _P2_SB_D4	=	0x00a4
                           0000A5   472 _P2_SB_D5	=	0x00a5
                           0000A6   473 _P2_SB_D6	=	0x00a6
                           0000A7   474 _P2_SB_D7	=	0x00a7
                           0000A8   475 _IEN0_SB_IFP	=	0x00a8
                           0000A9   476 _IEN0_SB_T0	=	0x00a9
                           0000AA   477 _IEN0_SB_POFIRQ	=	0x00aa
                           0000AB   478 _IEN0_SB_T1	=	0x00ab
                           0000AC   479 _IEN0_SB_UART	=	0x00ac
                           0000AD   480 _IEN0_SB_T2	=	0x00ad
                           0000AF   481 _IEN0_SB_GLOBAL	=	0x00af
                           0000B0   482 _P3_SB_D0	=	0x00b0
                           0000B1   483 _P3_SB_D1	=	0x00b1
                           0000B2   484 _P3_SB_D2	=	0x00b2
                           0000B3   485 _P3_SB_D3	=	0x00b3
                           0000B4   486 _P3_SB_D4	=	0x00b4
                           0000B5   487 _P3_SB_D5	=	0x00b5
                           0000B6   488 _P3_SB_D6	=	0x00b6
                           0000B7   489 _P3_SB_D7	=	0x00b7
                           0000B8   490 _IEN1_SB_RFRDY	=	0x00b8
                           0000B9   491 _IEN1_SB_RFIRQ	=	0x00b9
                           0000BA   492 _IEN1_SB_SPI_2WIRE	=	0x00ba
                           0000BB   493 _IEN1_SB_WUOPIRQ	=	0x00bb
                           0000BC   494 _IEN1_SB_MISCIRQ	=	0x00bc
                           0000BD   495 _IEN1_SB_TICK	=	0x00bd
                           0000BF   496 _IEN1_SB_T2EXTRLD	=	0x00bf
                           0000C0   497 _IRCON_SB_RFRDY	=	0x00c0
                           0000C1   498 _IRCON_SB_RFIRQ	=	0x00c1
                           0000C2   499 _IRCON_SB_SPI_2WIRE	=	0x00c2
                           0000C3   500 _IRCON_SB_WUOPIRQ	=	0x00c3
                           0000C4   501 _IRCON_SB_MISCIRQ	=	0x00c4
                           0000C5   502 _IRCON_SB_TICK	=	0x00c5
                           0000C6   503 _IRCON_SB_TF2	=	0x00c6
                           0000C7   504 _IRCON_SB_EXF2	=	0x00c7
                           0000C8   505 _T2CON_SB_T2I0	=	0x00c8
                           0000C9   506 _T2CON_SB_T2I1	=	0x00c9
                           0000CA   507 _T2CON_SB_T2CM	=	0x00ca
                           0000CB   508 _T2CON_SB_T2R0	=	0x00cb
                           0000CC   509 _T2CON_SB_T2R1	=	0x00cc
                           0000CD   510 _T2CON_SB_I2FR	=	0x00cd
                           0000CE   511 _T2CON_SB_I3FR	=	0x00ce
                           0000CF   512 _T2CON_SB_T2PS	=	0x00cf
                           0000D7   513 _PSW_SB_CY	=	0x00d7
                           0000D6   514 _PSW_SB_AC	=	0x00d6
                           0000D5   515 _PSW_SB_F0	=	0x00d5
                           0000D4   516 _PSW_SB_RS1	=	0x00d4
                           0000D3   517 _PSW_SB_RS0	=	0x00d3
                           0000D2   518 _PSW_SB_OV	=	0x00d2
                           0000D1   519 _PSW_SB_F1	=	0x00d1
                           0000D0   520 _PSW_SB_P	=	0x00d0
                           0000DF   521 _ADCON_SB_BD	=	0x00df
                           0000E8   522 _RFCON_SB_RFCE	=	0x00e8
                           0000E9   523 _RFCON_SB_RFCSN	=	0x00e9
                           0000EA   524 _RFCON_SB_RFCKEN	=	0x00ea
                           0000FA   525 _FSR_SB_RDISMB	=	0x00fa
                           0000FB   526 _FSR_SB_INFEN	=	0x00fb
                           0000FC   527 _FSR_SB_RDYN	=	0x00fc
                           0000FD   528 _FSR_SB_WEN	=	0x00fd
                           0000FE   529 _FSR_SB_STP	=	0x00fe
                           0000FF   530 _FSR_SB_ENDBG	=	0x00ff
                                    531 ;--------------------------------------------------------
                                    532 ; overlayable register banks
                                    533 ;--------------------------------------------------------
                                    534 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        535 	.ds 8
                                    536 ;--------------------------------------------------------
                                    537 ; internal ram data
                                    538 ;--------------------------------------------------------
                                    539 	.area DSEG    (DATA)
      000000                        540 _rf_spi_send_read_sloc0_1_0:
      000000                        541 	.ds 3
      000003                        542 _rf_spi_send_read_sloc1_1_0:
      000003                        543 	.ds 1
                                    544 ;--------------------------------------------------------
                                    545 ; overlayable items in internal ram 
                                    546 ;--------------------------------------------------------
                                    547 ;--------------------------------------------------------
                                    548 ; Stack segment in internal ram 
                                    549 ;--------------------------------------------------------
                                    550 	.area	SSEG
      000000                        551 __start__stack:
      000000                        552 	.ds	1
                                    553 
                                    554 ;--------------------------------------------------------
                                    555 ; indirectly addressable internal ram data
                                    556 ;--------------------------------------------------------
                                    557 	.area ISEG    (DATA)
                                    558 ;--------------------------------------------------------
                                    559 ; absolute internal ram data
                                    560 ;--------------------------------------------------------
                                    561 	.area IABS    (ABS,DATA)
                                    562 	.area IABS    (ABS,DATA)
                                    563 ;--------------------------------------------------------
                                    564 ; bit data
                                    565 ;--------------------------------------------------------
                                    566 	.area BSEG    (BIT)
      000000                        567 _OneWireReset_sloc0_1_0:
      000000                        568 	.ds 1
                                    569 ;--------------------------------------------------------
                                    570 ; paged external ram data
                                    571 ;--------------------------------------------------------
                                    572 	.area PSEG    (PAG,XDATA)
                                    573 ;--------------------------------------------------------
                                    574 ; external ram data
                                    575 ;--------------------------------------------------------
                                    576 	.area XSEG    (XDATA)
      000000                        577 _rf_read_rx_payload_PARM_2:
      000000                        578 	.ds 2
      000002                        579 _rf_read_rx_payload_dataptr_1_36:
      000002                        580 	.ds 3
      000005                        581 _rf_write_register_PARM_2:
      000005                        582 	.ds 3
      000008                        583 _rf_write_register_PARM_3:
      000008                        584 	.ds 2
      00000A                        585 _rf_write_register_regnumber_1_38:
      00000A                        586 	.ds 1
      00000B                        587 _rf_write_tx_payload_PARM_2:
      00000B                        588 	.ds 2
      00000D                        589 _rf_write_tx_payload_PARM_3:
      00000D                        590 	.ds 1
      00000E                        591 _rf_write_tx_payload_dataptr_1_41:
      00000E                        592 	.ds 3
      000011                        593 _rf_set_as_rx_rx_active_mode_1_45:
      000011                        594 	.ds 1
      000012                        595 _rf_set_as_rx_config_1_46:
      000012                        596 	.ds 1
      000013                        597 _rf_irq_clear_all_dataptr_1_50:
      000013                        598 	.ds 1
      000014                        599 _rf_set_as_tx_config_1_51:
      000014                        600 	.ds 1
      000015                        601 _rf_spi_execute_command_PARM_2:
      000015                        602 	.ds 3
      000018                        603 _rf_spi_execute_command_PARM_3:
      000018                        604 	.ds 2
      00001A                        605 _rf_spi_execute_command_PARM_4:
      00001A                        606 	.ds 1
      00001B                        607 _rf_spi_execute_command_instruction_1_53:
      00001B                        608 	.ds 1
      00001C                        609 _rf_spi_execute_command_status_1_54:
      00001C                        610 	.ds 1
      00001D                        611 _rf_spi_send_read_PARM_2:
      00001D                        612 	.ds 2
      00001F                        613 _rf_spi_send_read_PARM_3:
      00001F                        614 	.ds 1
      000020                        615 _rf_spi_send_read_dataptr_1_55:
      000020                        616 	.ds 3
      000023                        617 _rf_power_up_param_PARM_2:
      000023                        618 	.ds 1
      000024                        619 _rf_power_up_param_rx_active_mode_1_60:
      000024                        620 	.ds 1
      000025                        621 _rf_read_register_PARM_2:
      000025                        622 	.ds 3
      000028                        623 _rf_read_register_PARM_3:
      000028                        624 	.ds 2
      00002A                        625 _rf_read_register_regnumber_1_66:
      00002A                        626 	.ds 1
      00002B                        627 _rf_spi_send_read_byte_byte_1_68:
      00002B                        628 	.ds 1
      00002C                        629 _rf_set_rx_addr_PARM_2:
      00002C                        630 	.ds 2
      00002E                        631 _rf_set_rx_addr_PARM_3:
      00002E                        632 	.ds 1
      00002F                        633 _rf_set_rx_addr_address_1_70:
      00002F                        634 	.ds 3
      000032                        635 _rf_power_down_config_1_73:
      000032                        636 	.ds 1
      000033                        637 _rf_power_up_rx_active_mode_1_75:
      000033                        638 	.ds 1
      000034                        639 _rf_power_up_config_1_76:
      000034                        640 	.ds 1
      000035                        641 _gpio_pin_configure_PARM_2:
      000035                        642 	.ds 1
      000036                        643 _gpio_pin_configure_gpio_pin_id_1_83:
      000036                        644 	.ds 1
      000037                        645 _gpio_pin_val_read_gpio_pin_id_1_105:
      000037                        646 	.ds 1
      000038                        647 _gpio_pin_val_read_value_1_106:
      000038                        648 	.ds 1
      000039                        649 _gpio_pin_val_clear_gpio_pin_id_1_113:
      000039                        650 	.ds 1
      00003A                        651 _gpio_pin_val_set_gpio_pin_id_1_119:
      00003A                        652 	.ds 1
      00003B                        653 _gpio_pin_val_write_PARM_2:
      00003B                        654 	.ds 1
      00003C                        655 _gpio_pin_val_write_gpio_pin_id_1_125:
      00003C                        656 	.ds 1
      00003D                        657 _delay_us_microseconds_1_129:
      00003D                        658 	.ds 2
      00003F                        659 _delay_s_seconds_1_133:
      00003F                        660 	.ds 2
      000041                        661 _delay_ms_milliseconds_1_137:
      000041                        662 	.ds 2
      000043                        663 _pwm_configure_pwm_config_options_1_143:
      000043                        664 	.ds 1
      000044                        665 _pwm_start_PARM_2:
      000044                        666 	.ds 1
      000045                        667 _pwm_start_pwm_channel_1_145:
      000045                        668 	.ds 1
      000046                        669 _pwr_clk_mgmt_clklf_configure_clklf_config_options_1_154:
      000046                        670 	.ds 1
      000047                        671 _pwr_clk_mgmt_get_cclk_freq_in_hz_cclk_freq_hz_1_156:
      000047                        672 	.ds 4
      00004B                        673 _pwr_clk_mgmt_wakeup_configure_PARM_2:
      00004B                        674 	.ds 2
      00004D                        675 _pwr_clk_mgmt_wakeup_configure_wakeup_sources_config_options_1_159:
      00004D                        676 	.ds 1
      00004E                        677 _pwr_clk_mgmt_pwr_failure_configure_pwr_failure_config_options_1_161:
      00004E                        678 	.ds 1
      00004F                        679 _watchdog_set_wdsv_count_wdsv_value_1_164:
      00004F                        680 	.ds 2
      000051                        681 _watchdog_start_and_set_timeout_in_ms_milliseconds_1_166:
      000051                        682 	.ds 4
      000055                        683 _watchdog_start_and_set_timeout_in_ms_wd_value_1_167:
      000055                        684 	.ds 2
      000057                        685 _interrupt_configure_ifp_PARM_2:
      000057                        686 	.ds 1
      000058                        687 _interrupt_configure_ifp_interrupt_ifp_input_1_170:
      000058                        688 	.ds 1
      000059                        689 _adc_configure_adc_config_options_1_184:
      000059                        690 	.ds 2
      00005B                        691 _adc_set_input_channel_adc_channel_1_186:
      00005B                        692 	.ds 1
      00005C                        693 _adc_start_single_conversion_adc_channel_1_188:
      00005C                        694 	.ds 1
      00005D                        695 _adc_start_single_conversion_get_value_adc_channel_1_190:
      00005D                        696 	.ds 1
      00005E                        697 _timer0_configure_PARM_2:
      00005E                        698 	.ds 2
      000060                        699 _timer0_configure_timer0_config_options_1_193:
      000060                        700 	.ds 1
      000061                        701 _timer1_configure_PARM_2:
      000061                        702 	.ds 2
      000063                        703 _timer1_configure_timer1_config_options_1_198:
      000063                        704 	.ds 1
      000064                        705 _rtc2_configure_PARM_2:
      000064                        706 	.ds 2
      000066                        707 _rtc2_configure_rtc2_config_options_1_203:
      000066                        708 	.ds 1
      000067                        709 _radiobegin_setup_1_206:
      000067                        710 	.ds 1
      000068                        711 _setChannel_channel_1_207:
      000068                        712 	.ds 1
      000069                        713 _setDataRate_speed_1_209:
      000069                        714 	.ds 1
      00006A                        715 _setDataRate_buffer_1_210:
      00006A                        716 	.ds 1
      00006B                        717 _setAutoAck_enable_1_211:
      00006B                        718 	.ds 1
      00006C                        719 _setAutoAck_buffer_1_212:
      00006C                        720 	.ds 1
      00006D                        721 _setCRCLength_length_1_213:
      00006D                        722 	.ds 1
      00006E                        723 _setCRCLength_buffer_1_214:
      00006E                        724 	.ds 1
      00006F                        725 _setPALevel_level_1_215:
      00006F                        726 	.ds 1
      000070                        727 _setPALevel_setup_1_216:
      000070                        728 	.ds 1
      000071                        729 _openAllPipe_buffer_1_217:
      000071                        730 	.ds 5
      000076                        731 _openAllPipe_setup_1_217:
      000076                        732 	.ds 1
      000077                        733 _available_pipe_num_1_218:
      000077                        734 	.ds 3
      00007A                        735 _available_buffer_1_219:
      00007A                        736 	.ds 1
      00007B                        737 _OneWireOutByte_d_1_226:
      00007B                        738 	.ds 1
      00007C                        739 _OneWireInByte_d_1_233:
      00007C                        740 	.ds 1
      00007D                        741 _ds18b20_read_temp_1_236:
      00007D                        742 	.ds 3
      000080                        743 _ds18b20_read_i_1_237:
      000080                        744 	.ds 1
      000081                        745 _ds18b20_read_data_1_237:
      000081                        746 	.ds 9
      00008A                        747 _ds18b20_read_trow_1_237:
      00008A                        748 	.ds 2
      00008C                        749 _ds18b20_read_decimal_1_237:
      00008C                        750 	.ds 4
      000090                        751 _clientnf::
      000090                        752 	.ds 9
      000099                        753 _DSTemp::
      000099                        754 	.ds 2
                           000100   755 _main_countloop_1_247	=	0x0100
                           000110   756 _main_sleep_counter_1_247	=	0x0110
                                    757 ;--------------------------------------------------------
                                    758 ; absolute external ram data
                                    759 ;--------------------------------------------------------
                                    760 	.area XABS    (ABS,XDATA)
                                    761 ;--------------------------------------------------------
                                    762 ; external initialized ram data
                                    763 ;--------------------------------------------------------
                                    764 	.area XISEG   (XDATA)
                                    765 	.area HOME    (CODE)
                                    766 	.area GSINIT0 (CODE)
                                    767 	.area GSINIT1 (CODE)
                                    768 	.area GSINIT2 (CODE)
                                    769 	.area GSINIT3 (CODE)
                                    770 	.area GSINIT4 (CODE)
                                    771 	.area GSINIT5 (CODE)
                                    772 	.area GSINIT  (CODE)
                                    773 	.area GSFINAL (CODE)
                                    774 	.area CSEG    (CODE)
                                    775 ;--------------------------------------------------------
                                    776 ; interrupt vector 
                                    777 ;--------------------------------------------------------
                                    778 	.area HOME    (CODE)
      000000                        779 __interrupt_vect:
      000000 02r00r00         [24]  780 	ljmp	__sdcc_gsinit_startup
                                    781 ;--------------------------------------------------------
                                    782 ; global & static initialisations
                                    783 ;--------------------------------------------------------
                                    784 	.area HOME    (CODE)
                                    785 	.area GSINIT  (CODE)
                                    786 	.area GSFINAL (CODE)
                                    787 	.area GSINIT  (CODE)
                                    788 	.globl __sdcc_gsinit_startup
                                    789 	.globl __sdcc_program_startup
                                    790 	.globl __start__stack
                                    791 	.globl __mcs51_genXINIT
                                    792 	.globl __mcs51_genXRAMCLEAR
                                    793 	.globl __mcs51_genRAMCLEAR
                                    794 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  795 	ljmp	__sdcc_program_startup
                                    796 ;--------------------------------------------------------
                                    797 ; Home
                                    798 ;--------------------------------------------------------
                                    799 	.area HOME    (CODE)
                                    800 	.area HOME    (CODE)
      000003                        801 __sdcc_program_startup:
      000003 02r11r8F         [24]  802 	ljmp	_main
                                    803 ;	return from main will return to caller
                                    804 ;--------------------------------------------------------
                                    805 ; code
                                    806 ;--------------------------------------------------------
                                    807 	.area CSEG    (CODE)
                                    808 ;------------------------------------------------------------
                                    809 ;Allocation info for local variables in function 'rf_read_rx_payload'
                                    810 ;------------------------------------------------------------
                                    811 ;len                       Allocated with name '_rf_read_rx_payload_PARM_2'
                                    812 ;dataptr                   Allocated with name '_rf_read_rx_payload_dataptr_1_36'
                                    813 ;status                    Allocated with name '_rf_read_rx_payload_status_1_37'
                                    814 ;------------------------------------------------------------
                                    815 ;	../sdk/src/rf/src/rf_read_rx_payload.c:48: unsigned char rf_read_rx_payload(unsigned char * dataptr, unsigned int len)
                                    816 ;	-----------------------------------------
                                    817 ;	 function rf_read_rx_payload
                                    818 ;	-----------------------------------------
      000000                        819 _rf_read_rx_payload:
                           000007   820 	ar7 = 0x07
                           000006   821 	ar6 = 0x06
                           000005   822 	ar5 = 0x05
                           000004   823 	ar4 = 0x04
                           000003   824 	ar3 = 0x03
                           000002   825 	ar2 = 0x02
                           000001   826 	ar1 = 0x01
                           000000   827 	ar0 = 0x00
      000000 AF F0            [24]  828 	mov	r7,b
      000002 AE 83            [24]  829 	mov	r6,dph
      000004 E5 82            [12]  830 	mov	a,dpl
      000006 90r00r02         [24]  831 	mov	dptr,#_rf_read_rx_payload_dataptr_1_36
      000009 F0               [24]  832 	movx	@dptr,a
      00000A EE               [12]  833 	mov	a,r6
      00000B A3               [24]  834 	inc	dptr
      00000C F0               [24]  835 	movx	@dptr,a
      00000D EF               [12]  836 	mov	a,r7
      00000E A3               [24]  837 	inc	dptr
      00000F F0               [24]  838 	movx	@dptr,a
                                    839 ;	../sdk/src/rf/src/rf_read_rx_payload.c:53: rf_clear_ce();
      000010 C2 E8            [12]  840 	clr	_RFCON_SB_RFCE 
                                    841 ;	../sdk/src/rf/src/rf_read_rx_payload.c:54: status = rf_spi_execute_command(RF_R_RX_PAYLOAD, dataptr, len, true);
      000012 90r00r02         [24]  842 	mov	dptr,#_rf_read_rx_payload_dataptr_1_36
      000015 E0               [24]  843 	movx	a,@dptr
      000016 FD               [12]  844 	mov	r5,a
      000017 A3               [24]  845 	inc	dptr
      000018 E0               [24]  846 	movx	a,@dptr
      000019 FE               [12]  847 	mov	r6,a
      00001A A3               [24]  848 	inc	dptr
      00001B E0               [24]  849 	movx	a,@dptr
      00001C FF               [12]  850 	mov	r7,a
      00001D 90r00r00         [24]  851 	mov	dptr,#_rf_read_rx_payload_PARM_2
      000020 E0               [24]  852 	movx	a,@dptr
      000021 FB               [12]  853 	mov	r3,a
      000022 A3               [24]  854 	inc	dptr
      000023 E0               [24]  855 	movx	a,@dptr
      000024 FC               [12]  856 	mov	r4,a
      000025 90r00r15         [24]  857 	mov	dptr,#_rf_spi_execute_command_PARM_2
      000028 ED               [12]  858 	mov	a,r5
      000029 F0               [24]  859 	movx	@dptr,a
      00002A EE               [12]  860 	mov	a,r6
      00002B A3               [24]  861 	inc	dptr
      00002C F0               [24]  862 	movx	@dptr,a
      00002D EF               [12]  863 	mov	a,r7
      00002E A3               [24]  864 	inc	dptr
      00002F F0               [24]  865 	movx	@dptr,a
      000030 90r00r18         [24]  866 	mov	dptr,#_rf_spi_execute_command_PARM_3
      000033 EB               [12]  867 	mov	a,r3
      000034 F0               [24]  868 	movx	@dptr,a
      000035 EC               [12]  869 	mov	a,r4
      000036 A3               [24]  870 	inc	dptr
      000037 F0               [24]  871 	movx	@dptr,a
      000038 90r00r1A         [24]  872 	mov	dptr,#_rf_spi_execute_command_PARM_4
      00003B 74 01            [12]  873 	mov	a,#0x01
      00003D F0               [24]  874 	movx	@dptr,a
      00003E 75 82 61         [24]  875 	mov	dpl,#0x61
      000041 12r01rC9         [24]  876 	lcall	_rf_spi_execute_command
      000044 AF 82            [24]  877 	mov	r7,dpl
                                    878 ;	../sdk/src/rf/src/rf_read_rx_payload.c:55: rf_set_ce();
      000046 D2 E8            [12]  879 	setb	_RFCON_SB_RFCE 
      000048 90 00 04         [24]  880 	mov	dptr,#0x0004
      00004B C0 07            [24]  881 	push	ar7
      00004D 12r07rDE         [24]  882 	lcall	_delay_us
      000050 D0 07            [24]  883 	pop	ar7
                                    884 ;	../sdk/src/rf/src/rf_read_rx_payload.c:57: return status; //Return the STATUS register value
      000052 8F 82            [24]  885 	mov	dpl,r7
      000054 22               [24]  886 	ret
                                    887 ;------------------------------------------------------------
                                    888 ;Allocation info for local variables in function 'rf_write_register'
                                    889 ;------------------------------------------------------------
                                    890 ;dataptr                   Allocated with name '_rf_write_register_PARM_2'
                                    891 ;len                       Allocated with name '_rf_write_register_PARM_3'
                                    892 ;regnumber                 Allocated with name '_rf_write_register_regnumber_1_38'
                                    893 ;------------------------------------------------------------
                                    894 ;	../sdk/src/rf/src/rf_write_register.c:49: unsigned char rf_write_register(unsigned char regnumber, unsigned char * dataptr, unsigned int len)
                                    895 ;	-----------------------------------------
                                    896 ;	 function rf_write_register
                                    897 ;	-----------------------------------------
      000055                        898 _rf_write_register:
      000055 E5 82            [12]  899 	mov	a,dpl
      000057 90r00r0A         [24]  900 	mov	dptr,#_rf_write_register_regnumber_1_38
      00005A F0               [24]  901 	movx	@dptr,a
                                    902 ;	../sdk/src/rf/src/rf_write_register.c:52: return rf_spi_execute_command(RF_W_REGISTER | (regnumber & RF_W_REGISTER_DATA), dataptr, len, false);
      00005B E0               [24]  903 	movx	a,@dptr
      00005C FF               [12]  904 	mov	r7,a
      00005D 74 1F            [12]  905 	mov	a,#0x1f
      00005F 5F               [12]  906 	anl	a,r7
      000060 44 20            [12]  907 	orl	a,#0x20
      000062 FF               [12]  908 	mov	r7,a
      000063 90r00r05         [24]  909 	mov	dptr,#_rf_write_register_PARM_2
      000066 E0               [24]  910 	movx	a,@dptr
      000067 FC               [12]  911 	mov	r4,a
      000068 A3               [24]  912 	inc	dptr
      000069 E0               [24]  913 	movx	a,@dptr
      00006A FD               [12]  914 	mov	r5,a
      00006B A3               [24]  915 	inc	dptr
      00006C E0               [24]  916 	movx	a,@dptr
      00006D FE               [12]  917 	mov	r6,a
      00006E 90r00r08         [24]  918 	mov	dptr,#_rf_write_register_PARM_3
      000071 E0               [24]  919 	movx	a,@dptr
      000072 FA               [12]  920 	mov	r2,a
      000073 A3               [24]  921 	inc	dptr
      000074 E0               [24]  922 	movx	a,@dptr
      000075 FB               [12]  923 	mov	r3,a
      000076 90r00r15         [24]  924 	mov	dptr,#_rf_spi_execute_command_PARM_2
      000079 EC               [12]  925 	mov	a,r4
      00007A F0               [24]  926 	movx	@dptr,a
      00007B ED               [12]  927 	mov	a,r5
      00007C A3               [24]  928 	inc	dptr
      00007D F0               [24]  929 	movx	@dptr,a
      00007E EE               [12]  930 	mov	a,r6
      00007F A3               [24]  931 	inc	dptr
      000080 F0               [24]  932 	movx	@dptr,a
      000081 90r00r18         [24]  933 	mov	dptr,#_rf_spi_execute_command_PARM_3
      000084 EA               [12]  934 	mov	a,r2
      000085 F0               [24]  935 	movx	@dptr,a
      000086 EB               [12]  936 	mov	a,r3
      000087 A3               [24]  937 	inc	dptr
      000088 F0               [24]  938 	movx	@dptr,a
      000089 90r00r1A         [24]  939 	mov	dptr,#_rf_spi_execute_command_PARM_4
      00008C E4               [12]  940 	clr	a
      00008D F0               [24]  941 	movx	@dptr,a
      00008E 8F 82            [24]  942 	mov	dpl,r7
      000090 02r01rC9         [24]  943 	ljmp	_rf_spi_execute_command
                                    944 ;------------------------------------------------------------
                                    945 ;Allocation info for local variables in function 'rf_spi_configure_enable'
                                    946 ;------------------------------------------------------------
                                    947 ;	../sdk/src/rf/src/rf_spi_configure_enable.c:47: void rf_spi_configure_enable()
                                    948 ;	-----------------------------------------
                                    949 ;	 function rf_spi_configure_enable
                                    950 ;	-----------------------------------------
      000093                        951 _rf_spi_configure_enable:
                                    952 ;	../sdk/src/rf/src/rf_spi_configure_enable.c:50: RFCON = 0x02;
      000093 75 E8 02         [24]  953 	mov	_RFCON,#0x02
                                    954 ;	../sdk/src/rf/src/rf_spi_configure_enable.c:51: RFCON = RFCON_RFCKEN;
      000096 75 E8 04         [24]  955 	mov	_RFCON,#0x04
      000099 22               [24]  956 	ret
                                    957 ;------------------------------------------------------------
                                    958 ;Allocation info for local variables in function 'rf_write_tx_payload'
                                    959 ;------------------------------------------------------------
                                    960 ;len                       Allocated with name '_rf_write_tx_payload_PARM_2'
                                    961 ;transmit                  Allocated with name '_rf_write_tx_payload_PARM_3'
                                    962 ;dataptr                   Allocated with name '_rf_write_tx_payload_dataptr_1_41'
                                    963 ;status                    Allocated with name '_rf_write_tx_payload_status_1_42'
                                    964 ;------------------------------------------------------------
                                    965 ;	../sdk/src/rf/src/rf_write_tx_payload.c:49: unsigned char rf_write_tx_payload(unsigned char * dataptr, unsigned int len, bool transmit)
                                    966 ;	-----------------------------------------
                                    967 ;	 function rf_write_tx_payload
                                    968 ;	-----------------------------------------
      00009A                        969 _rf_write_tx_payload:
      00009A AF F0            [24]  970 	mov	r7,b
      00009C AE 83            [24]  971 	mov	r6,dph
      00009E E5 82            [12]  972 	mov	a,dpl
      0000A0 90r00r0E         [24]  973 	mov	dptr,#_rf_write_tx_payload_dataptr_1_41
      0000A3 F0               [24]  974 	movx	@dptr,a
      0000A4 EE               [12]  975 	mov	a,r6
      0000A5 A3               [24]  976 	inc	dptr
      0000A6 F0               [24]  977 	movx	@dptr,a
      0000A7 EF               [12]  978 	mov	a,r7
      0000A8 A3               [24]  979 	inc	dptr
      0000A9 F0               [24]  980 	movx	@dptr,a
                                    981 ;	../sdk/src/rf/src/rf_write_tx_payload.c:53: status = rf_spi_execute_command(RF_W_TX_PAYLOAD, dataptr, len, false); //Write the payload
      0000AA 90r00r0E         [24]  982 	mov	dptr,#_rf_write_tx_payload_dataptr_1_41
      0000AD E0               [24]  983 	movx	a,@dptr
      0000AE FD               [12]  984 	mov	r5,a
      0000AF A3               [24]  985 	inc	dptr
      0000B0 E0               [24]  986 	movx	a,@dptr
      0000B1 FE               [12]  987 	mov	r6,a
      0000B2 A3               [24]  988 	inc	dptr
      0000B3 E0               [24]  989 	movx	a,@dptr
      0000B4 FF               [12]  990 	mov	r7,a
      0000B5 90r00r0B         [24]  991 	mov	dptr,#_rf_write_tx_payload_PARM_2
      0000B8 E0               [24]  992 	movx	a,@dptr
      0000B9 FB               [12]  993 	mov	r3,a
      0000BA A3               [24]  994 	inc	dptr
      0000BB E0               [24]  995 	movx	a,@dptr
      0000BC FC               [12]  996 	mov	r4,a
      0000BD 90r00r15         [24]  997 	mov	dptr,#_rf_spi_execute_command_PARM_2
      0000C0 ED               [12]  998 	mov	a,r5
      0000C1 F0               [24]  999 	movx	@dptr,a
      0000C2 EE               [12] 1000 	mov	a,r6
      0000C3 A3               [24] 1001 	inc	dptr
      0000C4 F0               [24] 1002 	movx	@dptr,a
      0000C5 EF               [12] 1003 	mov	a,r7
      0000C6 A3               [24] 1004 	inc	dptr
      0000C7 F0               [24] 1005 	movx	@dptr,a
      0000C8 90r00r18         [24] 1006 	mov	dptr,#_rf_spi_execute_command_PARM_3
      0000CB EB               [12] 1007 	mov	a,r3
      0000CC F0               [24] 1008 	movx	@dptr,a
      0000CD EC               [12] 1009 	mov	a,r4
      0000CE A3               [24] 1010 	inc	dptr
      0000CF F0               [24] 1011 	movx	@dptr,a
      0000D0 90r00r1A         [24] 1012 	mov	dptr,#_rf_spi_execute_command_PARM_4
      0000D3 E4               [12] 1013 	clr	a
      0000D4 F0               [24] 1014 	movx	@dptr,a
      0000D5 75 82 A0         [24] 1015 	mov	dpl,#0xa0
      0000D8 12r01rC9         [24] 1016 	lcall	_rf_spi_execute_command
      0000DB AF 82            [24] 1017 	mov	r7,dpl
                                   1018 ;	../sdk/src/rf/src/rf_write_tx_payload.c:56: if(transmit == true)
      0000DD 90r00r0D         [24] 1019 	mov	dptr,#_rf_write_tx_payload_PARM_3
      0000E0 E0               [24] 1020 	movx	a,@dptr
      0000E1 FE               [12] 1021 	mov	r6,a
      0000E2 BE 01 07         [24] 1022 	cjne	r6,#0x01,00102$
                                   1023 ;	../sdk/src/rf/src/rf_write_tx_payload.c:58: rf_transmit();
      0000E5 C0 07            [24] 1024 	push	ar7
      0000E7 12r00rEF         [24] 1025 	lcall	_rf_transmit
      0000EA D0 07            [24] 1026 	pop	ar7
      0000EC                       1027 00102$:
                                   1028 ;	../sdk/src/rf/src/rf_write_tx_payload.c:61: return status; //Return the value of STATUS
      0000EC 8F 82            [24] 1029 	mov	dpl,r7
      0000EE 22               [24] 1030 	ret
                                   1031 ;------------------------------------------------------------
                                   1032 ;Allocation info for local variables in function 'rf_transmit'
                                   1033 ;------------------------------------------------------------
                                   1034 ;	../sdk/src/rf/src/rf_transmit.c:47: void rf_transmit()
                                   1035 ;	-----------------------------------------
                                   1036 ;	 function rf_transmit
                                   1037 ;	-----------------------------------------
      0000EF                       1038 _rf_transmit:
                                   1039 ;	../sdk/src/rf/src/rf_transmit.c:50: rf_set_ce();
      0000EF D2 E8            [12] 1040 	setb	_RFCON_SB_RFCE 
      0000F1 90 00 04         [24] 1041 	mov	dptr,#0x0004
      0000F4 12r07rDE         [24] 1042 	lcall	_delay_us
                                   1043 ;	../sdk/src/rf/src/rf_transmit.c:51: delay_us(10);
      0000F7 90 00 0A         [24] 1044 	mov	dptr,#0x000a
      0000FA 12r07rDE         [24] 1045 	lcall	_delay_us
                                   1046 ;	../sdk/src/rf/src/rf_transmit.c:52: rf_clear_ce();
      0000FD C2 E8            [12] 1047 	clr	_RFCON_SB_RFCE 
      0000FF 22               [24] 1048 	ret
                                   1049 ;------------------------------------------------------------
                                   1050 ;Allocation info for local variables in function 'rf_set_as_rx'
                                   1051 ;------------------------------------------------------------
                                   1052 ;rx_active_mode            Allocated with name '_rf_set_as_rx_rx_active_mode_1_45'
                                   1053 ;config                    Allocated with name '_rf_set_as_rx_config_1_46'
                                   1054 ;------------------------------------------------------------
                                   1055 ;	../sdk/src/rf/src/rf_set_as_rx.c:47: void rf_set_as_rx(bool rx_active_mode)
                                   1056 ;	-----------------------------------------
                                   1057 ;	 function rf_set_as_rx
                                   1058 ;	-----------------------------------------
      000100                       1059 _rf_set_as_rx:
      000100 E5 82            [12] 1060 	mov	a,dpl
      000102 90r00r11         [24] 1061 	mov	dptr,#_rf_set_as_rx_rx_active_mode_1_45
      000105 F0               [24] 1062 	movx	@dptr,a
                                   1063 ;	../sdk/src/rf/src/rf_set_as_rx.c:51: rf_read_register(RF_CONFIG, &config, 1); //Read the current CONFIG value
      000106 90r00r25         [24] 1064 	mov	dptr,#_rf_read_register_PARM_2
      000109 74r12            [12] 1065 	mov	a,#_rf_set_as_rx_config_1_46
      00010B F0               [24] 1066 	movx	@dptr,a
      00010C 74s00            [12] 1067 	mov	a,#(_rf_set_as_rx_config_1_46 >> 8)
      00010E A3               [24] 1068 	inc	dptr
      00010F F0               [24] 1069 	movx	@dptr,a
      000110 E4               [12] 1070 	clr	a
      000111 A3               [24] 1071 	inc	dptr
      000112 F0               [24] 1072 	movx	@dptr,a
      000113 90r00r28         [24] 1073 	mov	dptr,#_rf_read_register_PARM_3
      000116 04               [12] 1074 	inc	a
      000117 F0               [24] 1075 	movx	@dptr,a
      000118 E4               [12] 1076 	clr	a
      000119 A3               [24] 1077 	inc	dptr
      00011A F0               [24] 1078 	movx	@dptr,a
      00011B 75 82 00         [24] 1079 	mov	dpl,#0x00
      00011E 12r03r05         [24] 1080 	lcall	_rf_read_register
                                   1081 ;	../sdk/src/rf/src/rf_set_as_rx.c:54: if((config & RF_CONFIG_PRIM_RX) != 0)
      000121 90r00r12         [24] 1082 	mov	dptr,#_rf_set_as_rx_config_1_46
      000124 E0               [24] 1083 	movx	a,@dptr
      000125 FF               [12] 1084 	mov	r7,a
      000126 30 E0 01         [24] 1085 	jnb	acc.0,00102$
                                   1086 ;	../sdk/src/rf/src/rf_set_as_rx.c:56: return;
      000129 22               [24] 1087 	ret
      00012A                       1088 00102$:
                                   1089 ;	../sdk/src/rf/src/rf_set_as_rx.c:60: config |= RF_CONFIG_PRIM_RX;
      00012A 90r00r12         [24] 1090 	mov	dptr,#_rf_set_as_rx_config_1_46
      00012D 74 01            [12] 1091 	mov	a,#0x01
      00012F 4F               [12] 1092 	orl	a,r7
      000130 F0               [24] 1093 	movx	@dptr,a
                                   1094 ;	../sdk/src/rf/src/rf_set_as_rx.c:61: rf_write_register(RF_CONFIG, &config, 1);
      000131 90r00r05         [24] 1095 	mov	dptr,#_rf_write_register_PARM_2
      000134 74r12            [12] 1096 	mov	a,#_rf_set_as_rx_config_1_46
      000136 F0               [24] 1097 	movx	@dptr,a
      000137 74s00            [12] 1098 	mov	a,#(_rf_set_as_rx_config_1_46 >> 8)
      000139 A3               [24] 1099 	inc	dptr
      00013A F0               [24] 1100 	movx	@dptr,a
      00013B E4               [12] 1101 	clr	a
      00013C A3               [24] 1102 	inc	dptr
      00013D F0               [24] 1103 	movx	@dptr,a
      00013E 90r00r08         [24] 1104 	mov	dptr,#_rf_write_register_PARM_3
      000141 04               [12] 1105 	inc	a
      000142 F0               [24] 1106 	movx	@dptr,a
      000143 E4               [12] 1107 	clr	a
      000144 A3               [24] 1108 	inc	dptr
      000145 F0               [24] 1109 	movx	@dptr,a
      000146 75 82 00         [24] 1110 	mov	dpl,#0x00
      000149 12r00r55         [24] 1111 	lcall	_rf_write_register
                                   1112 ;	../sdk/src/rf/src/rf_set_as_rx.c:64: if(rx_active_mode != false)
      00014C 90r00r11         [24] 1113 	mov	dptr,#_rf_set_as_rx_rx_active_mode_1_45
      00014F E0               [24] 1114 	movx	a,@dptr
      000150 60 08            [24] 1115 	jz	00104$
                                   1116 ;	../sdk/src/rf/src/rf_set_as_rx.c:66: rf_set_ce();
      000152 D2 E8            [12] 1117 	setb	_RFCON_SB_RFCE 
      000154 90 00 04         [24] 1118 	mov	dptr,#0x0004
      000157 02r07rDE         [24] 1119 	ljmp	_delay_us
      00015A                       1120 00104$:
                                   1121 ;	../sdk/src/rf/src/rf_set_as_rx.c:70: rf_clear_ce();
      00015A C2 E8            [12] 1122 	clr	_RFCON_SB_RFCE 
      00015C 22               [24] 1123 	ret
                                   1124 ;------------------------------------------------------------
                                   1125 ;Allocation info for local variables in function 'rf_irq_clear_all'
                                   1126 ;------------------------------------------------------------
                                   1127 ;dataptr                   Allocated with name '_rf_irq_clear_all_dataptr_1_50'
                                   1128 ;------------------------------------------------------------
                                   1129 ;	../sdk/src/rf/src/rf_irq_clear_all.c:47: void rf_irq_clear_all()
                                   1130 ;	-----------------------------------------
                                   1131 ;	 function rf_irq_clear_all
                                   1132 ;	-----------------------------------------
      00015D                       1133 _rf_irq_clear_all:
                                   1134 ;	../sdk/src/rf/src/rf_irq_clear_all.c:50: unsigned char dataptr = RF_STATUS_RX_DR | RF_STATUS_TX_DS | RF_STATUS_MAX_RT;
      00015D 90r00r13         [24] 1135 	mov	dptr,#_rf_irq_clear_all_dataptr_1_50
      000160 74 70            [12] 1136 	mov	a,#0x70
      000162 F0               [24] 1137 	movx	@dptr,a
                                   1138 ;	../sdk/src/rf/src/rf_irq_clear_all.c:52: rf_write_register(RF_STATUS, &dataptr, 1);
      000163 90r00r05         [24] 1139 	mov	dptr,#_rf_write_register_PARM_2
      000166 74r13            [12] 1140 	mov	a,#_rf_irq_clear_all_dataptr_1_50
      000168 F0               [24] 1141 	movx	@dptr,a
      000169 74s00            [12] 1142 	mov	a,#(_rf_irq_clear_all_dataptr_1_50 >> 8)
      00016B A3               [24] 1143 	inc	dptr
      00016C F0               [24] 1144 	movx	@dptr,a
      00016D E4               [12] 1145 	clr	a
      00016E A3               [24] 1146 	inc	dptr
      00016F F0               [24] 1147 	movx	@dptr,a
      000170 90r00r08         [24] 1148 	mov	dptr,#_rf_write_register_PARM_3
      000173 04               [12] 1149 	inc	a
      000174 F0               [24] 1150 	movx	@dptr,a
      000175 E4               [12] 1151 	clr	a
      000176 A3               [24] 1152 	inc	dptr
      000177 F0               [24] 1153 	movx	@dptr,a
      000178 75 82 07         [24] 1154 	mov	dpl,#0x07
      00017B 12r00r55         [24] 1155 	lcall	_rf_write_register
                                   1156 ;	../sdk/src/rf/src/rf_irq_clear_all.c:54: sbit_clear(IRCON_SB_RFIRQ); //Clear the master interrupt
      00017E C2 C1            [12] 1157 	clr	_IRCON_SB_RFIRQ 
      000180 22               [24] 1158 	ret
                                   1159 ;------------------------------------------------------------
                                   1160 ;Allocation info for local variables in function 'rf_set_as_tx'
                                   1161 ;------------------------------------------------------------
                                   1162 ;config                    Allocated with name '_rf_set_as_tx_config_1_51'
                                   1163 ;------------------------------------------------------------
                                   1164 ;	../sdk/src/rf/src/rf_set_as_tx.c:47: void rf_set_as_tx()
                                   1165 ;	-----------------------------------------
                                   1166 ;	 function rf_set_as_tx
                                   1167 ;	-----------------------------------------
      000181                       1168 _rf_set_as_tx:
                                   1169 ;	../sdk/src/rf/src/rf_set_as_tx.c:51: rf_read_register(RF_CONFIG, &config, 1); //Read the current CONFIG value
      000181 90r00r25         [24] 1170 	mov	dptr,#_rf_read_register_PARM_2
      000184 74r14            [12] 1171 	mov	a,#_rf_set_as_tx_config_1_51
      000186 F0               [24] 1172 	movx	@dptr,a
      000187 74s00            [12] 1173 	mov	a,#(_rf_set_as_tx_config_1_51 >> 8)
      000189 A3               [24] 1174 	inc	dptr
      00018A F0               [24] 1175 	movx	@dptr,a
      00018B E4               [12] 1176 	clr	a
      00018C A3               [24] 1177 	inc	dptr
      00018D F0               [24] 1178 	movx	@dptr,a
      00018E 90r00r28         [24] 1179 	mov	dptr,#_rf_read_register_PARM_3
      000191 04               [12] 1180 	inc	a
      000192 F0               [24] 1181 	movx	@dptr,a
      000193 E4               [12] 1182 	clr	a
      000194 A3               [24] 1183 	inc	dptr
      000195 F0               [24] 1184 	movx	@dptr,a
      000196 75 82 00         [24] 1185 	mov	dpl,#0x00
      000199 12r03r05         [24] 1186 	lcall	_rf_read_register
                                   1187 ;	../sdk/src/rf/src/rf_set_as_tx.c:54: if((config & RF_CONFIG_PRIM_RX) == 0)
      00019C 90r00r14         [24] 1188 	mov	dptr,#_rf_set_as_tx_config_1_51
      00019F E0               [24] 1189 	movx	a,@dptr
      0001A0 FF               [12] 1190 	mov	r7,a
      0001A1 20 E0 01         [24] 1191 	jb	acc.0,00102$
                                   1192 ;	../sdk/src/rf/src/rf_set_as_tx.c:56: return;
      0001A4 22               [24] 1193 	ret
      0001A5                       1194 00102$:
                                   1195 ;	../sdk/src/rf/src/rf_set_as_tx.c:59: rf_clear_ce(); //Clear the CE pin
      0001A5 C2 E8            [12] 1196 	clr	_RFCON_SB_RFCE 
                                   1197 ;	../sdk/src/rf/src/rf_set_as_tx.c:62: config &= (~RF_CONFIG_PRIM_RX);
      0001A7 90r00r14         [24] 1198 	mov	dptr,#_rf_set_as_tx_config_1_51
      0001AA 74 FE            [12] 1199 	mov	a,#0xfe
      0001AC 5F               [12] 1200 	anl	a,r7
      0001AD F0               [24] 1201 	movx	@dptr,a
                                   1202 ;	../sdk/src/rf/src/rf_set_as_tx.c:63: rf_write_register(RF_CONFIG, &config, 1);
      0001AE 90r00r05         [24] 1203 	mov	dptr,#_rf_write_register_PARM_2
      0001B1 74r14            [12] 1204 	mov	a,#_rf_set_as_tx_config_1_51
      0001B3 F0               [24] 1205 	movx	@dptr,a
      0001B4 74s00            [12] 1206 	mov	a,#(_rf_set_as_tx_config_1_51 >> 8)
      0001B6 A3               [24] 1207 	inc	dptr
      0001B7 F0               [24] 1208 	movx	@dptr,a
      0001B8 E4               [12] 1209 	clr	a
      0001B9 A3               [24] 1210 	inc	dptr
      0001BA F0               [24] 1211 	movx	@dptr,a
      0001BB 90r00r08         [24] 1212 	mov	dptr,#_rf_write_register_PARM_3
      0001BE 04               [12] 1213 	inc	a
      0001BF F0               [24] 1214 	movx	@dptr,a
      0001C0 E4               [12] 1215 	clr	a
      0001C1 A3               [24] 1216 	inc	dptr
      0001C2 F0               [24] 1217 	movx	@dptr,a
      0001C3 75 82 00         [24] 1218 	mov	dpl,#0x00
      0001C6 02r00r55         [24] 1219 	ljmp	_rf_write_register
                                   1220 ;------------------------------------------------------------
                                   1221 ;Allocation info for local variables in function 'rf_spi_execute_command'
                                   1222 ;------------------------------------------------------------
                                   1223 ;dataptr                   Allocated with name '_rf_spi_execute_command_PARM_2'
                                   1224 ;len                       Allocated with name '_rf_spi_execute_command_PARM_3'
                                   1225 ;copydata                  Allocated with name '_rf_spi_execute_command_PARM_4'
                                   1226 ;instruction               Allocated with name '_rf_spi_execute_command_instruction_1_53'
                                   1227 ;status                    Allocated with name '_rf_spi_execute_command_status_1_54'
                                   1228 ;------------------------------------------------------------
                                   1229 ;	../sdk/src/rf/src/rf_spi_execute_command.c:50: unsigned char rf_spi_execute_command(unsigned char instruction, unsigned char * dataptr, unsigned int len, bool copydata)
                                   1230 ;	-----------------------------------------
                                   1231 ;	 function rf_spi_execute_command
                                   1232 ;	-----------------------------------------
      0001C9                       1233 _rf_spi_execute_command:
      0001C9 E5 82            [12] 1234 	mov	a,dpl
      0001CB 90r00r1B         [24] 1235 	mov	dptr,#_rf_spi_execute_command_instruction_1_53
      0001CE F0               [24] 1236 	movx	@dptr,a
                                   1237 ;	../sdk/src/rf/src/rf_spi_execute_command.c:52: unsigned char status = instruction; //status writes the instruction, then reads the current STATUS value
      0001CF E0               [24] 1238 	movx	a,@dptr
      0001D0 FF               [12] 1239 	mov	r7,a
      0001D1 90r00r1C         [24] 1240 	mov	dptr,#_rf_spi_execute_command_status_1_54
      0001D4 F0               [24] 1241 	movx	@dptr,a
                                   1242 ;	../sdk/src/rf/src/rf_spi_execute_command.c:54: rf_clear_csn(); //Clear CSN to start the transaction
      0001D5 C2 E9            [12] 1243 	clr	_RFCON_SB_RFCSN 
                                   1244 ;	../sdk/src/rf/src/rf_spi_execute_command.c:57: rf_spi_send_read(&status, 1, true);
      0001D7 90r00r1D         [24] 1245 	mov	dptr,#_rf_spi_send_read_PARM_2
      0001DA 74 01            [12] 1246 	mov	a,#0x01
      0001DC F0               [24] 1247 	movx	@dptr,a
      0001DD E4               [12] 1248 	clr	a
      0001DE A3               [24] 1249 	inc	dptr
      0001DF F0               [24] 1250 	movx	@dptr,a
      0001E0 90r00r1F         [24] 1251 	mov	dptr,#_rf_spi_send_read_PARM_3
      0001E3 04               [12] 1252 	inc	a
      0001E4 F0               [24] 1253 	movx	@dptr,a
      0001E5 90r00r1C         [24] 1254 	mov	dptr,#_rf_spi_execute_command_status_1_54
      0001E8 75 F0 00         [24] 1255 	mov	b,#0x00
      0001EB 12r02r25         [24] 1256 	lcall	_rf_spi_send_read
                                   1257 ;	../sdk/src/rf/src/rf_spi_execute_command.c:58: rf_spi_send_read(dataptr, len, copydata);
      0001EE 90r00r15         [24] 1258 	mov	dptr,#_rf_spi_execute_command_PARM_2
      0001F1 E0               [24] 1259 	movx	a,@dptr
      0001F2 FD               [12] 1260 	mov	r5,a
      0001F3 A3               [24] 1261 	inc	dptr
      0001F4 E0               [24] 1262 	movx	a,@dptr
      0001F5 FE               [12] 1263 	mov	r6,a
      0001F6 A3               [24] 1264 	inc	dptr
      0001F7 E0               [24] 1265 	movx	a,@dptr
      0001F8 FF               [12] 1266 	mov	r7,a
      0001F9 90r00r18         [24] 1267 	mov	dptr,#_rf_spi_execute_command_PARM_3
      0001FC E0               [24] 1268 	movx	a,@dptr
      0001FD FB               [12] 1269 	mov	r3,a
      0001FE A3               [24] 1270 	inc	dptr
      0001FF E0               [24] 1271 	movx	a,@dptr
      000200 FC               [12] 1272 	mov	r4,a
      000201 90r00r1A         [24] 1273 	mov	dptr,#_rf_spi_execute_command_PARM_4
      000204 E0               [24] 1274 	movx	a,@dptr
      000205 FA               [12] 1275 	mov	r2,a
      000206 90r00r1D         [24] 1276 	mov	dptr,#_rf_spi_send_read_PARM_2
      000209 EB               [12] 1277 	mov	a,r3
      00020A F0               [24] 1278 	movx	@dptr,a
      00020B EC               [12] 1279 	mov	a,r4
      00020C A3               [24] 1280 	inc	dptr
      00020D F0               [24] 1281 	movx	@dptr,a
      00020E 90r00r1F         [24] 1282 	mov	dptr,#_rf_spi_send_read_PARM_3
      000211 EA               [12] 1283 	mov	a,r2
      000212 F0               [24] 1284 	movx	@dptr,a
      000213 8D 82            [24] 1285 	mov	dpl,r5
      000215 8E 83            [24] 1286 	mov	dph,r6
      000217 8F F0            [24] 1287 	mov	b,r7
      000219 12r02r25         [24] 1288 	lcall	_rf_spi_send_read
                                   1289 ;	../sdk/src/rf/src/rf_spi_execute_command.c:60: rf_set_csn(); //Set CSN to end the transaction
      00021C D2 E9            [12] 1290 	setb	_RFCON_SB_RFCSN 
                                   1291 ;	../sdk/src/rf/src/rf_spi_execute_command.c:62: return status; //Return the value of STATUS
      00021E 90r00r1C         [24] 1292 	mov	dptr,#_rf_spi_execute_command_status_1_54
      000221 E0               [24] 1293 	movx	a,@dptr
      000222 F5 82            [12] 1294 	mov	dpl,a
      000224 22               [24] 1295 	ret
                                   1296 ;------------------------------------------------------------
                                   1297 ;Allocation info for local variables in function 'rf_spi_send_read'
                                   1298 ;------------------------------------------------------------
                                   1299 ;sloc0                     Allocated with name '_rf_spi_send_read_sloc0_1_0'
                                   1300 ;sloc1                     Allocated with name '_rf_spi_send_read_sloc1_1_0'
                                   1301 ;len                       Allocated with name '_rf_spi_send_read_PARM_2'
                                   1302 ;copydata                  Allocated with name '_rf_spi_send_read_PARM_3'
                                   1303 ;dataptr                   Allocated with name '_rf_spi_send_read_dataptr_1_55'
                                   1304 ;i                         Allocated with name '_rf_spi_send_read_i_1_56'
                                   1305 ;tempbyte                  Allocated with name '_rf_spi_send_read_tempbyte_1_56'
                                   1306 ;------------------------------------------------------------
                                   1307 ;	../sdk/src/rf/src/rf_spi_send_read.c:49: void rf_spi_send_read(unsigned char * dataptr, unsigned int len, bool copydata)
                                   1308 ;	-----------------------------------------
                                   1309 ;	 function rf_spi_send_read
                                   1310 ;	-----------------------------------------
      000225                       1311 _rf_spi_send_read:
      000225 AF F0            [24] 1312 	mov	r7,b
      000227 AE 83            [24] 1313 	mov	r6,dph
      000229 E5 82            [12] 1314 	mov	a,dpl
      00022B 90r00r20         [24] 1315 	mov	dptr,#_rf_spi_send_read_dataptr_1_55
      00022E F0               [24] 1316 	movx	@dptr,a
      00022F EE               [12] 1317 	mov	a,r6
      000230 A3               [24] 1318 	inc	dptr
      000231 F0               [24] 1319 	movx	@dptr,a
      000232 EF               [12] 1320 	mov	a,r7
      000233 A3               [24] 1321 	inc	dptr
      000234 F0               [24] 1322 	movx	@dptr,a
                                   1323 ;	../sdk/src/rf/src/rf_spi_send_read.c:55: for(i = 0; i < len; i++)
      000235 90r00r20         [24] 1324 	mov	dptr,#_rf_spi_send_read_dataptr_1_55
      000238 E0               [24] 1325 	movx	a,@dptr
      000239 FD               [12] 1326 	mov	r5,a
      00023A A3               [24] 1327 	inc	dptr
      00023B E0               [24] 1328 	movx	a,@dptr
      00023C FE               [12] 1329 	mov	r6,a
      00023D A3               [24] 1330 	inc	dptr
      00023E E0               [24] 1331 	movx	a,@dptr
      00023F FF               [12] 1332 	mov	r7,a
      000240 90r00r1F         [24] 1333 	mov	dptr,#_rf_spi_send_read_PARM_3
      000243 E0               [24] 1334 	movx	a,@dptr
      000244 FC               [12] 1335 	mov	r4,a
      000245 90r00r1D         [24] 1336 	mov	dptr,#_rf_spi_send_read_PARM_2
      000248 E0               [24] 1337 	movx	a,@dptr
      000249 FA               [12] 1338 	mov	r2,a
      00024A A3               [24] 1339 	inc	dptr
      00024B E0               [24] 1340 	movx	a,@dptr
      00024C FB               [12] 1341 	mov	r3,a
      00024D 78 00            [12] 1342 	mov	r0,#0x00
      00024F 79 00            [12] 1343 	mov	r1,#0x00
      000251                       1344 00105$:
      000251 C3               [12] 1345 	clr	c
      000252 E8               [12] 1346 	mov	a,r0
      000253 9A               [12] 1347 	subb	a,r2
      000254 E9               [12] 1348 	mov	a,r1
      000255 9B               [12] 1349 	subb	a,r3
      000256 50 5F            [24] 1350 	jnc	00107$
                                   1351 ;	../sdk/src/rf/src/rf_spi_send_read.c:57: tempbyte = rf_spi_send_read_byte(dataptr[i]); //Send the value, and then save the received value
      000258 C0 02            [24] 1352 	push	ar2
      00025A C0 03            [24] 1353 	push	ar3
      00025C E8               [12] 1354 	mov	a,r0
      00025D 2D               [12] 1355 	add	a,r5
      00025E F5*00            [12] 1356 	mov	_rf_spi_send_read_sloc0_1_0,a
      000260 E9               [12] 1357 	mov	a,r1
      000261 3E               [12] 1358 	addc	a,r6
      000262 F5*01            [12] 1359 	mov	(_rf_spi_send_read_sloc0_1_0 + 1),a
      000264 8F*02            [24] 1360 	mov	(_rf_spi_send_read_sloc0_1_0 + 2),r7
      000266 85*00 82         [24] 1361 	mov	dpl,_rf_spi_send_read_sloc0_1_0
      000269 85*01 83         [24] 1362 	mov	dph,(_rf_spi_send_read_sloc0_1_0 + 1)
      00026C 85*02 F0         [24] 1363 	mov	b,(_rf_spi_send_read_sloc0_1_0 + 2)
      00026F 12r00r00         [24] 1364 	lcall	__gptrget
      000272 FB               [12] 1365 	mov	r3,a
      000273 F5 82            [12] 1366 	mov	dpl,a
      000275 C0 07            [24] 1367 	push	ar7
      000277 C0 06            [24] 1368 	push	ar6
      000279 C0 05            [24] 1369 	push	ar5
      00027B C0 04            [24] 1370 	push	ar4
      00027D C0 03            [24] 1371 	push	ar3
      00027F C0 02            [24] 1372 	push	ar2
      000281 C0 01            [24] 1373 	push	ar1
      000283 C0 00            [24] 1374 	push	ar0
      000285 12r03r41         [24] 1375 	lcall	_rf_spi_send_read_byte
      000288 85 82*03         [24] 1376 	mov	_rf_spi_send_read_sloc1_1_0,dpl
      00028B D0 00            [24] 1377 	pop	ar0
      00028D D0 01            [24] 1378 	pop	ar1
      00028F D0 02            [24] 1379 	pop	ar2
      000291 D0 03            [24] 1380 	pop	ar3
      000293 D0 04            [24] 1381 	pop	ar4
      000295 D0 05            [24] 1382 	pop	ar5
      000297 D0 06            [24] 1383 	pop	ar6
      000299 D0 07            [24] 1384 	pop	ar7
                                   1385 ;	../sdk/src/rf/src/rf_spi_send_read.c:60: if(copydata != false)
      00029B D0 03            [24] 1386 	pop	ar3
      00029D D0 02            [24] 1387 	pop	ar2
      00029F EC               [12] 1388 	mov	a,r4
      0002A0 60 0E            [24] 1389 	jz	00106$
                                   1390 ;	../sdk/src/rf/src/rf_spi_send_read.c:62: dataptr[i] = tempbyte;
      0002A2 85*00 82         [24] 1391 	mov	dpl,_rf_spi_send_read_sloc0_1_0
      0002A5 85*01 83         [24] 1392 	mov	dph,(_rf_spi_send_read_sloc0_1_0 + 1)
      0002A8 85*02 F0         [24] 1393 	mov	b,(_rf_spi_send_read_sloc0_1_0 + 2)
      0002AB E5*03            [12] 1394 	mov	a,_rf_spi_send_read_sloc1_1_0
      0002AD 12r00r00         [24] 1395 	lcall	__gptrput
      0002B0                       1396 00106$:
                                   1397 ;	../sdk/src/rf/src/rf_spi_send_read.c:55: for(i = 0; i < len; i++)
      0002B0 08               [12] 1398 	inc	r0
      0002B1 B8 00 9D         [24] 1399 	cjne	r0,#0x00,00105$
      0002B4 09               [12] 1400 	inc	r1
      0002B5 80 9A            [24] 1401 	sjmp	00105$
      0002B7                       1402 00107$:
      0002B7 22               [24] 1403 	ret
                                   1404 ;------------------------------------------------------------
                                   1405 ;Allocation info for local variables in function 'rf_power_up_param'
                                   1406 ;------------------------------------------------------------
                                   1407 ;config                    Allocated with name '_rf_power_up_param_PARM_2'
                                   1408 ;rx_active_mode            Allocated with name '_rf_power_up_param_rx_active_mode_1_60'
                                   1409 ;------------------------------------------------------------
                                   1410 ;	../sdk/src/rf/src/rf_power_up_param.c:49: void rf_power_up_param(bool rx_active_mode, unsigned char config)
                                   1411 ;	-----------------------------------------
                                   1412 ;	 function rf_power_up_param
                                   1413 ;	-----------------------------------------
      0002B8                       1414 _rf_power_up_param:
      0002B8 E5 82            [12] 1415 	mov	a,dpl
      0002BA 90r00r24         [24] 1416 	mov	dptr,#_rf_power_up_param_rx_active_mode_1_60
      0002BD F0               [24] 1417 	movx	@dptr,a
                                   1418 ;	../sdk/src/rf/src/rf_power_up_param.c:52: config |= RF_CONFIG_PWR_UP;
      0002BE 90r00r23         [24] 1419 	mov	dptr,#_rf_power_up_param_PARM_2
      0002C1 E0               [24] 1420 	movx	a,@dptr
      0002C2 FF               [12] 1421 	mov	r7,a
      0002C3 74 02            [12] 1422 	mov	a,#0x02
      0002C5 4F               [12] 1423 	orl	a,r7
      0002C6 F0               [24] 1424 	movx	@dptr,a
                                   1425 ;	../sdk/src/rf/src/rf_power_up_param.c:53: rf_write_register(RF_CONFIG, &config, 1);
      0002C7 90r00r05         [24] 1426 	mov	dptr,#_rf_write_register_PARM_2
      0002CA 74r23            [12] 1427 	mov	a,#_rf_power_up_param_PARM_2
      0002CC F0               [24] 1428 	movx	@dptr,a
      0002CD 74s00            [12] 1429 	mov	a,#(_rf_power_up_param_PARM_2 >> 8)
      0002CF A3               [24] 1430 	inc	dptr
      0002D0 F0               [24] 1431 	movx	@dptr,a
      0002D1 E4               [12] 1432 	clr	a
      0002D2 A3               [24] 1433 	inc	dptr
      0002D3 F0               [24] 1434 	movx	@dptr,a
      0002D4 90r00r08         [24] 1435 	mov	dptr,#_rf_write_register_PARM_3
      0002D7 04               [12] 1436 	inc	a
      0002D8 F0               [24] 1437 	movx	@dptr,a
      0002D9 E4               [12] 1438 	clr	a
      0002DA A3               [24] 1439 	inc	dptr
      0002DB F0               [24] 1440 	movx	@dptr,a
      0002DC 75 82 00         [24] 1441 	mov	dpl,#0x00
      0002DF 12r00r55         [24] 1442 	lcall	_rf_write_register
                                   1443 ;	../sdk/src/rf/src/rf_power_up_param.c:55: delay_us(1); //Delay for power up
      0002E2 90 00 01         [24] 1444 	mov	dptr,#0x0001
      0002E5 12r07rDE         [24] 1445 	lcall	_delay_us
                                   1446 ;	../sdk/src/rf/src/rf_power_up_param.c:58: if((config & RF_CONFIG_PRIM_RX) == 0)
      0002E8 90r00r23         [24] 1447 	mov	dptr,#_rf_power_up_param_PARM_2
      0002EB E0               [24] 1448 	movx	a,@dptr
      0002EC FF               [12] 1449 	mov	r7,a
      0002ED 20 E0 03         [24] 1450 	jb	acc.0,00105$
                                   1451 ;	../sdk/src/rf/src/rf_power_up_param.c:60: rf_clear_ce(); //Clear CE for TX mode
      0002F0 C2 E8            [12] 1452 	clr	_RFCON_SB_RFCE 
      0002F2 22               [24] 1453 	ret
      0002F3                       1454 00105$:
                                   1455 ;	../sdk/src/rf/src/rf_power_up_param.c:65: if(rx_active_mode != false)
      0002F3 90r00r24         [24] 1456 	mov	dptr,#_rf_power_up_param_rx_active_mode_1_60
      0002F6 E0               [24] 1457 	movx	a,@dptr
      0002F7 FF               [12] 1458 	mov	r7,a
      0002F8 60 08            [24] 1459 	jz	00102$
                                   1460 ;	../sdk/src/rf/src/rf_power_up_param.c:67: rf_set_ce();
      0002FA D2 E8            [12] 1461 	setb	_RFCON_SB_RFCE 
      0002FC 90 00 04         [24] 1462 	mov	dptr,#0x0004
      0002FF 02r07rDE         [24] 1463 	ljmp	_delay_us
      000302                       1464 00102$:
                                   1465 ;	../sdk/src/rf/src/rf_power_up_param.c:71: rf_clear_ce();
      000302 C2 E8            [12] 1466 	clr	_RFCON_SB_RFCE 
      000304 22               [24] 1467 	ret
                                   1468 ;------------------------------------------------------------
                                   1469 ;Allocation info for local variables in function 'rf_read_register'
                                   1470 ;------------------------------------------------------------
                                   1471 ;dataptr                   Allocated with name '_rf_read_register_PARM_2'
                                   1472 ;len                       Allocated with name '_rf_read_register_PARM_3'
                                   1473 ;regnumber                 Allocated with name '_rf_read_register_regnumber_1_66'
                                   1474 ;------------------------------------------------------------
                                   1475 ;	../sdk/src/rf/src/rf_read_register.c:49: unsigned char rf_read_register(unsigned char regnumber, unsigned char * dataptr, unsigned int len)
                                   1476 ;	-----------------------------------------
                                   1477 ;	 function rf_read_register
                                   1478 ;	-----------------------------------------
      000305                       1479 _rf_read_register:
      000305 E5 82            [12] 1480 	mov	a,dpl
      000307 90r00r2A         [24] 1481 	mov	dptr,#_rf_read_register_regnumber_1_66
      00030A F0               [24] 1482 	movx	@dptr,a
                                   1483 ;	../sdk/src/rf/src/rf_read_register.c:52: return rf_spi_execute_command(regnumber & RF_R_REGISTER_DATA, dataptr, len, true);
      00030B E0               [24] 1484 	movx	a,@dptr
      00030C FF               [12] 1485 	mov	r7,a
      00030D 53 07 1F         [24] 1486 	anl	ar7,#0x1f
      000310 90r00r25         [24] 1487 	mov	dptr,#_rf_read_register_PARM_2
      000313 E0               [24] 1488 	movx	a,@dptr
      000314 FC               [12] 1489 	mov	r4,a
      000315 A3               [24] 1490 	inc	dptr
      000316 E0               [24] 1491 	movx	a,@dptr
      000317 FD               [12] 1492 	mov	r5,a
      000318 A3               [24] 1493 	inc	dptr
      000319 E0               [24] 1494 	movx	a,@dptr
      00031A FE               [12] 1495 	mov	r6,a
      00031B 90r00r28         [24] 1496 	mov	dptr,#_rf_read_register_PARM_3
      00031E E0               [24] 1497 	movx	a,@dptr
      00031F FA               [12] 1498 	mov	r2,a
      000320 A3               [24] 1499 	inc	dptr
      000321 E0               [24] 1500 	movx	a,@dptr
      000322 FB               [12] 1501 	mov	r3,a
      000323 90r00r15         [24] 1502 	mov	dptr,#_rf_spi_execute_command_PARM_2
      000326 EC               [12] 1503 	mov	a,r4
      000327 F0               [24] 1504 	movx	@dptr,a
      000328 ED               [12] 1505 	mov	a,r5
      000329 A3               [24] 1506 	inc	dptr
      00032A F0               [24] 1507 	movx	@dptr,a
      00032B EE               [12] 1508 	mov	a,r6
      00032C A3               [24] 1509 	inc	dptr
      00032D F0               [24] 1510 	movx	@dptr,a
      00032E 90r00r18         [24] 1511 	mov	dptr,#_rf_spi_execute_command_PARM_3
      000331 EA               [12] 1512 	mov	a,r2
      000332 F0               [24] 1513 	movx	@dptr,a
      000333 EB               [12] 1514 	mov	a,r3
      000334 A3               [24] 1515 	inc	dptr
      000335 F0               [24] 1516 	movx	@dptr,a
      000336 90r00r1A         [24] 1517 	mov	dptr,#_rf_spi_execute_command_PARM_4
      000339 74 01            [12] 1518 	mov	a,#0x01
      00033B F0               [24] 1519 	movx	@dptr,a
      00033C 8F 82            [24] 1520 	mov	dpl,r7
      00033E 02r01rC9         [24] 1521 	ljmp	_rf_spi_execute_command
                                   1522 ;------------------------------------------------------------
                                   1523 ;Allocation info for local variables in function 'rf_spi_send_read_byte'
                                   1524 ;------------------------------------------------------------
                                   1525 ;byte                      Allocated with name '_rf_spi_send_read_byte_byte_1_68'
                                   1526 ;------------------------------------------------------------
                                   1527 ;	../sdk/src/rf/src/rf_spi_send_read_byte.c:47: unsigned char rf_spi_send_read_byte(unsigned char byte)
                                   1528 ;	-----------------------------------------
                                   1529 ;	 function rf_spi_send_read_byte
                                   1530 ;	-----------------------------------------
      000341                       1531 _rf_spi_send_read_byte:
      000341 E5 82            [12] 1532 	mov	a,dpl
      000343 90r00r2B         [24] 1533 	mov	dptr,#_rf_spi_send_read_byte_byte_1_68
      000346 F0               [24] 1534 	movx	@dptr,a
                                   1535 ;	../sdk/src/rf/src/rf_spi_send_read_byte.c:49: SPIRDAT = byte; //Send byte over SPI
      000347 E0               [24] 1536 	movx	a,@dptr
      000348 F5 E7            [12] 1537 	mov	_SPIRDAT,a
                                   1538 ;	../sdk/src/rf/src/rf_spi_send_read_byte.c:51: while(!(SPIRSTAT & SPIRSTAT_IRQ_RX_FIFO_READY)); //Wait for the transaction to finish
      00034A                       1539 00101$:
      00034A E5 E6            [12] 1540 	mov	a,_SPIRSTAT
      00034C 30 E2 FB         [24] 1541 	jnb	acc.2,00101$
                                   1542 ;	../sdk/src/rf/src/rf_spi_send_read_byte.c:53: IRCON_SB_RFRDY = BIT_FALSE; //Clear the IRQ bit
                                   1543 ;	assignBit
      00034F C2 C0            [12] 1544 	clr	_IRCON_SB_RFRDY
                                   1545 ;	../sdk/src/rf/src/rf_spi_send_read_byte.c:55: return SPIRDAT; //Return the received value
      000351 85 E7 82         [24] 1546 	mov	dpl,_SPIRDAT
      000354 22               [24] 1547 	ret
                                   1548 ;------------------------------------------------------------
                                   1549 ;Allocation info for local variables in function 'rf_set_rx_addr'
                                   1550 ;------------------------------------------------------------
                                   1551 ;len                       Allocated with name '_rf_set_rx_addr_PARM_2'
                                   1552 ;rxpipenum                 Allocated with name '_rf_set_rx_addr_PARM_3'
                                   1553 ;address                   Allocated with name '_rf_set_rx_addr_address_1_70'
                                   1554 ;------------------------------------------------------------
                                   1555 ;	../sdk/src/rf/src/rf_set_rx_addr.c:49: void rf_set_rx_addr(unsigned char * address, unsigned int len, unsigned char rxpipenum)
                                   1556 ;	-----------------------------------------
                                   1557 ;	 function rf_set_rx_addr
                                   1558 ;	-----------------------------------------
      000355                       1559 _rf_set_rx_addr:
      000355 AF F0            [24] 1560 	mov	r7,b
      000357 AE 83            [24] 1561 	mov	r6,dph
      000359 E5 82            [12] 1562 	mov	a,dpl
      00035B 90r00r2F         [24] 1563 	mov	dptr,#_rf_set_rx_addr_address_1_70
      00035E F0               [24] 1564 	movx	@dptr,a
      00035F EE               [12] 1565 	mov	a,r6
      000360 A3               [24] 1566 	inc	dptr
      000361 F0               [24] 1567 	movx	@dptr,a
      000362 EF               [12] 1568 	mov	a,r7
      000363 A3               [24] 1569 	inc	dptr
      000364 F0               [24] 1570 	movx	@dptr,a
                                   1571 ;	../sdk/src/rf/src/rf_set_rx_addr.c:52: if(rxpipenum > 5)
      000365 90r00r2E         [24] 1572 	mov	dptr,#_rf_set_rx_addr_PARM_3
      000368 E0               [24] 1573 	movx	a,@dptr
      000369 FF               [12] 1574 	mov  r7,a
      00036A 24 FA            [12] 1575 	add	a,#0xff - 0x05
      00036C 50 01            [24] 1576 	jnc	00102$
                                   1577 ;	../sdk/src/rf/src/rf_set_rx_addr.c:54: return;
      00036E 22               [24] 1578 	ret
      00036F                       1579 00102$:
                                   1580 ;	../sdk/src/rf/src/rf_set_rx_addr.c:57: rf_write_register(RF_RX_ADDR_P0 + rxpipenum, address, len); //Write the requested address to the requested RX pipe
      00036F 74 0A            [12] 1581 	mov	a,#0x0a
      000371 2F               [12] 1582 	add	a,r7
      000372 FF               [12] 1583 	mov	r7,a
      000373 90r00r2F         [24] 1584 	mov	dptr,#_rf_set_rx_addr_address_1_70
      000376 E0               [24] 1585 	movx	a,@dptr
      000377 FC               [12] 1586 	mov	r4,a
      000378 A3               [24] 1587 	inc	dptr
      000379 E0               [24] 1588 	movx	a,@dptr
      00037A FD               [12] 1589 	mov	r5,a
      00037B A3               [24] 1590 	inc	dptr
      00037C E0               [24] 1591 	movx	a,@dptr
      00037D FE               [12] 1592 	mov	r6,a
      00037E 90r00r2C         [24] 1593 	mov	dptr,#_rf_set_rx_addr_PARM_2
      000381 E0               [24] 1594 	movx	a,@dptr
      000382 FA               [12] 1595 	mov	r2,a
      000383 A3               [24] 1596 	inc	dptr
      000384 E0               [24] 1597 	movx	a,@dptr
      000385 FB               [12] 1598 	mov	r3,a
      000386 90r00r05         [24] 1599 	mov	dptr,#_rf_write_register_PARM_2
      000389 EC               [12] 1600 	mov	a,r4
      00038A F0               [24] 1601 	movx	@dptr,a
      00038B ED               [12] 1602 	mov	a,r5
      00038C A3               [24] 1603 	inc	dptr
      00038D F0               [24] 1604 	movx	@dptr,a
      00038E EE               [12] 1605 	mov	a,r6
      00038F A3               [24] 1606 	inc	dptr
      000390 F0               [24] 1607 	movx	@dptr,a
      000391 90r00r08         [24] 1608 	mov	dptr,#_rf_write_register_PARM_3
      000394 EA               [12] 1609 	mov	a,r2
      000395 F0               [24] 1610 	movx	@dptr,a
      000396 EB               [12] 1611 	mov	a,r3
      000397 A3               [24] 1612 	inc	dptr
      000398 F0               [24] 1613 	movx	@dptr,a
      000399 8F 82            [24] 1614 	mov	dpl,r7
      00039B 02r00r55         [24] 1615 	ljmp	_rf_write_register
                                   1616 ;------------------------------------------------------------
                                   1617 ;Allocation info for local variables in function 'rf_power_down'
                                   1618 ;------------------------------------------------------------
                                   1619 ;config                    Allocated with name '_rf_power_down_config_1_73'
                                   1620 ;------------------------------------------------------------
                                   1621 ;	../sdk/src/rf/src/rf_power_down.c:47: void rf_power_down()
                                   1622 ;	-----------------------------------------
                                   1623 ;	 function rf_power_down
                                   1624 ;	-----------------------------------------
      00039E                       1625 _rf_power_down:
                                   1626 ;	../sdk/src/rf/src/rf_power_down.c:51: rf_clear_ce(); //Clear the CE pin
      00039E C2 E8            [12] 1627 	clr	_RFCON_SB_RFCE 
                                   1628 ;	../sdk/src/rf/src/rf_power_down.c:53: rf_read_register(RF_CONFIG, &config, 1); //Read the current value of the CONFIG register
      0003A0 90r00r25         [24] 1629 	mov	dptr,#_rf_read_register_PARM_2
      0003A3 74r32            [12] 1630 	mov	a,#_rf_power_down_config_1_73
      0003A5 F0               [24] 1631 	movx	@dptr,a
      0003A6 74s00            [12] 1632 	mov	a,#(_rf_power_down_config_1_73 >> 8)
      0003A8 A3               [24] 1633 	inc	dptr
      0003A9 F0               [24] 1634 	movx	@dptr,a
      0003AA E4               [12] 1635 	clr	a
      0003AB A3               [24] 1636 	inc	dptr
      0003AC F0               [24] 1637 	movx	@dptr,a
      0003AD 90r00r28         [24] 1638 	mov	dptr,#_rf_read_register_PARM_3
      0003B0 04               [12] 1639 	inc	a
      0003B1 F0               [24] 1640 	movx	@dptr,a
      0003B2 E4               [12] 1641 	clr	a
      0003B3 A3               [24] 1642 	inc	dptr
      0003B4 F0               [24] 1643 	movx	@dptr,a
      0003B5 75 82 00         [24] 1644 	mov	dpl,#0x00
      0003B8 12r03r05         [24] 1645 	lcall	_rf_read_register
                                   1646 ;	../sdk/src/rf/src/rf_power_down.c:56: if((config & RF_CONFIG_PWR_UP) == 0)
      0003BB 90r00r32         [24] 1647 	mov	dptr,#_rf_power_down_config_1_73
      0003BE E0               [24] 1648 	movx	a,@dptr
      0003BF FF               [12] 1649 	mov	r7,a
      0003C0 20 E1 01         [24] 1650 	jb	acc.1,00102$
                                   1651 ;	../sdk/src/rf/src/rf_power_down.c:58: return;
      0003C3 22               [24] 1652 	ret
      0003C4                       1653 00102$:
                                   1654 ;	../sdk/src/rf/src/rf_power_down.c:62: config &= (~RF_CONFIG_PWR_UP);
      0003C4 90r00r32         [24] 1655 	mov	dptr,#_rf_power_down_config_1_73
      0003C7 74 FD            [12] 1656 	mov	a,#0xfd
      0003C9 5F               [12] 1657 	anl	a,r7
      0003CA F0               [24] 1658 	movx	@dptr,a
                                   1659 ;	../sdk/src/rf/src/rf_power_down.c:63: rf_write_register(RF_CONFIG, &config, 1);
      0003CB 90r00r05         [24] 1660 	mov	dptr,#_rf_write_register_PARM_2
      0003CE 74r32            [12] 1661 	mov	a,#_rf_power_down_config_1_73
      0003D0 F0               [24] 1662 	movx	@dptr,a
      0003D1 74s00            [12] 1663 	mov	a,#(_rf_power_down_config_1_73 >> 8)
      0003D3 A3               [24] 1664 	inc	dptr
      0003D4 F0               [24] 1665 	movx	@dptr,a
      0003D5 E4               [12] 1666 	clr	a
      0003D6 A3               [24] 1667 	inc	dptr
      0003D7 F0               [24] 1668 	movx	@dptr,a
      0003D8 90r00r08         [24] 1669 	mov	dptr,#_rf_write_register_PARM_3
      0003DB 04               [12] 1670 	inc	a
      0003DC F0               [24] 1671 	movx	@dptr,a
      0003DD E4               [12] 1672 	clr	a
      0003DE A3               [24] 1673 	inc	dptr
      0003DF F0               [24] 1674 	movx	@dptr,a
      0003E0 75 82 00         [24] 1675 	mov	dpl,#0x00
      0003E3 02r00r55         [24] 1676 	ljmp	_rf_write_register
                                   1677 ;------------------------------------------------------------
                                   1678 ;Allocation info for local variables in function 'rf_power_up'
                                   1679 ;------------------------------------------------------------
                                   1680 ;rx_active_mode            Allocated with name '_rf_power_up_rx_active_mode_1_75'
                                   1681 ;config                    Allocated with name '_rf_power_up_config_1_76'
                                   1682 ;------------------------------------------------------------
                                   1683 ;	../sdk/src/rf/src/rf_power_up.c:47: void rf_power_up(bool rx_active_mode)
                                   1684 ;	-----------------------------------------
                                   1685 ;	 function rf_power_up
                                   1686 ;	-----------------------------------------
      0003E6                       1687 _rf_power_up:
      0003E6 E5 82            [12] 1688 	mov	a,dpl
      0003E8 90r00r33         [24] 1689 	mov	dptr,#_rf_power_up_rx_active_mode_1_75
      0003EB F0               [24] 1690 	movx	@dptr,a
                                   1691 ;	../sdk/src/rf/src/rf_power_up.c:51: rf_read_register(RF_CONFIG, &config, 1); //Get the current value of the CONFIG register
      0003EC 90r00r25         [24] 1692 	mov	dptr,#_rf_read_register_PARM_2
      0003EF 74r34            [12] 1693 	mov	a,#_rf_power_up_config_1_76
      0003F1 F0               [24] 1694 	movx	@dptr,a
      0003F2 74s00            [12] 1695 	mov	a,#(_rf_power_up_config_1_76 >> 8)
      0003F4 A3               [24] 1696 	inc	dptr
      0003F5 F0               [24] 1697 	movx	@dptr,a
      0003F6 E4               [12] 1698 	clr	a
      0003F7 A3               [24] 1699 	inc	dptr
      0003F8 F0               [24] 1700 	movx	@dptr,a
      0003F9 90r00r28         [24] 1701 	mov	dptr,#_rf_read_register_PARM_3
      0003FC 04               [12] 1702 	inc	a
      0003FD F0               [24] 1703 	movx	@dptr,a
      0003FE E4               [12] 1704 	clr	a
      0003FF A3               [24] 1705 	inc	dptr
      000400 F0               [24] 1706 	movx	@dptr,a
      000401 75 82 00         [24] 1707 	mov	dpl,#0x00
      000404 12r03r05         [24] 1708 	lcall	_rf_read_register
                                   1709 ;	../sdk/src/rf/src/rf_power_up.c:54: if((config & RF_CONFIG_PWR_UP) != 0)
      000407 90r00r34         [24] 1710 	mov	dptr,#_rf_power_up_config_1_76
      00040A E0               [24] 1711 	movx	a,@dptr
      00040B FF               [12] 1712 	mov	r7,a
      00040C 30 E1 01         [24] 1713 	jnb	acc.1,00102$
                                   1714 ;	../sdk/src/rf/src/rf_power_up.c:56: return;
      00040F 22               [24] 1715 	ret
      000410                       1716 00102$:
                                   1717 ;	../sdk/src/rf/src/rf_power_up.c:60: config |= RF_CONFIG_PWR_UP;
      000410 90r00r34         [24] 1718 	mov	dptr,#_rf_power_up_config_1_76
      000413 74 02            [12] 1719 	mov	a,#0x02
      000415 4F               [12] 1720 	orl	a,r7
      000416 F0               [24] 1721 	movx	@dptr,a
                                   1722 ;	../sdk/src/rf/src/rf_power_up.c:61: rf_write_register(RF_CONFIG, &config, 1);
      000417 90r00r05         [24] 1723 	mov	dptr,#_rf_write_register_PARM_2
      00041A 74r34            [12] 1724 	mov	a,#_rf_power_up_config_1_76
      00041C F0               [24] 1725 	movx	@dptr,a
      00041D 74s00            [12] 1726 	mov	a,#(_rf_power_up_config_1_76 >> 8)
      00041F A3               [24] 1727 	inc	dptr
      000420 F0               [24] 1728 	movx	@dptr,a
      000421 E4               [12] 1729 	clr	a
      000422 A3               [24] 1730 	inc	dptr
      000423 F0               [24] 1731 	movx	@dptr,a
      000424 90r00r08         [24] 1732 	mov	dptr,#_rf_write_register_PARM_3
      000427 04               [12] 1733 	inc	a
      000428 F0               [24] 1734 	movx	@dptr,a
      000429 E4               [12] 1735 	clr	a
      00042A A3               [24] 1736 	inc	dptr
      00042B F0               [24] 1737 	movx	@dptr,a
      00042C 75 82 00         [24] 1738 	mov	dpl,#0x00
      00042F 12r00r55         [24] 1739 	lcall	_rf_write_register
                                   1740 ;	../sdk/src/rf/src/rf_power_up.c:63: delay_us(1); //Delay for power up
      000432 90 00 01         [24] 1741 	mov	dptr,#0x0001
      000435 12r07rDE         [24] 1742 	lcall	_delay_us
                                   1743 ;	../sdk/src/rf/src/rf_power_up.c:66: if((config & RF_CONFIG_PRIM_RX) == 0)
      000438 90r00r34         [24] 1744 	mov	dptr,#_rf_power_up_config_1_76
      00043B E0               [24] 1745 	movx	a,@dptr
      00043C FF               [12] 1746 	mov	r7,a
      00043D 20 E0 03         [24] 1747 	jb	acc.0,00107$
                                   1748 ;	../sdk/src/rf/src/rf_power_up.c:68: rf_clear_ce(); //Clear CE for TX mode
      000440 C2 E8            [12] 1749 	clr	_RFCON_SB_RFCE 
      000442 22               [24] 1750 	ret
      000443                       1751 00107$:
                                   1752 ;	../sdk/src/rf/src/rf_power_up.c:73: if(rx_active_mode != false)
      000443 90r00r33         [24] 1753 	mov	dptr,#_rf_power_up_rx_active_mode_1_75
      000446 E0               [24] 1754 	movx	a,@dptr
      000447 60 08            [24] 1755 	jz	00104$
                                   1756 ;	../sdk/src/rf/src/rf_power_up.c:75: rf_set_ce();
      000449 D2 E8            [12] 1757 	setb	_RFCON_SB_RFCE 
      00044B 90 00 04         [24] 1758 	mov	dptr,#0x0004
      00044E 02r07rDE         [24] 1759 	ljmp	_delay_us
      000451                       1760 00104$:
                                   1761 ;	../sdk/src/rf/src/rf_power_up.c:79: rf_clear_ce();
      000451 C2 E8            [12] 1762 	clr	_RFCON_SB_RFCE 
      000453 22               [24] 1763 	ret
                                   1764 ;------------------------------------------------------------
                                   1765 ;Allocation info for local variables in function 'gpio_pin_configure'
                                   1766 ;------------------------------------------------------------
                                   1767 ;gpio_pin_config_options   Allocated with name '_gpio_pin_configure_PARM_2'
                                   1768 ;gpio_pin_id               Allocated with name '_gpio_pin_configure_gpio_pin_id_1_83'
                                   1769 ;------------------------------------------------------------
                                   1770 ;	../sdk/src/gpio/src/gpio_pin_configure.c:47: void gpio_pin_configure(gpio_pin_id_t gpio_pin_id, uint8_t gpio_pin_config_options)
                                   1771 ;	-----------------------------------------
                                   1772 ;	 function gpio_pin_configure
                                   1773 ;	-----------------------------------------
      000454                       1774 _gpio_pin_configure:
      000454 E5 82            [12] 1775 	mov	a,dpl
      000456 90r00r36         [24] 1776 	mov	dptr,#_gpio_pin_configure_gpio_pin_id_1_83
      000459 F0               [24] 1777 	movx	@dptr,a
                                   1778 ;	../sdk/src/gpio/src/gpio_pin_configure.c:50: if(gpio_pin_id <= GPIO_PIN_ID_P0_7)
      00045A E0               [24] 1779 	movx	a,@dptr
      00045B FF               [12] 1780 	mov  r7,a
      00045C 24 F8            [12] 1781 	add	a,#0xff - 0x07
      00045E 50 03            [24] 1782 	jnc	00174$
      000460 02r04rDB         [24] 1783 	ljmp	00134$
      000463                       1784 00174$:
                                   1785 ;	../sdk/src/gpio/src/gpio_pin_configure.c:53: if(gpio_pin_config_options & GPIO_PIN_CONFIG_OPTION_DIR_OUTPUT)
      000463 90r00r35         [24] 1786 	mov	dptr,#_gpio_pin_configure_PARM_2
      000466 E0               [24] 1787 	movx	a,@dptr
      000467 FE               [12] 1788 	mov	r6,a
      000468 30 E0 50         [24] 1789 	jnb	acc.0,00105$
                                   1790 ;	../sdk/src/gpio/src/gpio_pin_configure.c:56: if(gpio_pin_config_options & GPIO_PIN_CONFIG_OPTION_OUTPUT_VAL_SET)
      00046B EE               [12] 1791 	mov	a,r6
      00046C 30 E1 15         [24] 1792 	jnb	acc.1,00102$
                                   1793 ;	../sdk/src/gpio/src/gpio_pin_configure.c:58: gpio_pins_val_set(P0, (1 << (gpio_pin_id % 8)));
      00046F 74 07            [12] 1794 	mov	a,#0x07
      000471 5F               [12] 1795 	anl	a,r7
      000472 F5 F0            [12] 1796 	mov	b,a
      000474 05 F0            [12] 1797 	inc	b
      000476 74 01            [12] 1798 	mov	a,#0x01
      000478 80 02            [24] 1799 	sjmp	00179$
      00047A                       1800 00177$:
      00047A 25 E0            [12] 1801 	add	a,acc
      00047C                       1802 00179$:
      00047C D5 F0 FB         [24] 1803 	djnz	b,00177$
      00047F FD               [12] 1804 	mov	r5,a
      000480 42 80            [12] 1805 	orl	_P0,a
      000482 80 14            [24] 1806 	sjmp	00103$
      000484                       1807 00102$:
                                   1808 ;	../sdk/src/gpio/src/gpio_pin_configure.c:62: gpio_pins_val_clear(P0, (1 << (gpio_pin_id % 8)));
      000484 74 07            [12] 1809 	mov	a,#0x07
      000486 5F               [12] 1810 	anl	a,r7
      000487 F5 F0            [12] 1811 	mov	b,a
      000489 05 F0            [12] 1812 	inc	b
      00048B 74 01            [12] 1813 	mov	a,#0x01
      00048D 80 02            [24] 1814 	sjmp	00182$
      00048F                       1815 00180$:
      00048F 25 E0            [12] 1816 	add	a,acc
      000491                       1817 00182$:
      000491 D5 F0 FB         [24] 1818 	djnz	b,00180$
      000494 F4               [12] 1819 	cpl	a
      000495 FD               [12] 1820 	mov	r5,a
      000496 52 80            [12] 1821 	anl	_P0,a
      000498                       1822 00103$:
                                   1823 ;	../sdk/src/gpio/src/gpio_pin_configure.c:66: P0CON = ((gpio_pin_id % 8) & PXCON_BIT_ADDR_MASK) |
      000498 90r00r36         [24] 1824 	mov	dptr,#_gpio_pin_configure_gpio_pin_id_1_83
      00049B E0               [24] 1825 	movx	a,@dptr
      00049C FD               [12] 1826 	mov	r5,a
      00049D 53 05 07         [24] 1827 	anl	ar5,#0x07
      0004A0 74 07            [12] 1828 	mov	a,#0x07
      0004A2 5D               [12] 1829 	anl	a,r5
      0004A3 FC               [12] 1830 	mov	r4,a
                                   1831 ;	../sdk/src/gpio/src/gpio_pin_configure.c:67: (gpio_pin_config_options & PXCON_PINMODE_MASK);
      0004A4 74 E0            [12] 1832 	mov	a,#0xe0
      0004A6 5E               [12] 1833 	anl	a,r6
      0004A7 4C               [12] 1834 	orl	a,r4
      0004A8 F5 9E            [12] 1835 	mov	_P0CON,a
                                   1836 ;	../sdk/src/gpio/src/gpio_pin_configure.c:70: gpio_pins_dir_output(P0DIR, (1 << (gpio_pin_id % 8)));
      0004AA 8D F0            [24] 1837 	mov	b,r5
      0004AC 05 F0            [12] 1838 	inc	b
      0004AE 74 01            [12] 1839 	mov	a,#0x01
      0004B0 80 02            [24] 1840 	sjmp	00185$
      0004B2                       1841 00183$:
      0004B2 25 E0            [12] 1842 	add	a,acc
      0004B4                       1843 00185$:
      0004B4 D5 F0 FB         [24] 1844 	djnz	b,00183$
      0004B7 F4               [12] 1845 	cpl	a
      0004B8 52 93            [12] 1846 	anl	_P0DIR,a
      0004BA 22               [24] 1847 	ret
      0004BB                       1848 00105$:
                                   1849 ;	../sdk/src/gpio/src/gpio_pin_configure.c:75: P0CON = ((gpio_pin_id % 8) & PXCON_BIT_ADDR_MASK) |
      0004BB 74 07            [12] 1850 	mov	a,#0x07
      0004BD 5F               [12] 1851 	anl	a,r7
      0004BE FD               [12] 1852 	mov	r5,a
      0004BF 74 07            [12] 1853 	mov	a,#0x07
      0004C1 5D               [12] 1854 	anl	a,r5
      0004C2 44 10            [12] 1855 	orl	a,#0x10
      0004C4 FC               [12] 1856 	mov	r4,a
                                   1857 ;	../sdk/src/gpio/src/gpio_pin_configure.c:77: (gpio_pin_config_options & PXCON_PINMODE_MASK);
      0004C5 74 E0            [12] 1858 	mov	a,#0xe0
      0004C7 5E               [12] 1859 	anl	a,r6
      0004C8 4C               [12] 1860 	orl	a,r4
      0004C9 F5 9E            [12] 1861 	mov	_P0CON,a
                                   1862 ;	../sdk/src/gpio/src/gpio_pin_configure.c:80: gpio_pins_dir_input(P0DIR, (1 << (gpio_pin_id % 8)));
      0004CB 8D F0            [24] 1863 	mov	b,r5
      0004CD 05 F0            [12] 1864 	inc	b
      0004CF 74 01            [12] 1865 	mov	a,#0x01
      0004D1 80 02            [24] 1866 	sjmp	00188$
      0004D3                       1867 00186$:
      0004D3 25 E0            [12] 1868 	add	a,acc
      0004D5                       1869 00188$:
      0004D5 D5 F0 FB         [24] 1870 	djnz	b,00186$
      0004D8 42 93            [12] 1871 	orl	_P0DIR,a
      0004DA 22               [24] 1872 	ret
      0004DB                       1873 00134$:
                                   1874 ;	../sdk/src/gpio/src/gpio_pin_configure.c:83: else if(gpio_pin_id <= GPIO_PIN_ID_P1_7)
      0004DB EF               [12] 1875 	mov	a,r7
      0004DC 24 F0            [12] 1876 	add	a,#0xff - 0x0f
      0004DE 50 03            [24] 1877 	jnc	00189$
      0004E0 02r05r5B         [24] 1878 	ljmp	00131$
      0004E3                       1879 00189$:
                                   1880 ;	../sdk/src/gpio/src/gpio_pin_configure.c:86: if(gpio_pin_config_options & GPIO_PIN_CONFIG_OPTION_DIR_OUTPUT)
      0004E3 90r00r35         [24] 1881 	mov	dptr,#_gpio_pin_configure_PARM_2
      0004E6 E0               [24] 1882 	movx	a,@dptr
      0004E7 FE               [12] 1883 	mov	r6,a
      0004E8 30 E0 50         [24] 1884 	jnb	acc.0,00111$
                                   1885 ;	../sdk/src/gpio/src/gpio_pin_configure.c:89: if(gpio_pin_config_options & GPIO_PIN_CONFIG_OPTION_OUTPUT_VAL_SET)
      0004EB EE               [12] 1886 	mov	a,r6
      0004EC 30 E1 15         [24] 1887 	jnb	acc.1,00108$
                                   1888 ;	../sdk/src/gpio/src/gpio_pin_configure.c:91: gpio_pins_val_set(P1, (1 << (gpio_pin_id % 8)));
      0004EF 74 07            [12] 1889 	mov	a,#0x07
      0004F1 5F               [12] 1890 	anl	a,r7
      0004F2 F5 F0            [12] 1891 	mov	b,a
      0004F4 05 F0            [12] 1892 	inc	b
      0004F6 74 01            [12] 1893 	mov	a,#0x01
      0004F8 80 02            [24] 1894 	sjmp	00194$
      0004FA                       1895 00192$:
      0004FA 25 E0            [12] 1896 	add	a,acc
      0004FC                       1897 00194$:
      0004FC D5 F0 FB         [24] 1898 	djnz	b,00192$
      0004FF FD               [12] 1899 	mov	r5,a
      000500 42 90            [12] 1900 	orl	_P1,a
      000502 80 14            [24] 1901 	sjmp	00109$
      000504                       1902 00108$:
                                   1903 ;	../sdk/src/gpio/src/gpio_pin_configure.c:95: gpio_pins_val_clear(P1, (1 << (gpio_pin_id % 8)));
      000504 74 07            [12] 1904 	mov	a,#0x07
      000506 5F               [12] 1905 	anl	a,r7
      000507 F5 F0            [12] 1906 	mov	b,a
      000509 05 F0            [12] 1907 	inc	b
      00050B 74 01            [12] 1908 	mov	a,#0x01
      00050D 80 02            [24] 1909 	sjmp	00197$
      00050F                       1910 00195$:
      00050F 25 E0            [12] 1911 	add	a,acc
      000511                       1912 00197$:
      000511 D5 F0 FB         [24] 1913 	djnz	b,00195$
      000514 F4               [12] 1914 	cpl	a
      000515 FD               [12] 1915 	mov	r5,a
      000516 52 90            [12] 1916 	anl	_P1,a
      000518                       1917 00109$:
                                   1918 ;	../sdk/src/gpio/src/gpio_pin_configure.c:99: P1CON = ((gpio_pin_id % 8) & PXCON_BIT_ADDR_MASK) |
      000518 90r00r36         [24] 1919 	mov	dptr,#_gpio_pin_configure_gpio_pin_id_1_83
      00051B E0               [24] 1920 	movx	a,@dptr
      00051C FD               [12] 1921 	mov	r5,a
      00051D 53 05 07         [24] 1922 	anl	ar5,#0x07
      000520 74 07            [12] 1923 	mov	a,#0x07
      000522 5D               [12] 1924 	anl	a,r5
      000523 FC               [12] 1925 	mov	r4,a
                                   1926 ;	../sdk/src/gpio/src/gpio_pin_configure.c:100: (gpio_pin_config_options & PXCON_PINMODE_MASK);
      000524 74 E0            [12] 1927 	mov	a,#0xe0
      000526 5E               [12] 1928 	anl	a,r6
      000527 4C               [12] 1929 	orl	a,r4
      000528 F5 9F            [12] 1930 	mov	_P1CON,a
                                   1931 ;	../sdk/src/gpio/src/gpio_pin_configure.c:103: gpio_pins_dir_output(P1DIR, (1 << (gpio_pin_id % 8)));
      00052A 8D F0            [24] 1932 	mov	b,r5
      00052C 05 F0            [12] 1933 	inc	b
      00052E 74 01            [12] 1934 	mov	a,#0x01
      000530 80 02            [24] 1935 	sjmp	00200$
      000532                       1936 00198$:
      000532 25 E0            [12] 1937 	add	a,acc
      000534                       1938 00200$:
      000534 D5 F0 FB         [24] 1939 	djnz	b,00198$
      000537 F4               [12] 1940 	cpl	a
      000538 52 94            [12] 1941 	anl	_P1DIR,a
      00053A 22               [24] 1942 	ret
      00053B                       1943 00111$:
                                   1944 ;	../sdk/src/gpio/src/gpio_pin_configure.c:108: P1CON = ((gpio_pin_id % 8) & PXCON_BIT_ADDR_MASK) |
      00053B 74 07            [12] 1945 	mov	a,#0x07
      00053D 5F               [12] 1946 	anl	a,r7
      00053E FD               [12] 1947 	mov	r5,a
      00053F 74 07            [12] 1948 	mov	a,#0x07
      000541 5D               [12] 1949 	anl	a,r5
      000542 44 10            [12] 1950 	orl	a,#0x10
      000544 FC               [12] 1951 	mov	r4,a
                                   1952 ;	../sdk/src/gpio/src/gpio_pin_configure.c:110: (gpio_pin_config_options & PXCON_PINMODE_MASK);
      000545 74 E0            [12] 1953 	mov	a,#0xe0
      000547 5E               [12] 1954 	anl	a,r6
      000548 4C               [12] 1955 	orl	a,r4
      000549 F5 9F            [12] 1956 	mov	_P1CON,a
                                   1957 ;	../sdk/src/gpio/src/gpio_pin_configure.c:113: gpio_pins_dir_input(P1DIR, (1 << (gpio_pin_id % 8)));
      00054B 8D F0            [24] 1958 	mov	b,r5
      00054D 05 F0            [12] 1959 	inc	b
      00054F 74 01            [12] 1960 	mov	a,#0x01
      000551 80 02            [24] 1961 	sjmp	00203$
      000553                       1962 00201$:
      000553 25 E0            [12] 1963 	add	a,acc
      000555                       1964 00203$:
      000555 D5 F0 FB         [24] 1965 	djnz	b,00201$
      000558 42 94            [12] 1966 	orl	_P1DIR,a
      00055A 22               [24] 1967 	ret
      00055B                       1968 00131$:
                                   1969 ;	../sdk/src/gpio/src/gpio_pin_configure.c:116: else if(gpio_pin_id <= GPIO_PIN_ID_P2_7)
      00055B EF               [12] 1970 	mov	a,r7
      00055C 24 E8            [12] 1971 	add	a,#0xff - 0x17
      00055E 50 03            [24] 1972 	jnc	00204$
      000560 02r05rDB         [24] 1973 	ljmp	00128$
      000563                       1974 00204$:
                                   1975 ;	../sdk/src/gpio/src/gpio_pin_configure.c:119: if(gpio_pin_config_options & GPIO_PIN_CONFIG_OPTION_DIR_OUTPUT)
      000563 90r00r35         [24] 1976 	mov	dptr,#_gpio_pin_configure_PARM_2
      000566 E0               [24] 1977 	movx	a,@dptr
      000567 FE               [12] 1978 	mov	r6,a
      000568 30 E0 50         [24] 1979 	jnb	acc.0,00117$
                                   1980 ;	../sdk/src/gpio/src/gpio_pin_configure.c:122: if(gpio_pin_config_options & GPIO_PIN_CONFIG_OPTION_OUTPUT_VAL_SET)
      00056B EE               [12] 1981 	mov	a,r6
      00056C 30 E1 15         [24] 1982 	jnb	acc.1,00114$
                                   1983 ;	../sdk/src/gpio/src/gpio_pin_configure.c:124: gpio_pins_val_set(P2, (1 << (gpio_pin_id % 8)));
      00056F 74 07            [12] 1984 	mov	a,#0x07
      000571 5F               [12] 1985 	anl	a,r7
      000572 F5 F0            [12] 1986 	mov	b,a
      000574 05 F0            [12] 1987 	inc	b
      000576 74 01            [12] 1988 	mov	a,#0x01
      000578 80 02            [24] 1989 	sjmp	00209$
      00057A                       1990 00207$:
      00057A 25 E0            [12] 1991 	add	a,acc
      00057C                       1992 00209$:
      00057C D5 F0 FB         [24] 1993 	djnz	b,00207$
      00057F FD               [12] 1994 	mov	r5,a
      000580 42 A0            [12] 1995 	orl	_P2,a
      000582 80 14            [24] 1996 	sjmp	00115$
      000584                       1997 00114$:
                                   1998 ;	../sdk/src/gpio/src/gpio_pin_configure.c:128: gpio_pins_val_clear(P2, (1 << (gpio_pin_id % 8)));
      000584 74 07            [12] 1999 	mov	a,#0x07
      000586 5F               [12] 2000 	anl	a,r7
      000587 F5 F0            [12] 2001 	mov	b,a
      000589 05 F0            [12] 2002 	inc	b
      00058B 74 01            [12] 2003 	mov	a,#0x01
      00058D 80 02            [24] 2004 	sjmp	00212$
      00058F                       2005 00210$:
      00058F 25 E0            [12] 2006 	add	a,acc
      000591                       2007 00212$:
      000591 D5 F0 FB         [24] 2008 	djnz	b,00210$
      000594 F4               [12] 2009 	cpl	a
      000595 FD               [12] 2010 	mov	r5,a
      000596 52 A0            [12] 2011 	anl	_P2,a
      000598                       2012 00115$:
                                   2013 ;	../sdk/src/gpio/src/gpio_pin_configure.c:132: P2CON = ((gpio_pin_id % 8) & PXCON_BIT_ADDR_MASK) |
      000598 90r00r36         [24] 2014 	mov	dptr,#_gpio_pin_configure_gpio_pin_id_1_83
      00059B E0               [24] 2015 	movx	a,@dptr
      00059C FD               [12] 2016 	mov	r5,a
      00059D 53 05 07         [24] 2017 	anl	ar5,#0x07
      0005A0 74 07            [12] 2018 	mov	a,#0x07
      0005A2 5D               [12] 2019 	anl	a,r5
      0005A3 FC               [12] 2020 	mov	r4,a
                                   2021 ;	../sdk/src/gpio/src/gpio_pin_configure.c:133: (gpio_pin_config_options & PXCON_PINMODE_MASK);
      0005A4 74 E0            [12] 2022 	mov	a,#0xe0
      0005A6 5E               [12] 2023 	anl	a,r6
      0005A7 4C               [12] 2024 	orl	a,r4
      0005A8 F5 97            [12] 2025 	mov	_P2CON,a
                                   2026 ;	../sdk/src/gpio/src/gpio_pin_configure.c:136: gpio_pins_dir_output(P2DIR, (1 << (gpio_pin_id % 8)));
      0005AA 8D F0            [24] 2027 	mov	b,r5
      0005AC 05 F0            [12] 2028 	inc	b
      0005AE 74 01            [12] 2029 	mov	a,#0x01
      0005B0 80 02            [24] 2030 	sjmp	00215$
      0005B2                       2031 00213$:
      0005B2 25 E0            [12] 2032 	add	a,acc
      0005B4                       2033 00215$:
      0005B4 D5 F0 FB         [24] 2034 	djnz	b,00213$
      0005B7 F4               [12] 2035 	cpl	a
      0005B8 52 95            [12] 2036 	anl	_P2DIR,a
      0005BA 22               [24] 2037 	ret
      0005BB                       2038 00117$:
                                   2039 ;	../sdk/src/gpio/src/gpio_pin_configure.c:141: P2CON = ((gpio_pin_id % 8) & PXCON_BIT_ADDR_MASK) |
      0005BB 74 07            [12] 2040 	mov	a,#0x07
      0005BD 5F               [12] 2041 	anl	a,r7
      0005BE FD               [12] 2042 	mov	r5,a
      0005BF 74 07            [12] 2043 	mov	a,#0x07
      0005C1 5D               [12] 2044 	anl	a,r5
      0005C2 44 10            [12] 2045 	orl	a,#0x10
      0005C4 FC               [12] 2046 	mov	r4,a
                                   2047 ;	../sdk/src/gpio/src/gpio_pin_configure.c:143: (gpio_pin_config_options & PXCON_PINMODE_MASK);
      0005C5 74 E0            [12] 2048 	mov	a,#0xe0
      0005C7 5E               [12] 2049 	anl	a,r6
      0005C8 4C               [12] 2050 	orl	a,r4
      0005C9 F5 97            [12] 2051 	mov	_P2CON,a
                                   2052 ;	../sdk/src/gpio/src/gpio_pin_configure.c:146: gpio_pins_dir_input(P2DIR, (1 << (gpio_pin_id % 8)));
      0005CB 8D F0            [24] 2053 	mov	b,r5
      0005CD 05 F0            [12] 2054 	inc	b
      0005CF 74 01            [12] 2055 	mov	a,#0x01
      0005D1 80 02            [24] 2056 	sjmp	00218$
      0005D3                       2057 00216$:
      0005D3 25 E0            [12] 2058 	add	a,acc
      0005D5                       2059 00218$:
      0005D5 D5 F0 FB         [24] 2060 	djnz	b,00216$
      0005D8 42 95            [12] 2061 	orl	_P2DIR,a
      0005DA 22               [24] 2062 	ret
      0005DB                       2063 00128$:
                                   2064 ;	../sdk/src/gpio/src/gpio_pin_configure.c:149: else if(gpio_pin_id <= GPIO_PIN_ID_P3_6)
      0005DB EF               [12] 2065 	mov	a,r7
      0005DC 24 E1            [12] 2066 	add	a,#0xff - 0x1e
      0005DE 50 01            [24] 2067 	jnc	00219$
      0005E0 22               [24] 2068 	ret
      0005E1                       2069 00219$:
                                   2070 ;	../sdk/src/gpio/src/gpio_pin_configure.c:152: if(gpio_pin_config_options & GPIO_PIN_CONFIG_OPTION_DIR_OUTPUT)
      0005E1 90r00r35         [24] 2071 	mov	dptr,#_gpio_pin_configure_PARM_2
      0005E4 E0               [24] 2072 	movx	a,@dptr
      0005E5 FE               [12] 2073 	mov	r6,a
      0005E6 30 E0 50         [24] 2074 	jnb	acc.0,00123$
                                   2075 ;	../sdk/src/gpio/src/gpio_pin_configure.c:155: if(gpio_pin_config_options & GPIO_PIN_CONFIG_OPTION_OUTPUT_VAL_SET)
      0005E9 EE               [12] 2076 	mov	a,r6
      0005EA 30 E1 15         [24] 2077 	jnb	acc.1,00120$
                                   2078 ;	../sdk/src/gpio/src/gpio_pin_configure.c:157: gpio_pins_val_set(P3, (1 << (gpio_pin_id % 8)));
      0005ED 74 07            [12] 2079 	mov	a,#0x07
      0005EF 5F               [12] 2080 	anl	a,r7
      0005F0 F5 F0            [12] 2081 	mov	b,a
      0005F2 05 F0            [12] 2082 	inc	b
      0005F4 74 01            [12] 2083 	mov	a,#0x01
      0005F6 80 02            [24] 2084 	sjmp	00224$
      0005F8                       2085 00222$:
      0005F8 25 E0            [12] 2086 	add	a,acc
      0005FA                       2087 00224$:
      0005FA D5 F0 FB         [24] 2088 	djnz	b,00222$
      0005FD FD               [12] 2089 	mov	r5,a
      0005FE 42 B0            [12] 2090 	orl	_P3,a
      000600 80 14            [24] 2091 	sjmp	00121$
      000602                       2092 00120$:
                                   2093 ;	../sdk/src/gpio/src/gpio_pin_configure.c:161: gpio_pins_val_clear(P3, (1 << (gpio_pin_id % 8)));
      000602 74 07            [12] 2094 	mov	a,#0x07
      000604 5F               [12] 2095 	anl	a,r7
      000605 F5 F0            [12] 2096 	mov	b,a
      000607 05 F0            [12] 2097 	inc	b
      000609 74 01            [12] 2098 	mov	a,#0x01
      00060B 80 02            [24] 2099 	sjmp	00227$
      00060D                       2100 00225$:
      00060D 25 E0            [12] 2101 	add	a,acc
      00060F                       2102 00227$:
      00060F D5 F0 FB         [24] 2103 	djnz	b,00225$
      000612 F4               [12] 2104 	cpl	a
      000613 FD               [12] 2105 	mov	r5,a
      000614 52 B0            [12] 2106 	anl	_P3,a
      000616                       2107 00121$:
                                   2108 ;	../sdk/src/gpio/src/gpio_pin_configure.c:165: P3CON = ((gpio_pin_id % 8) & PXCON_BIT_ADDR_MASK) |
      000616 90r00r36         [24] 2109 	mov	dptr,#_gpio_pin_configure_gpio_pin_id_1_83
      000619 E0               [24] 2110 	movx	a,@dptr
      00061A FD               [12] 2111 	mov	r5,a
      00061B 53 05 07         [24] 2112 	anl	ar5,#0x07
      00061E 74 07            [12] 2113 	mov	a,#0x07
      000620 5D               [12] 2114 	anl	a,r5
      000621 FC               [12] 2115 	mov	r4,a
                                   2116 ;	../sdk/src/gpio/src/gpio_pin_configure.c:166: (gpio_pin_config_options & PXCON_PINMODE_MASK);
      000622 74 E0            [12] 2117 	mov	a,#0xe0
      000624 5E               [12] 2118 	anl	a,r6
      000625 4C               [12] 2119 	orl	a,r4
      000626 F5 8F            [12] 2120 	mov	_P3CON,a
                                   2121 ;	../sdk/src/gpio/src/gpio_pin_configure.c:169: gpio_pins_dir_output(P3DIR, (1 << (gpio_pin_id % 8)));
      000628 8D F0            [24] 2122 	mov	b,r5
      00062A 05 F0            [12] 2123 	inc	b
      00062C 74 01            [12] 2124 	mov	a,#0x01
      00062E 80 02            [24] 2125 	sjmp	00230$
      000630                       2126 00228$:
      000630 25 E0            [12] 2127 	add	a,acc
      000632                       2128 00230$:
      000632 D5 F0 FB         [24] 2129 	djnz	b,00228$
      000635 F4               [12] 2130 	cpl	a
      000636 52 96            [12] 2131 	anl	_P3DIR,a
      000638 22               [24] 2132 	ret
      000639                       2133 00123$:
                                   2134 ;	../sdk/src/gpio/src/gpio_pin_configure.c:174: P3CON = ((gpio_pin_id % 8) & PXCON_BIT_ADDR_MASK) |
      000639 53 07 07         [24] 2135 	anl	ar7,#0x07
      00063C 74 07            [12] 2136 	mov	a,#0x07
      00063E 5F               [12] 2137 	anl	a,r7
      00063F 44 10            [12] 2138 	orl	a,#0x10
      000641 FD               [12] 2139 	mov	r5,a
                                   2140 ;	../sdk/src/gpio/src/gpio_pin_configure.c:176: (gpio_pin_config_options & PXCON_PINMODE_MASK);
      000642 74 E0            [12] 2141 	mov	a,#0xe0
      000644 5E               [12] 2142 	anl	a,r6
      000645 4D               [12] 2143 	orl	a,r5
      000646 F5 8F            [12] 2144 	mov	_P3CON,a
                                   2145 ;	../sdk/src/gpio/src/gpio_pin_configure.c:179: gpio_pins_dir_input(P3DIR, (1 << (gpio_pin_id % 8)));
      000648 8F F0            [24] 2146 	mov	b,r7
      00064A 05 F0            [12] 2147 	inc	b
      00064C 74 01            [12] 2148 	mov	a,#0x01
      00064E 80 02            [24] 2149 	sjmp	00233$
      000650                       2150 00231$:
      000650 25 E0            [12] 2151 	add	a,acc
      000652                       2152 00233$:
      000652 D5 F0 FB         [24] 2153 	djnz	b,00231$
      000655 42 96            [12] 2154 	orl	_P3DIR,a
      000657 22               [24] 2155 	ret
                                   2156 ;------------------------------------------------------------
                                   2157 ;Allocation info for local variables in function 'gpio_pin_val_read'
                                   2158 ;------------------------------------------------------------
                                   2159 ;gpio_pin_id               Allocated with name '_gpio_pin_val_read_gpio_pin_id_1_105'
                                   2160 ;value                     Allocated with name '_gpio_pin_val_read_value_1_106'
                                   2161 ;------------------------------------------------------------
                                   2162 ;	../sdk/src/gpio/src/gpio_pin_val_read.c:46: bool gpio_pin_val_read(gpio_pin_id_t gpio_pin_id)
                                   2163 ;	-----------------------------------------
                                   2164 ;	 function gpio_pin_val_read
                                   2165 ;	-----------------------------------------
      000658                       2166 _gpio_pin_val_read:
      000658 E5 82            [12] 2167 	mov	a,dpl
      00065A 90r00r37         [24] 2168 	mov	dptr,#_gpio_pin_val_read_gpio_pin_id_1_105
      00065D F0               [24] 2169 	movx	@dptr,a
                                   2170 ;	../sdk/src/gpio/src/gpio_pin_val_read.c:48: bool value = false;
      00065E 90r00r38         [24] 2171 	mov	dptr,#_gpio_pin_val_read_value_1_106
      000661 E4               [12] 2172 	clr	a
      000662 F0               [24] 2173 	movx	@dptr,a
                                   2174 ;	../sdk/src/gpio/src/gpio_pin_val_read.c:51: if(gpio_pin_id <= GPIO_PIN_ID_P0_7)
      000663 90r00r37         [24] 2175 	mov	dptr,#_gpio_pin_val_read_gpio_pin_id_1_105
      000666 E0               [24] 2176 	movx	a,@dptr
      000667 FF               [12] 2177 	mov  r7,a
      000668 24 F8            [12] 2178 	add	a,#0xff - 0x07
      00066A 40 19            [24] 2179 	jc	00110$
                                   2180 ;	../sdk/src/gpio/src/gpio_pin_val_read.c:53: value = P0 & (1 << (gpio_pin_id % 8));
      00066C 74 07            [12] 2181 	mov	a,#0x07
      00066E 5F               [12] 2182 	anl	a,r7
      00066F F5 F0            [12] 2183 	mov	b,a
      000671 05 F0            [12] 2184 	inc	b
      000673 74 01            [12] 2185 	mov	a,#0x01
      000675 80 02            [24] 2186 	sjmp	00135$
      000677                       2187 00133$:
      000677 25 E0            [12] 2188 	add	a,acc
      000679                       2189 00135$:
      000679 D5 F0 FB         [24] 2190 	djnz	b,00133$
      00067C FE               [12] 2191 	mov	r6,a
      00067D 90r00r38         [24] 2192 	mov	dptr,#_gpio_pin_val_read_value_1_106
      000680 55 80            [12] 2193 	anl	a,_P0
      000682 F0               [24] 2194 	movx	@dptr,a
      000683 80 58            [24] 2195 	sjmp	00111$
      000685                       2196 00110$:
                                   2197 ;	../sdk/src/gpio/src/gpio_pin_val_read.c:55: else if(gpio_pin_id <= GPIO_PIN_ID_P1_7)
      000685 EF               [12] 2198 	mov	a,r7
      000686 24 F0            [12] 2199 	add	a,#0xff - 0x0f
      000688 40 19            [24] 2200 	jc	00107$
                                   2201 ;	../sdk/src/gpio/src/gpio_pin_val_read.c:57: value = P1 & (1 << (gpio_pin_id % 8));
      00068A 74 07            [12] 2202 	mov	a,#0x07
      00068C 5F               [12] 2203 	anl	a,r7
      00068D F5 F0            [12] 2204 	mov	b,a
      00068F 05 F0            [12] 2205 	inc	b
      000691 74 01            [12] 2206 	mov	a,#0x01
      000693 80 02            [24] 2207 	sjmp	00139$
      000695                       2208 00137$:
      000695 25 E0            [12] 2209 	add	a,acc
      000697                       2210 00139$:
      000697 D5 F0 FB         [24] 2211 	djnz	b,00137$
      00069A FE               [12] 2212 	mov	r6,a
      00069B 90r00r38         [24] 2213 	mov	dptr,#_gpio_pin_val_read_value_1_106
      00069E 55 90            [12] 2214 	anl	a,_P1
      0006A0 F0               [24] 2215 	movx	@dptr,a
      0006A1 80 3A            [24] 2216 	sjmp	00111$
      0006A3                       2217 00107$:
                                   2218 ;	../sdk/src/gpio/src/gpio_pin_val_read.c:59: else if(gpio_pin_id <= GPIO_PIN_ID_P2_7)
      0006A3 EF               [12] 2219 	mov	a,r7
      0006A4 24 E8            [12] 2220 	add	a,#0xff - 0x17
      0006A6 40 19            [24] 2221 	jc	00104$
                                   2222 ;	../sdk/src/gpio/src/gpio_pin_val_read.c:61: value = P2 & (1 << (gpio_pin_id % 8));
      0006A8 74 07            [12] 2223 	mov	a,#0x07
      0006AA 5F               [12] 2224 	anl	a,r7
      0006AB F5 F0            [12] 2225 	mov	b,a
      0006AD 05 F0            [12] 2226 	inc	b
      0006AF 74 01            [12] 2227 	mov	a,#0x01
      0006B1 80 02            [24] 2228 	sjmp	00143$
      0006B3                       2229 00141$:
      0006B3 25 E0            [12] 2230 	add	a,acc
      0006B5                       2231 00143$:
      0006B5 D5 F0 FB         [24] 2232 	djnz	b,00141$
      0006B8 FE               [12] 2233 	mov	r6,a
      0006B9 90r00r38         [24] 2234 	mov	dptr,#_gpio_pin_val_read_value_1_106
      0006BC 55 A0            [12] 2235 	anl	a,_P2
      0006BE F0               [24] 2236 	movx	@dptr,a
      0006BF 80 1C            [24] 2237 	sjmp	00111$
      0006C1                       2238 00104$:
                                   2239 ;	../sdk/src/gpio/src/gpio_pin_val_read.c:63: else if(gpio_pin_id <= GPIO_PIN_ID_P3_6)
      0006C1 EF               [12] 2240 	mov	a,r7
      0006C2 24 E1            [12] 2241 	add	a,#0xff - 0x1e
      0006C4 40 17            [24] 2242 	jc	00111$
                                   2243 ;	../sdk/src/gpio/src/gpio_pin_val_read.c:65: value = P3 & (1 << (gpio_pin_id % 8));
      0006C6 74 07            [12] 2244 	mov	a,#0x07
      0006C8 5F               [12] 2245 	anl	a,r7
      0006C9 F5 F0            [12] 2246 	mov	b,a
      0006CB 05 F0            [12] 2247 	inc	b
      0006CD 74 01            [12] 2248 	mov	a,#0x01
      0006CF 80 02            [24] 2249 	sjmp	00147$
      0006D1                       2250 00145$:
      0006D1 25 E0            [12] 2251 	add	a,acc
      0006D3                       2252 00147$:
      0006D3 D5 F0 FB         [24] 2253 	djnz	b,00145$
      0006D6 FF               [12] 2254 	mov	r7,a
      0006D7 90r00r38         [24] 2255 	mov	dptr,#_gpio_pin_val_read_value_1_106
      0006DA 55 B0            [12] 2256 	anl	a,_P3
      0006DC F0               [24] 2257 	movx	@dptr,a
      0006DD                       2258 00111$:
                                   2259 ;	../sdk/src/gpio/src/gpio_pin_val_read.c:68: if(value)
      0006DD 90r00r38         [24] 2260 	mov	dptr,#_gpio_pin_val_read_value_1_106
      0006E0 E0               [24] 2261 	movx	a,@dptr
      0006E1 60 04            [24] 2262 	jz	00113$
                                   2263 ;	../sdk/src/gpio/src/gpio_pin_val_read.c:70: return true;
      0006E3 75 82 01         [24] 2264 	mov	dpl,#0x01
      0006E6 22               [24] 2265 	ret
      0006E7                       2266 00113$:
                                   2267 ;	../sdk/src/gpio/src/gpio_pin_val_read.c:74: return false;
      0006E7 75 82 00         [24] 2268 	mov	dpl,#0x00
      0006EA 22               [24] 2269 	ret
                                   2270 ;------------------------------------------------------------
                                   2271 ;Allocation info for local variables in function 'gpio_pin_val_clear'
                                   2272 ;------------------------------------------------------------
                                   2273 ;gpio_pin_id               Allocated with name '_gpio_pin_val_clear_gpio_pin_id_1_113'
                                   2274 ;------------------------------------------------------------
                                   2275 ;	../sdk/src/gpio/src/gpio_pin_val_clear.c:46: void gpio_pin_val_clear(gpio_pin_id_t gpio_pin_id)
                                   2276 ;	-----------------------------------------
                                   2277 ;	 function gpio_pin_val_clear
                                   2278 ;	-----------------------------------------
      0006EB                       2279 _gpio_pin_val_clear:
      0006EB E5 82            [12] 2280 	mov	a,dpl
      0006ED 90r00r39         [24] 2281 	mov	dptr,#_gpio_pin_val_clear_gpio_pin_id_1_113
      0006F0 F0               [24] 2282 	movx	@dptr,a
                                   2283 ;	../sdk/src/gpio/src/gpio_pin_val_clear.c:49: if(gpio_pin_id <= GPIO_PIN_ID_P0_7)
      0006F1 E0               [24] 2284 	movx	a,@dptr
      0006F2 FF               [12] 2285 	mov  r7,a
      0006F3 24 F8            [12] 2286 	add	a,#0xff - 0x07
      0006F5 40 14            [24] 2287 	jc	00110$
                                   2288 ;	../sdk/src/gpio/src/gpio_pin_val_clear.c:51: gpio_pins_val_clear(P0, (1 << (gpio_pin_id % 8)));
      0006F7 74 07            [12] 2289 	mov	a,#0x07
      0006F9 5F               [12] 2290 	anl	a,r7
      0006FA F5 F0            [12] 2291 	mov	b,a
      0006FC 05 F0            [12] 2292 	inc	b
      0006FE 74 01            [12] 2293 	mov	a,#0x01
      000700 80 02            [24] 2294 	sjmp	00129$
      000702                       2295 00127$:
      000702 25 E0            [12] 2296 	add	a,acc
      000704                       2297 00129$:
      000704 D5 F0 FB         [24] 2298 	djnz	b,00127$
      000707 F4               [12] 2299 	cpl	a
      000708 52 80            [12] 2300 	anl	_P0,a
      00070A 22               [24] 2301 	ret
      00070B                       2302 00110$:
                                   2303 ;	../sdk/src/gpio/src/gpio_pin_val_clear.c:53: else if(gpio_pin_id <= GPIO_PIN_ID_P1_7)
      00070B EF               [12] 2304 	mov	a,r7
      00070C 24 F0            [12] 2305 	add	a,#0xff - 0x0f
      00070E 40 14            [24] 2306 	jc	00107$
                                   2307 ;	../sdk/src/gpio/src/gpio_pin_val_clear.c:55: gpio_pins_val_clear(P1, (1 << (gpio_pin_id % 8)));
      000710 74 07            [12] 2308 	mov	a,#0x07
      000712 5F               [12] 2309 	anl	a,r7
      000713 F5 F0            [12] 2310 	mov	b,a
      000715 05 F0            [12] 2311 	inc	b
      000717 74 01            [12] 2312 	mov	a,#0x01
      000719 80 02            [24] 2313 	sjmp	00133$
      00071B                       2314 00131$:
      00071B 25 E0            [12] 2315 	add	a,acc
      00071D                       2316 00133$:
      00071D D5 F0 FB         [24] 2317 	djnz	b,00131$
      000720 F4               [12] 2318 	cpl	a
      000721 52 90            [12] 2319 	anl	_P1,a
      000723 22               [24] 2320 	ret
      000724                       2321 00107$:
                                   2322 ;	../sdk/src/gpio/src/gpio_pin_val_clear.c:57: else if(gpio_pin_id <= GPIO_PIN_ID_P2_7)
      000724 EF               [12] 2323 	mov	a,r7
      000725 24 E8            [12] 2324 	add	a,#0xff - 0x17
      000727 40 14            [24] 2325 	jc	00104$
                                   2326 ;	../sdk/src/gpio/src/gpio_pin_val_clear.c:59: gpio_pins_val_clear(P2, (1 << (gpio_pin_id % 8)));
      000729 74 07            [12] 2327 	mov	a,#0x07
      00072B 5F               [12] 2328 	anl	a,r7
      00072C F5 F0            [12] 2329 	mov	b,a
      00072E 05 F0            [12] 2330 	inc	b
      000730 74 01            [12] 2331 	mov	a,#0x01
      000732 80 02            [24] 2332 	sjmp	00137$
      000734                       2333 00135$:
      000734 25 E0            [12] 2334 	add	a,acc
      000736                       2335 00137$:
      000736 D5 F0 FB         [24] 2336 	djnz	b,00135$
      000739 F4               [12] 2337 	cpl	a
      00073A 52 A0            [12] 2338 	anl	_P2,a
      00073C 22               [24] 2339 	ret
      00073D                       2340 00104$:
                                   2341 ;	../sdk/src/gpio/src/gpio_pin_val_clear.c:61: else if(gpio_pin_id <= GPIO_PIN_ID_P3_6)
      00073D EF               [12] 2342 	mov	a,r7
      00073E 24 E1            [12] 2343 	add	a,#0xff - 0x1e
      000740 40 14            [24] 2344 	jc	00112$
                                   2345 ;	../sdk/src/gpio/src/gpio_pin_val_clear.c:63: gpio_pins_val_clear(P3, (1 << (gpio_pin_id % 8)));
      000742 74 07            [12] 2346 	mov	a,#0x07
      000744 5F               [12] 2347 	anl	a,r7
      000745 F5 F0            [12] 2348 	mov	b,a
      000747 05 F0            [12] 2349 	inc	b
      000749 74 01            [12] 2350 	mov	a,#0x01
      00074B 80 02            [24] 2351 	sjmp	00141$
      00074D                       2352 00139$:
      00074D 25 E0            [12] 2353 	add	a,acc
      00074F                       2354 00141$:
      00074F D5 F0 FB         [24] 2355 	djnz	b,00139$
      000752 F4               [12] 2356 	cpl	a
      000753 FF               [12] 2357 	mov	r7,a
      000754 52 B0            [12] 2358 	anl	_P3,a
      000756                       2359 00112$:
      000756 22               [24] 2360 	ret
                                   2361 ;------------------------------------------------------------
                                   2362 ;Allocation info for local variables in function 'gpio_pin_val_set'
                                   2363 ;------------------------------------------------------------
                                   2364 ;gpio_pin_id               Allocated with name '_gpio_pin_val_set_gpio_pin_id_1_119'
                                   2365 ;------------------------------------------------------------
                                   2366 ;	../sdk/src/gpio/src/gpio_pin_val_set.c:46: void gpio_pin_val_set(gpio_pin_id_t gpio_pin_id)
                                   2367 ;	-----------------------------------------
                                   2368 ;	 function gpio_pin_val_set
                                   2369 ;	-----------------------------------------
      000757                       2370 _gpio_pin_val_set:
      000757 E5 82            [12] 2371 	mov	a,dpl
      000759 90r00r3A         [24] 2372 	mov	dptr,#_gpio_pin_val_set_gpio_pin_id_1_119
      00075C F0               [24] 2373 	movx	@dptr,a
                                   2374 ;	../sdk/src/gpio/src/gpio_pin_val_set.c:49: if(gpio_pin_id <= GPIO_PIN_ID_P0_7)
      00075D E0               [24] 2375 	movx	a,@dptr
      00075E FF               [12] 2376 	mov  r7,a
      00075F 24 F8            [12] 2377 	add	a,#0xff - 0x07
      000761 40 13            [24] 2378 	jc	00110$
                                   2379 ;	../sdk/src/gpio/src/gpio_pin_val_set.c:51: gpio_pins_val_set(P0, (1 << (gpio_pin_id % 8)));
      000763 74 07            [12] 2380 	mov	a,#0x07
      000765 5F               [12] 2381 	anl	a,r7
      000766 F5 F0            [12] 2382 	mov	b,a
      000768 05 F0            [12] 2383 	inc	b
      00076A 74 01            [12] 2384 	mov	a,#0x01
      00076C 80 02            [24] 2385 	sjmp	00129$
      00076E                       2386 00127$:
      00076E 25 E0            [12] 2387 	add	a,acc
      000770                       2388 00129$:
      000770 D5 F0 FB         [24] 2389 	djnz	b,00127$
      000773 42 80            [12] 2390 	orl	_P0,a
      000775 22               [24] 2391 	ret
      000776                       2392 00110$:
                                   2393 ;	../sdk/src/gpio/src/gpio_pin_val_set.c:53: else if(gpio_pin_id <= GPIO_PIN_ID_P1_7)
      000776 EF               [12] 2394 	mov	a,r7
      000777 24 F0            [12] 2395 	add	a,#0xff - 0x0f
      000779 40 13            [24] 2396 	jc	00107$
                                   2397 ;	../sdk/src/gpio/src/gpio_pin_val_set.c:55: gpio_pins_val_set(P1, (1 << (gpio_pin_id % 8)));
      00077B 74 07            [12] 2398 	mov	a,#0x07
      00077D 5F               [12] 2399 	anl	a,r7
      00077E F5 F0            [12] 2400 	mov	b,a
      000780 05 F0            [12] 2401 	inc	b
      000782 74 01            [12] 2402 	mov	a,#0x01
      000784 80 02            [24] 2403 	sjmp	00133$
      000786                       2404 00131$:
      000786 25 E0            [12] 2405 	add	a,acc
      000788                       2406 00133$:
      000788 D5 F0 FB         [24] 2407 	djnz	b,00131$
      00078B 42 90            [12] 2408 	orl	_P1,a
      00078D 22               [24] 2409 	ret
      00078E                       2410 00107$:
                                   2411 ;	../sdk/src/gpio/src/gpio_pin_val_set.c:57: else if(gpio_pin_id <= GPIO_PIN_ID_P2_7)
      00078E EF               [12] 2412 	mov	a,r7
      00078F 24 E8            [12] 2413 	add	a,#0xff - 0x17
      000791 40 13            [24] 2414 	jc	00104$
                                   2415 ;	../sdk/src/gpio/src/gpio_pin_val_set.c:59: gpio_pins_val_set(P2, (1 << (gpio_pin_id % 8)));
      000793 74 07            [12] 2416 	mov	a,#0x07
      000795 5F               [12] 2417 	anl	a,r7
      000796 F5 F0            [12] 2418 	mov	b,a
      000798 05 F0            [12] 2419 	inc	b
      00079A 74 01            [12] 2420 	mov	a,#0x01
      00079C 80 02            [24] 2421 	sjmp	00137$
      00079E                       2422 00135$:
      00079E 25 E0            [12] 2423 	add	a,acc
      0007A0                       2424 00137$:
      0007A0 D5 F0 FB         [24] 2425 	djnz	b,00135$
      0007A3 42 A0            [12] 2426 	orl	_P2,a
      0007A5 22               [24] 2427 	ret
      0007A6                       2428 00104$:
                                   2429 ;	../sdk/src/gpio/src/gpio_pin_val_set.c:61: else if(gpio_pin_id <= GPIO_PIN_ID_P3_6)
      0007A6 EF               [12] 2430 	mov	a,r7
      0007A7 24 E1            [12] 2431 	add	a,#0xff - 0x1e
      0007A9 40 13            [24] 2432 	jc	00112$
                                   2433 ;	../sdk/src/gpio/src/gpio_pin_val_set.c:63: gpio_pins_val_set(P3, (1 << (gpio_pin_id % 8)));
      0007AB 74 07            [12] 2434 	mov	a,#0x07
      0007AD 5F               [12] 2435 	anl	a,r7
      0007AE F5 F0            [12] 2436 	mov	b,a
      0007B0 05 F0            [12] 2437 	inc	b
      0007B2 74 01            [12] 2438 	mov	a,#0x01
      0007B4 80 02            [24] 2439 	sjmp	00141$
      0007B6                       2440 00139$:
      0007B6 25 E0            [12] 2441 	add	a,acc
      0007B8                       2442 00141$:
      0007B8 D5 F0 FB         [24] 2443 	djnz	b,00139$
      0007BB FF               [12] 2444 	mov	r7,a
      0007BC 42 B0            [12] 2445 	orl	_P3,a
      0007BE                       2446 00112$:
      0007BE 22               [24] 2447 	ret
                                   2448 ;------------------------------------------------------------
                                   2449 ;Allocation info for local variables in function 'gpio_pin_val_write'
                                   2450 ;------------------------------------------------------------
                                   2451 ;value                     Allocated with name '_gpio_pin_val_write_PARM_2'
                                   2452 ;gpio_pin_id               Allocated with name '_gpio_pin_val_write_gpio_pin_id_1_125'
                                   2453 ;------------------------------------------------------------
                                   2454 ;	../sdk/src/gpio/src/gpio_pin_val_write.c:47: void gpio_pin_val_write(gpio_pin_id_t gpio_pin_id, bool value)
                                   2455 ;	-----------------------------------------
                                   2456 ;	 function gpio_pin_val_write
                                   2457 ;	-----------------------------------------
      0007BF                       2458 _gpio_pin_val_write:
      0007BF E5 82            [12] 2459 	mov	a,dpl
      0007C1 90r00r3C         [24] 2460 	mov	dptr,#_gpio_pin_val_write_gpio_pin_id_1_125
      0007C4 F0               [24] 2461 	movx	@dptr,a
                                   2462 ;	../sdk/src/gpio/src/gpio_pin_val_write.c:50: if(value)
      0007C5 90r00r3B         [24] 2463 	mov	dptr,#_gpio_pin_val_write_PARM_2
      0007C8 E0               [24] 2464 	movx	a,@dptr
      0007C9 FF               [12] 2465 	mov	r7,a
      0007CA 60 09            [24] 2466 	jz	00102$
                                   2467 ;	../sdk/src/gpio/src/gpio_pin_val_write.c:52: gpio_pin_val_set(gpio_pin_id);
      0007CC 90r00r3C         [24] 2468 	mov	dptr,#_gpio_pin_val_write_gpio_pin_id_1_125
      0007CF E0               [24] 2469 	movx	a,@dptr
      0007D0 F5 82            [12] 2470 	mov	dpl,a
      0007D2 02r07r57         [24] 2471 	ljmp	_gpio_pin_val_set
      0007D5                       2472 00102$:
                                   2473 ;	../sdk/src/gpio/src/gpio_pin_val_write.c:56: gpio_pin_val_clear(gpio_pin_id);
      0007D5 90r00r3C         [24] 2474 	mov	dptr,#_gpio_pin_val_write_gpio_pin_id_1_125
      0007D8 E0               [24] 2475 	movx	a,@dptr
      0007D9 F5 82            [12] 2476 	mov	dpl,a
      0007DB 02r06rEB         [24] 2477 	ljmp	_gpio_pin_val_clear
                                   2478 ;------------------------------------------------------------
                                   2479 ;Allocation info for local variables in function 'delay_us'
                                   2480 ;------------------------------------------------------------
                                   2481 ;microseconds              Allocated with name '_delay_us_microseconds_1_129'
                                   2482 ;count                     Allocated with name '_delay_us_count_1_130'
                                   2483 ;------------------------------------------------------------
                                   2484 ;	../sdk/src/delay/src/delay_us.c:46: void delay_us(uint16_t microseconds)
                                   2485 ;	-----------------------------------------
                                   2486 ;	 function delay_us
                                   2487 ;	-----------------------------------------
      0007DE                       2488 _delay_us:
      0007DE AF 83            [24] 2489 	mov	r7,dph
      0007E0 E5 82            [12] 2490 	mov	a,dpl
      0007E2 90r00r3D         [24] 2491 	mov	dptr,#_delay_us_microseconds_1_129
      0007E5 F0               [24] 2492 	movx	@dptr,a
      0007E6 EF               [12] 2493 	mov	a,r7
      0007E7 A3               [24] 2494 	inc	dptr
      0007E8 F0               [24] 2495 	movx	@dptr,a
                                   2496 ;	../sdk/src/delay/src/delay_us.c:51: if(microseconds == 0)
      0007E9 90r00r3D         [24] 2497 	mov	dptr,#_delay_us_microseconds_1_129
      0007EC E0               [24] 2498 	movx	a,@dptr
      0007ED FE               [12] 2499 	mov	r6,a
      0007EE A3               [24] 2500 	inc	dptr
      0007EF E0               [24] 2501 	movx	a,@dptr
      0007F0 FF               [12] 2502 	mov	r7,a
      0007F1 90r00r3D         [24] 2503 	mov	dptr,#_delay_us_microseconds_1_129
      0007F4 E0               [24] 2504 	movx	a,@dptr
      0007F5 F5 F0            [12] 2505 	mov	b,a
      0007F7 A3               [24] 2506 	inc	dptr
      0007F8 E0               [24] 2507 	movx	a,@dptr
      0007F9 45 F0            [12] 2508 	orl	a,b
      0007FB 70 01            [24] 2509 	jnz	00102$
                                   2510 ;	../sdk/src/delay/src/delay_us.c:52: return;
      0007FD 22               [24] 2511 	ret
      0007FE                       2512 00102$:
                                   2513 ;	../sdk/src/delay/src/delay_us.c:54: microseconds -= 1;
      0007FE 1E               [12] 2514 	dec	r6
      0007FF BE FF 01         [24] 2515 	cjne	r6,#0xff,00121$
      000802 1F               [12] 2516 	dec	r7
      000803                       2517 00121$:
      000803 90r00r3D         [24] 2518 	mov	dptr,#_delay_us_microseconds_1_129
      000806 EE               [12] 2519 	mov	a,r6
      000807 F0               [24] 2520 	movx	@dptr,a
      000808 EF               [12] 2521 	mov	a,r7
      000809 A3               [24] 2522 	inc	dptr
      00080A F0               [24] 2523 	movx	@dptr,a
                                   2524 ;	../sdk/src/delay/src/delay_us.c:56: for(count = 0; count < microseconds; count++)
      00080B 90r00r3D         [24] 2525 	mov	dptr,#_delay_us_microseconds_1_129
      00080E E0               [24] 2526 	movx	a,@dptr
      00080F FE               [12] 2527 	mov	r6,a
      000810 A3               [24] 2528 	inc	dptr
      000811 E0               [24] 2529 	movx	a,@dptr
      000812 FF               [12] 2530 	mov	r7,a
      000813 7C 00            [12] 2531 	mov	r4,#0x00
      000815 7D 00            [12] 2532 	mov	r5,#0x00
      000817                       2533 00106$:
      000817 C3               [12] 2534 	clr	c
      000818 EC               [12] 2535 	mov	a,r4
      000819 9E               [12] 2536 	subb	a,r6
      00081A ED               [12] 2537 	mov	a,r5
      00081B 9F               [12] 2538 	subb	a,r7
      00081C 50 09            [24] 2539 	jnc	00108$
                                   2540 ;	../sdk/src/delay/src/delay_us.c:58: nop();
      00081E 00               [12] 2541 	nop	
                                   2542 ;	../sdk/src/delay/src/delay_us.c:59: nop();
      00081F 00               [12] 2543 	nop	
                                   2544 ;	../sdk/src/delay/src/delay_us.c:56: for(count = 0; count < microseconds; count++)
      000820 0C               [12] 2545 	inc	r4
      000821 BC 00 F3         [24] 2546 	cjne	r4,#0x00,00106$
      000824 0D               [12] 2547 	inc	r5
      000825 80 F0            [24] 2548 	sjmp	00106$
      000827                       2549 00108$:
      000827 22               [24] 2550 	ret
                                   2551 ;------------------------------------------------------------
                                   2552 ;Allocation info for local variables in function 'delay_s'
                                   2553 ;------------------------------------------------------------
                                   2554 ;seconds                   Allocated with name '_delay_s_seconds_1_133'
                                   2555 ;count                     Allocated with name '_delay_s_count_1_134'
                                   2556 ;------------------------------------------------------------
                                   2557 ;	../sdk/src/delay/src/delay_s.c:46: void delay_s(uint16_t seconds)
                                   2558 ;	-----------------------------------------
                                   2559 ;	 function delay_s
                                   2560 ;	-----------------------------------------
      000828                       2561 _delay_s:
      000828 AF 83            [24] 2562 	mov	r7,dph
      00082A E5 82            [12] 2563 	mov	a,dpl
      00082C 90r00r3F         [24] 2564 	mov	dptr,#_delay_s_seconds_1_133
      00082F F0               [24] 2565 	movx	@dptr,a
      000830 EF               [12] 2566 	mov	a,r7
      000831 A3               [24] 2567 	inc	dptr
      000832 F0               [24] 2568 	movx	@dptr,a
                                   2569 ;	../sdk/src/delay/src/delay_s.c:51: for(count = 0; count < seconds; count++)
      000833 90r00r3F         [24] 2570 	mov	dptr,#_delay_s_seconds_1_133
      000836 E0               [24] 2571 	movx	a,@dptr
      000837 FE               [12] 2572 	mov	r6,a
      000838 A3               [24] 2573 	inc	dptr
      000839 E0               [24] 2574 	movx	a,@dptr
      00083A FF               [12] 2575 	mov	r7,a
      00083B 7C 00            [12] 2576 	mov	r4,#0x00
      00083D 7D 00            [12] 2577 	mov	r5,#0x00
      00083F                       2578 00103$:
      00083F C3               [12] 2579 	clr	c
      000840 EC               [12] 2580 	mov	a,r4
      000841 9E               [12] 2581 	subb	a,r6
      000842 ED               [12] 2582 	mov	a,r5
      000843 9F               [12] 2583 	subb	a,r7
      000844 50 1D            [24] 2584 	jnc	00105$
                                   2585 ;	../sdk/src/delay/src/delay_s.c:53: delay_ms(1000);
      000846 90 03 E8         [24] 2586 	mov	dptr,#0x03e8
      000849 C0 07            [24] 2587 	push	ar7
      00084B C0 06            [24] 2588 	push	ar6
      00084D C0 05            [24] 2589 	push	ar5
      00084F C0 04            [24] 2590 	push	ar4
      000851 12r08r64         [24] 2591 	lcall	_delay_ms
      000854 D0 04            [24] 2592 	pop	ar4
      000856 D0 05            [24] 2593 	pop	ar5
      000858 D0 06            [24] 2594 	pop	ar6
      00085A D0 07            [24] 2595 	pop	ar7
                                   2596 ;	../sdk/src/delay/src/delay_s.c:51: for(count = 0; count < seconds; count++)
      00085C 0C               [12] 2597 	inc	r4
      00085D BC 00 DF         [24] 2598 	cjne	r4,#0x00,00103$
      000860 0D               [12] 2599 	inc	r5
      000861 80 DC            [24] 2600 	sjmp	00103$
      000863                       2601 00105$:
      000863 22               [24] 2602 	ret
                                   2603 ;------------------------------------------------------------
                                   2604 ;Allocation info for local variables in function 'delay_ms'
                                   2605 ;------------------------------------------------------------
                                   2606 ;milliseconds              Allocated with name '_delay_ms_milliseconds_1_137'
                                   2607 ;count                     Allocated with name '_delay_ms_count_1_138'
                                   2608 ;------------------------------------------------------------
                                   2609 ;	../sdk/src/delay/src/delay_ms.c:46: void delay_ms(uint16_t milliseconds)
                                   2610 ;	-----------------------------------------
                                   2611 ;	 function delay_ms
                                   2612 ;	-----------------------------------------
      000864                       2613 _delay_ms:
      000864 AF 83            [24] 2614 	mov	r7,dph
      000866 E5 82            [12] 2615 	mov	a,dpl
      000868 90r00r41         [24] 2616 	mov	dptr,#_delay_ms_milliseconds_1_137
      00086B F0               [24] 2617 	movx	@dptr,a
      00086C EF               [12] 2618 	mov	a,r7
      00086D A3               [24] 2619 	inc	dptr
      00086E F0               [24] 2620 	movx	@dptr,a
                                   2621 ;	../sdk/src/delay/src/delay_ms.c:51: for(count = 0; count < milliseconds; count++)
      00086F 90r00r41         [24] 2622 	mov	dptr,#_delay_ms_milliseconds_1_137
      000872 E0               [24] 2623 	movx	a,@dptr
      000873 FE               [12] 2624 	mov	r6,a
      000874 A3               [24] 2625 	inc	dptr
      000875 E0               [24] 2626 	movx	a,@dptr
      000876 FF               [12] 2627 	mov	r7,a
      000877 7C 00            [12] 2628 	mov	r4,#0x00
      000879 7D 00            [12] 2629 	mov	r5,#0x00
      00087B                       2630 00103$:
      00087B C3               [12] 2631 	clr	c
      00087C EC               [12] 2632 	mov	a,r4
      00087D 9E               [12] 2633 	subb	a,r6
      00087E ED               [12] 2634 	mov	a,r5
      00087F 9F               [12] 2635 	subb	a,r7
      000880 50 1D            [24] 2636 	jnc	00105$
                                   2637 ;	../sdk/src/delay/src/delay_ms.c:53: delay_us(1000);
      000882 90 03 E8         [24] 2638 	mov	dptr,#0x03e8
      000885 C0 07            [24] 2639 	push	ar7
      000887 C0 06            [24] 2640 	push	ar6
      000889 C0 05            [24] 2641 	push	ar5
      00088B C0 04            [24] 2642 	push	ar4
      00088D 12r07rDE         [24] 2643 	lcall	_delay_us
      000890 D0 04            [24] 2644 	pop	ar4
      000892 D0 05            [24] 2645 	pop	ar5
      000894 D0 06            [24] 2646 	pop	ar6
      000896 D0 07            [24] 2647 	pop	ar7
                                   2648 ;	../sdk/src/delay/src/delay_ms.c:51: for(count = 0; count < milliseconds; count++)
      000898 0C               [12] 2649 	inc	r4
      000899 BC 00 DF         [24] 2650 	cjne	r4,#0x00,00103$
      00089C 0D               [12] 2651 	inc	r5
      00089D 80 DC            [24] 2652 	sjmp	00103$
      00089F                       2653 00105$:
      00089F 22               [24] 2654 	ret
                                   2655 ;------------------------------------------------------------
                                   2656 ;Allocation info for local variables in function 'pwm_configure'
                                   2657 ;------------------------------------------------------------
                                   2658 ;pwm_config_options        Allocated with name '_pwm_configure_pwm_config_options_1_143'
                                   2659 ;------------------------------------------------------------
                                   2660 ;	../sdk/src/pwm/src/pwm_configure.c:52: void pwm_configure(uint8_t pwm_config_options)
                                   2661 ;	-----------------------------------------
                                   2662 ;	 function pwm_configure
                                   2663 ;	-----------------------------------------
      0008A0                       2664 _pwm_configure:
      0008A0 E5 82            [12] 2665 	mov	a,dpl
      0008A2 90r00r43         [24] 2666 	mov	dptr,#_pwm_configure_pwm_config_options_1_143
      0008A5 F0               [24] 2667 	movx	@dptr,a
                                   2668 ;	../sdk/src/pwm/src/pwm_configure.c:55: PWMCON = (PWMCON & ~PWM_CONFIG_OPTION_PWMCON_MASK) | (pwm_config_options & PWM_CONFIG_OPTION_PWMCON_MASK);
      0008A6 74 03            [12] 2669 	mov	a,#0x03
      0008A8 55 B2            [12] 2670 	anl	a,_PWMCON
      0008AA FF               [12] 2671 	mov	r7,a
      0008AB E0               [24] 2672 	movx	a,@dptr
      0008AC FE               [12] 2673 	mov	r6,a
      0008AD 74 FC            [12] 2674 	mov	a,#0xfc
      0008AF 5E               [12] 2675 	anl	a,r6
      0008B0 4F               [12] 2676 	orl	a,r7
      0008B1 F5 B2            [12] 2677 	mov	_PWMCON,a
      0008B3 22               [24] 2678 	ret
                                   2679 ;------------------------------------------------------------
                                   2680 ;Allocation info for local variables in function 'pwm_start'
                                   2681 ;------------------------------------------------------------
                                   2682 ;pwm_duty_cycle            Allocated with name '_pwm_start_PARM_2'
                                   2683 ;pwm_channel               Allocated with name '_pwm_start_pwm_channel_1_145'
                                   2684 ;------------------------------------------------------------
                                   2685 ;	../sdk/src/pwm/src/pwm_start.c:47: void pwm_start(pwm_channel_t pwm_channel, uint8_t pwm_duty_cycle)
                                   2686 ;	-----------------------------------------
                                   2687 ;	 function pwm_start
                                   2688 ;	-----------------------------------------
      0008B4                       2689 _pwm_start:
      0008B4 E5 82            [12] 2690 	mov	a,dpl
      0008B6 90r00r45         [24] 2691 	mov	dptr,#_pwm_start_pwm_channel_1_145
      0008B9 F0               [24] 2692 	movx	@dptr,a
                                   2693 ;	../sdk/src/pwm/src/pwm_start.c:50: if(pwm_channel == PWM_CHANNEL_0)
      0008BA E0               [24] 2694 	movx	a,@dptr
      0008BB FF               [12] 2695 	mov	r7,a
      0008BC 70 0A            [24] 2696 	jnz	00102$
                                   2697 ;	../sdk/src/pwm/src/pwm_start.c:52: PWMDC0 = pwm_duty_cycle;
      0008BE 90r00r44         [24] 2698 	mov	dptr,#_pwm_start_PARM_2
      0008C1 E0               [24] 2699 	movx	a,@dptr
      0008C2 F5 A1            [12] 2700 	mov	_PWMDC0,a
                                   2701 ;	../sdk/src/pwm/src/pwm_start.c:53: reg_bits_set(PWMCON, PWMCON_PWM0_ENABLE);
      0008C4 43 B2 01         [24] 2702 	orl	_PWMCON,#0x01
      0008C7 22               [24] 2703 	ret
      0008C8                       2704 00102$:
                                   2705 ;	../sdk/src/pwm/src/pwm_start.c:57: PWMDC1 = pwm_duty_cycle;
      0008C8 90r00r44         [24] 2706 	mov	dptr,#_pwm_start_PARM_2
      0008CB E0               [24] 2707 	movx	a,@dptr
      0008CC F5 A2            [12] 2708 	mov	_PWMDC1,a
                                   2709 ;	../sdk/src/pwm/src/pwm_start.c:58: reg_bits_set(PWMCON, PWMCON_PWM1_ENABLE);
      0008CE 43 B2 02         [24] 2710 	orl	_PWMCON,#0x02
      0008D1 22               [24] 2711 	ret
                                   2712 ;------------------------------------------------------------
                                   2713 ;Allocation info for local variables in function 'pwr_clk_mgmt_clklf_configure'
                                   2714 ;------------------------------------------------------------
                                   2715 ;clklf_config_options      Allocated with name '_pwr_clk_mgmt_clklf_configure_clklf_config_options_1_154'
                                   2716 ;------------------------------------------------------------
                                   2717 ;	../sdk/src/pwr_clk_mgmt/src/pwr_clk_mgmt_clklf_configure.c:52: void pwr_clk_mgmt_clklf_configure(uint8_t clklf_config_options)
                                   2718 ;	-----------------------------------------
                                   2719 ;	 function pwr_clk_mgmt_clklf_configure
                                   2720 ;	-----------------------------------------
      0008D2                       2721 _pwr_clk_mgmt_clklf_configure:
      0008D2 E5 82            [12] 2722 	mov	a,dpl
      0008D4 90r00r46         [24] 2723 	mov	dptr,#_pwr_clk_mgmt_clklf_configure_clklf_config_options_1_154
      0008D7 F0               [24] 2724 	movx	@dptr,a
                                   2725 ;	../sdk/src/pwr_clk_mgmt/src/pwr_clk_mgmt_clklf_configure.c:55: CLKLFCTRL = (CLKLFCTRL & ~PWR_CLK_MGMT_CLKLF_CONFIG_OPTION_CLKLFCTRL_MASK) | (clklf_config_options & PWR_CLK_MGMT_CLKLF_CONFIG_OPTION_CLKLFCTRL_MASK);
      0008D8 74 F8            [12] 2726 	mov	a,#0xf8
      0008DA 55 AD            [12] 2727 	anl	a,_CLKLFCTRL
      0008DC FF               [12] 2728 	mov	r7,a
      0008DD E0               [24] 2729 	movx	a,@dptr
      0008DE FE               [12] 2730 	mov	r6,a
      0008DF 74 07            [12] 2731 	mov	a,#0x07
      0008E1 5E               [12] 2732 	anl	a,r6
      0008E2 4F               [12] 2733 	orl	a,r7
      0008E3 F5 AD            [12] 2734 	mov	_CLKLFCTRL,a
      0008E5 22               [24] 2735 	ret
                                   2736 ;------------------------------------------------------------
                                   2737 ;Allocation info for local variables in function 'pwr_clk_mgmt_get_cclk_freq_in_hz'
                                   2738 ;------------------------------------------------------------
                                   2739 ;divider                   Allocated with name '_pwr_clk_mgmt_get_cclk_freq_in_hz_divider_1_156'
                                   2740 ;i                         Allocated with name '_pwr_clk_mgmt_get_cclk_freq_in_hz_i_1_156'
                                   2741 ;cclk_freq_hz              Allocated with name '_pwr_clk_mgmt_get_cclk_freq_in_hz_cclk_freq_hz_1_156'
                                   2742 ;------------------------------------------------------------
                                   2743 ;	../sdk/src/pwr_clk_mgmt/src/pwr_clk_mgmt_get_cclk_freq_in_hz.c:46: uint32_t pwr_clk_mgmt_get_cclk_freq_in_hz()
                                   2744 ;	-----------------------------------------
                                   2745 ;	 function pwr_clk_mgmt_get_cclk_freq_in_hz
                                   2746 ;	-----------------------------------------
      0008E6                       2747 _pwr_clk_mgmt_get_cclk_freq_in_hz:
                                   2748 ;	../sdk/src/pwr_clk_mgmt/src/pwr_clk_mgmt_get_cclk_freq_in_hz.c:48: uint8_t divider = (CLKCTRL & CLKCTRL_CLK_FREQ_MASK) >> CLKCTRL_CLK_FREQ_SHIFT;
      0008E6 74 07            [12] 2749 	mov	a,#0x07
      0008E8 55 A3            [12] 2750 	anl	a,_CLKCTRL
      0008EA FF               [12] 2751 	mov	r7,a
                                   2752 ;	../sdk/src/pwr_clk_mgmt/src/pwr_clk_mgmt_get_cclk_freq_in_hz.c:50: uint32_t cclk_freq_hz = CCLK_MAX_FREQ_HZ;
      0008EB 90r00r47         [24] 2753 	mov	dptr,#_pwr_clk_mgmt_get_cclk_freq_in_hz_cclk_freq_hz_1_156
      0008EE E4               [12] 2754 	clr	a
      0008EF F0               [24] 2755 	movx	@dptr,a
      0008F0 74 24            [12] 2756 	mov	a,#0x24
      0008F2 A3               [24] 2757 	inc	dptr
      0008F3 F0               [24] 2758 	movx	@dptr,a
      0008F4 74 F4            [12] 2759 	mov	a,#0xf4
      0008F6 A3               [24] 2760 	inc	dptr
      0008F7 F0               [24] 2761 	movx	@dptr,a
      0008F8 E4               [12] 2762 	clr	a
      0008F9 A3               [24] 2763 	inc	dptr
      0008FA F0               [24] 2764 	movx	@dptr,a
                                   2765 ;	../sdk/src/pwr_clk_mgmt/src/pwr_clk_mgmt_get_cclk_freq_in_hz.c:52: for(i = 0; i < divider; i++)
      0008FB 7E 00            [12] 2766 	mov	r6,#0x00
      0008FD                       2767 00103$:
      0008FD C3               [12] 2768 	clr	c
      0008FE EE               [12] 2769 	mov	a,r6
      0008FF 9F               [12] 2770 	subb	a,r7
      000900 50 29            [24] 2771 	jnc	00101$
                                   2772 ;	../sdk/src/pwr_clk_mgmt/src/pwr_clk_mgmt_get_cclk_freq_in_hz.c:54: cclk_freq_hz /= 2;
      000902 90r00r47         [24] 2773 	mov	dptr,#_pwr_clk_mgmt_get_cclk_freq_in_hz_cclk_freq_hz_1_156
      000905 E0               [24] 2774 	movx	a,@dptr
      000906 FA               [12] 2775 	mov	r2,a
      000907 A3               [24] 2776 	inc	dptr
      000908 E0               [24] 2777 	movx	a,@dptr
      000909 FB               [12] 2778 	mov	r3,a
      00090A A3               [24] 2779 	inc	dptr
      00090B E0               [24] 2780 	movx	a,@dptr
      00090C FC               [12] 2781 	mov	r4,a
      00090D A3               [24] 2782 	inc	dptr
      00090E E0               [24] 2783 	movx	a,@dptr
      00090F C3               [12] 2784 	clr	c
      000910 13               [12] 2785 	rrc	a
      000911 FD               [12] 2786 	mov	r5,a
      000912 EC               [12] 2787 	mov	a,r4
      000913 13               [12] 2788 	rrc	a
      000914 FC               [12] 2789 	mov	r4,a
      000915 EB               [12] 2790 	mov	a,r3
      000916 13               [12] 2791 	rrc	a
      000917 FB               [12] 2792 	mov	r3,a
      000918 EA               [12] 2793 	mov	a,r2
      000919 13               [12] 2794 	rrc	a
      00091A FA               [12] 2795 	mov	r2,a
      00091B 90r00r47         [24] 2796 	mov	dptr,#_pwr_clk_mgmt_get_cclk_freq_in_hz_cclk_freq_hz_1_156
      00091E F0               [24] 2797 	movx	@dptr,a
      00091F EB               [12] 2798 	mov	a,r3
      000920 A3               [24] 2799 	inc	dptr
      000921 F0               [24] 2800 	movx	@dptr,a
      000922 EC               [12] 2801 	mov	a,r4
      000923 A3               [24] 2802 	inc	dptr
      000924 F0               [24] 2803 	movx	@dptr,a
      000925 ED               [12] 2804 	mov	a,r5
      000926 A3               [24] 2805 	inc	dptr
      000927 F0               [24] 2806 	movx	@dptr,a
                                   2807 ;	../sdk/src/pwr_clk_mgmt/src/pwr_clk_mgmt_get_cclk_freq_in_hz.c:52: for(i = 0; i < divider; i++)
      000928 0E               [12] 2808 	inc	r6
      000929 80 D2            [24] 2809 	sjmp	00103$
      00092B                       2810 00101$:
                                   2811 ;	../sdk/src/pwr_clk_mgmt/src/pwr_clk_mgmt_get_cclk_freq_in_hz.c:57: return cclk_freq_hz;
      00092B 90r00r47         [24] 2812 	mov	dptr,#_pwr_clk_mgmt_get_cclk_freq_in_hz_cclk_freq_hz_1_156
      00092E E0               [24] 2813 	movx	a,@dptr
      00092F FC               [12] 2814 	mov	r4,a
      000930 A3               [24] 2815 	inc	dptr
      000931 E0               [24] 2816 	movx	a,@dptr
      000932 FD               [12] 2817 	mov	r5,a
      000933 A3               [24] 2818 	inc	dptr
      000934 E0               [24] 2819 	movx	a,@dptr
      000935 FE               [12] 2820 	mov	r6,a
      000936 A3               [24] 2821 	inc	dptr
      000937 E0               [24] 2822 	movx	a,@dptr
      000938 8C 82            [24] 2823 	mov	dpl,r4
      00093A 8D 83            [24] 2824 	mov	dph,r5
      00093C 8E F0            [24] 2825 	mov	b,r6
      00093E 22               [24] 2826 	ret
                                   2827 ;------------------------------------------------------------
                                   2828 ;Allocation info for local variables in function 'pwr_clk_mgmt_wakeup_configure'
                                   2829 ;------------------------------------------------------------
                                   2830 ;wakeup_on_pin_config_options Allocated with name '_pwr_clk_mgmt_wakeup_configure_PARM_2'
                                   2831 ;wakeup_sources_config_options Allocated with name '_pwr_clk_mgmt_wakeup_configure_wakeup_sources_config_options_1_159'
                                   2832 ;------------------------------------------------------------
                                   2833 ;	../sdk/src/pwr_clk_mgmt/src/pwr_clk_mgmt_wakeup_configure.c:47: void pwr_clk_mgmt_wakeup_configure(unsigned char wakeup_sources_config_options, unsigned int wakeup_on_pin_config_options)
                                   2834 ;	-----------------------------------------
                                   2835 ;	 function pwr_clk_mgmt_wakeup_configure
                                   2836 ;	-----------------------------------------
      00093F                       2837 _pwr_clk_mgmt_wakeup_configure:
      00093F E5 82            [12] 2838 	mov	a,dpl
      000941 90r00r4D         [24] 2839 	mov	dptr,#_pwr_clk_mgmt_wakeup_configure_wakeup_sources_config_options_1_159
      000944 F0               [24] 2840 	movx	@dptr,a
                                   2841 ;	../sdk/src/pwr_clk_mgmt/src/pwr_clk_mgmt_wakeup_configure.c:50: WUCON = wakeup_sources_config_options;
      000945 E0               [24] 2842 	movx	a,@dptr
      000946 F5 A5            [12] 2843 	mov	_WUCON,a
                                   2844 ;	../sdk/src/pwr_clk_mgmt/src/pwr_clk_mgmt_wakeup_configure.c:53: WUOPC0 = wakeup_on_pin_config_options & 0xFF;
      000948 90r00r4B         [24] 2845 	mov	dptr,#_pwr_clk_mgmt_wakeup_configure_PARM_2
      00094B E0               [24] 2846 	movx	a,@dptr
      00094C FE               [12] 2847 	mov	r6,a
      00094D A3               [24] 2848 	inc	dptr
      00094E E0               [24] 2849 	movx	a,@dptr
      00094F FF               [12] 2850 	mov	r7,a
      000950 8E CF            [24] 2851 	mov	_WUOPC0,r6
                                   2852 ;	../sdk/src/pwr_clk_mgmt/src/pwr_clk_mgmt_wakeup_configure.c:54: WUOPC1 = (wakeup_on_pin_config_options >> 8) & 0xFF;
      000952 8F CE            [24] 2853 	mov	_WUOPC1,r7
      000954 22               [24] 2854 	ret
                                   2855 ;------------------------------------------------------------
                                   2856 ;Allocation info for local variables in function 'pwr_clk_mgmt_pwr_failure_configure'
                                   2857 ;------------------------------------------------------------
                                   2858 ;pwr_failure_config_options Allocated with name '_pwr_clk_mgmt_pwr_failure_configure_pwr_failure_config_options_1_161'
                                   2859 ;------------------------------------------------------------
                                   2860 ;	../sdk/src/pwr_clk_mgmt/src/pwr_clk_mgmt_pwr_failure_configure.c:52: void pwr_clk_mgmt_pwr_failure_configure(uint8_t pwr_failure_config_options)
                                   2861 ;	-----------------------------------------
                                   2862 ;	 function pwr_clk_mgmt_pwr_failure_configure
                                   2863 ;	-----------------------------------------
      000955                       2864 _pwr_clk_mgmt_pwr_failure_configure:
      000955 E5 82            [12] 2865 	mov	a,dpl
      000957 90r00r4E         [24] 2866 	mov	dptr,#_pwr_clk_mgmt_pwr_failure_configure_pwr_failure_config_options_1_161
      00095A F0               [24] 2867 	movx	@dptr,a
                                   2868 ;	../sdk/src/pwr_clk_mgmt/src/pwr_clk_mgmt_pwr_failure_configure.c:55: POFCON = (POFCON & ~PWR_CLK_MGMT_CLKLF_CONFIG_OPTION_POFCON_MASK) | (pwr_failure_config_options & PWR_CLK_MGMT_CLKLF_CONFIG_OPTION_POFCON_MASK);
      00095B 74 0F            [12] 2869 	mov	a,#0x0f
      00095D 55 DC            [12] 2870 	anl	a,_POFCON
      00095F FF               [12] 2871 	mov	r7,a
      000960 E0               [24] 2872 	movx	a,@dptr
      000961 FE               [12] 2873 	mov	r6,a
      000962 74 F0            [12] 2874 	mov	a,#0xf0
      000964 5E               [12] 2875 	anl	a,r6
      000965 4F               [12] 2876 	orl	a,r7
      000966 F5 DC            [12] 2877 	mov	_POFCON,a
      000968 22               [24] 2878 	ret
                                   2879 ;------------------------------------------------------------
                                   2880 ;Allocation info for local variables in function 'watchdog_set_wdsv_count'
                                   2881 ;------------------------------------------------------------
                                   2882 ;wdsv_value                Allocated with name '_watchdog_set_wdsv_count_wdsv_value_1_164'
                                   2883 ;------------------------------------------------------------
                                   2884 ;	../sdk/src/watchdog/src/watchdog_set_wdsv_count.c:46: void watchdog_set_wdsv_count(uint16_t wdsv_value)
                                   2885 ;	-----------------------------------------
                                   2886 ;	 function watchdog_set_wdsv_count
                                   2887 ;	-----------------------------------------
      000969                       2888 _watchdog_set_wdsv_count:
      000969 AF 83            [24] 2889 	mov	r7,dph
      00096B E5 82            [12] 2890 	mov	a,dpl
      00096D 90r00r4F         [24] 2891 	mov	dptr,#_watchdog_set_wdsv_count_wdsv_value_1_164
      000970 F0               [24] 2892 	movx	@dptr,a
      000971 EF               [12] 2893 	mov	a,r7
      000972 A3               [24] 2894 	inc	dptr
      000973 F0               [24] 2895 	movx	@dptr,a
                                   2896 ;	../sdk/src/watchdog/src/watchdog_set_wdsv_count.c:49: WDSV = (uint8_t)wdsv_value;
      000974 90r00r4F         [24] 2897 	mov	dptr,#_watchdog_set_wdsv_count_wdsv_value_1_164
      000977 E0               [24] 2898 	movx	a,@dptr
      000978 FE               [12] 2899 	mov	r6,a
      000979 A3               [24] 2900 	inc	dptr
      00097A E0               [24] 2901 	movx	a,@dptr
      00097B FF               [12] 2902 	mov	r7,a
      00097C 8E AF            [24] 2903 	mov	_WDSV,r6
                                   2904 ;	../sdk/src/watchdog/src/watchdog_set_wdsv_count.c:50: WDSV = (uint8_t)(wdsv_value >> 8);
      00097E 8F AF            [24] 2905 	mov	_WDSV,r7
      000980 22               [24] 2906 	ret
                                   2907 ;------------------------------------------------------------
                                   2908 ;Allocation info for local variables in function 'watchdog_start_and_set_timeout_in_ms'
                                   2909 ;------------------------------------------------------------
                                   2910 ;milliseconds              Allocated with name '_watchdog_start_and_set_timeout_in_ms_milliseconds_1_166'
                                   2911 ;wd_value                  Allocated with name '_watchdog_start_and_set_timeout_in_ms_wd_value_1_167'
                                   2912 ;------------------------------------------------------------
                                   2913 ;	../sdk/src/watchdog/src/watchdog_start_and_set_timeout_in_ms.c:50: uint16_t watchdog_start_and_set_timeout_in_ms(uint32_t milliseconds)
                                   2914 ;	-----------------------------------------
                                   2915 ;	 function watchdog_start_and_set_timeout_in_ms
                                   2916 ;	-----------------------------------------
      000981                       2917 _watchdog_start_and_set_timeout_in_ms:
      000981 AF 82            [24] 2918 	mov	r7,dpl
      000983 AE 83            [24] 2919 	mov	r6,dph
      000985 AD F0            [24] 2920 	mov	r5,b
      000987 FC               [12] 2921 	mov	r4,a
      000988 90r00r51         [24] 2922 	mov	dptr,#_watchdog_start_and_set_timeout_in_ms_milliseconds_1_166
      00098B EF               [12] 2923 	mov	a,r7
      00098C F0               [24] 2924 	movx	@dptr,a
      00098D EE               [12] 2925 	mov	a,r6
      00098E A3               [24] 2926 	inc	dptr
      00098F F0               [24] 2927 	movx	@dptr,a
      000990 ED               [12] 2928 	mov	a,r5
      000991 A3               [24] 2929 	inc	dptr
      000992 F0               [24] 2930 	movx	@dptr,a
      000993 EC               [12] 2931 	mov	a,r4
      000994 A3               [24] 2932 	inc	dptr
      000995 F0               [24] 2933 	movx	@dptr,a
                                   2934 ;	../sdk/src/watchdog/src/watchdog_start_and_set_timeout_in_ms.c:52: uint16_t wd_value = 0;
      000996 90r00r55         [24] 2935 	mov	dptr,#_watchdog_start_and_set_timeout_in_ms_wd_value_1_167
      000999 E4               [12] 2936 	clr	a
      00099A F0               [24] 2937 	movx	@dptr,a
      00099B A3               [24] 2938 	inc	dptr
      00099C F0               [24] 2939 	movx	@dptr,a
                                   2940 ;	../sdk/src/watchdog/src/watchdog_start_and_set_timeout_in_ms.c:55: if(!pwr_clk_mgmt_is_clklf_enabled())
      00099D 74 07            [12] 2941 	mov	a,#0x07
      00099F 55 AD            [12] 2942 	anl	a,_CLKLFCTRL
      0009A1 FF               [12] 2943 	mov	r7,a
      0009A2 BF 07 0B         [24] 2944 	cjne	r7,#0x07,00105$
                                   2945 ;	../sdk/src/watchdog/src/watchdog_start_and_set_timeout_in_ms.c:58: pwr_clk_mgmt_clklf_configure(PWR_CLK_MGMT_CLKLF_CONFIG_OPTION_CLK_SRC_XOSC16M);
      0009A5 75 82 02         [24] 2946 	mov	dpl,#0x02
      0009A8 12r08rD2         [24] 2947 	lcall	_pwr_clk_mgmt_clklf_configure
                                   2948 ;	../sdk/src/watchdog/src/watchdog_start_and_set_timeout_in_ms.c:59: pwr_clk_mgmt_wait_until_clklf_is_ready();
      0009AB                       2949 00101$:
      0009AB E5 AD            [12] 2950 	mov	a,_CLKLFCTRL
      0009AD 30 E6 FB         [24] 2951 	jnb	acc.6,00101$
      0009B0                       2952 00105$:
                                   2953 ;	../sdk/src/watchdog/src/watchdog_start_and_set_timeout_in_ms.c:63: if(milliseconds < 511992)
      0009B0 90r00r51         [24] 2954 	mov	dptr,#_watchdog_start_and_set_timeout_in_ms_milliseconds_1_166
      0009B3 E0               [24] 2955 	movx	a,@dptr
      0009B4 FC               [12] 2956 	mov	r4,a
      0009B5 A3               [24] 2957 	inc	dptr
      0009B6 E0               [24] 2958 	movx	a,@dptr
      0009B7 FD               [12] 2959 	mov	r5,a
      0009B8 A3               [24] 2960 	inc	dptr
      0009B9 E0               [24] 2961 	movx	a,@dptr
      0009BA FE               [12] 2962 	mov	r6,a
      0009BB A3               [24] 2963 	inc	dptr
      0009BC E0               [24] 2964 	movx	a,@dptr
      0009BD FF               [12] 2965 	mov	r7,a
      0009BE C3               [12] 2966 	clr	c
      0009BF EC               [12] 2967 	mov	a,r4
      0009C0 94 F8            [12] 2968 	subb	a,#0xf8
      0009C2 ED               [12] 2969 	mov	a,r5
      0009C3 94 CF            [12] 2970 	subb	a,#0xcf
      0009C5 EE               [12] 2971 	mov	a,r6
      0009C6 94 07            [12] 2972 	subb	a,#0x07
      0009C8 EF               [12] 2973 	mov	a,r7
      0009C9 94 00            [12] 2974 	subb	a,#0x00
      0009CB 50 51            [24] 2975 	jnc	00107$
                                   2976 ;	../sdk/src/watchdog/src/watchdog_start_and_set_timeout_in_ms.c:90: wd_value = (uint16_t)(((uint32_t)(milliseconds * ((uint32_t)128)) + (uint32_t)500) / ((uint32_t)1000));
      0009CD EF               [12] 2977 	mov	a,r7
      0009CE 54 01            [12] 2978 	anl	a,#0x01
      0009D0 A2 E0            [12] 2979 	mov	c,acc.0
      0009D2 CE               [12] 2980 	xch	a,r6
      0009D3 13               [12] 2981 	rrc	a
      0009D4 CE               [12] 2982 	xch	a,r6
      0009D5 13               [12] 2983 	rrc	a
      0009D6 CE               [12] 2984 	xch	a,r6
      0009D7 FF               [12] 2985 	mov	r7,a
      0009D8 ED               [12] 2986 	mov	a,r5
      0009D9 C3               [12] 2987 	clr	c
      0009DA 13               [12] 2988 	rrc	a
      0009DB 4E               [12] 2989 	orl	a,r6
      0009DC FE               [12] 2990 	mov	r6,a
      0009DD ED               [12] 2991 	mov	a,r5
      0009DE 54 01            [12] 2992 	anl	a,#0x01
      0009E0 A2 E0            [12] 2993 	mov	c,acc.0
      0009E2 CC               [12] 2994 	xch	a,r4
      0009E3 13               [12] 2995 	rrc	a
      0009E4 CC               [12] 2996 	xch	a,r4
      0009E5 13               [12] 2997 	rrc	a
      0009E6 CC               [12] 2998 	xch	a,r4
      0009E7 FD               [12] 2999 	mov	r5,a
      0009E8 74 F4            [12] 3000 	mov	a,#0xf4
      0009EA 2C               [12] 3001 	add	a,r4
      0009EB FC               [12] 3002 	mov	r4,a
      0009EC 74 01            [12] 3003 	mov	a,#0x01
      0009EE 3D               [12] 3004 	addc	a,r5
      0009EF FD               [12] 3005 	mov	r5,a
      0009F0 E4               [12] 3006 	clr	a
      0009F1 3E               [12] 3007 	addc	a,r6
      0009F2 FE               [12] 3008 	mov	r6,a
      0009F3 E4               [12] 3009 	clr	a
      0009F4 3F               [12] 3010 	addc	a,r7
      0009F5 FF               [12] 3011 	mov	r7,a
      0009F6 90r00r00         [24] 3012 	mov	dptr,#__divulong_PARM_2
      0009F9 74 E8            [12] 3013 	mov	a,#0xe8
      0009FB F0               [24] 3014 	movx	@dptr,a
      0009FC 74 03            [12] 3015 	mov	a,#0x03
      0009FE A3               [24] 3016 	inc	dptr
      0009FF F0               [24] 3017 	movx	@dptr,a
      000A00 E4               [12] 3018 	clr	a
      000A01 A3               [24] 3019 	inc	dptr
      000A02 F0               [24] 3020 	movx	@dptr,a
      000A03 A3               [24] 3021 	inc	dptr
      000A04 F0               [24] 3022 	movx	@dptr,a
      000A05 8C 82            [24] 3023 	mov	dpl,r4
      000A07 8D 83            [24] 3024 	mov	dph,r5
      000A09 8E F0            [24] 3025 	mov	b,r6
      000A0B EF               [12] 3026 	mov	a,r7
      000A0C 12r00r00         [24] 3027 	lcall	__divulong
      000A0F AC 82            [24] 3028 	mov	r4,dpl
      000A11 AD 83            [24] 3029 	mov	r5,dph
      000A13 AE F0            [24] 3030 	mov	r6,b
      000A15 FF               [12] 3031 	mov	r7,a
      000A16 90r00r55         [24] 3032 	mov	dptr,#_watchdog_start_and_set_timeout_in_ms_wd_value_1_167
      000A19 EC               [12] 3033 	mov	a,r4
      000A1A F0               [24] 3034 	movx	@dptr,a
      000A1B ED               [12] 3035 	mov	a,r5
      000A1C A3               [24] 3036 	inc	dptr
      000A1D F0               [24] 3037 	movx	@dptr,a
      000A1E                       3038 00107$:
                                   3039 ;	../sdk/src/watchdog/src/watchdog_start_and_set_timeout_in_ms.c:93: watchdog_set_wdsv_count(wd_value);
      000A1E 90r00r55         [24] 3040 	mov	dptr,#_watchdog_start_and_set_timeout_in_ms_wd_value_1_167
      000A21 E0               [24] 3041 	movx	a,@dptr
      000A22 FE               [12] 3042 	mov	r6,a
      000A23 A3               [24] 3043 	inc	dptr
      000A24 E0               [24] 3044 	movx	a,@dptr
      000A25 FF               [12] 3045 	mov	r7,a
      000A26 8E 82            [24] 3046 	mov	dpl,r6
      000A28 8F 83            [24] 3047 	mov	dph,r7
      000A2A C0 07            [24] 3048 	push	ar7
      000A2C C0 06            [24] 3049 	push	ar6
      000A2E 12r09r69         [24] 3050 	lcall	_watchdog_set_wdsv_count
      000A31 D0 06            [24] 3051 	pop	ar6
      000A33 D0 07            [24] 3052 	pop	ar7
                                   3053 ;	../sdk/src/watchdog/src/watchdog_start_and_set_timeout_in_ms.c:95: return wd_value;
      000A35 8E 82            [24] 3054 	mov	dpl,r6
      000A37 8F 83            [24] 3055 	mov	dph,r7
      000A39 22               [24] 3056 	ret
                                   3057 ;------------------------------------------------------------
                                   3058 ;Allocation info for local variables in function 'interrupt_configure_ifp'
                                   3059 ;------------------------------------------------------------
                                   3060 ;ifp_int_config_options    Allocated with name '_interrupt_configure_ifp_PARM_2'
                                   3061 ;interrupt_ifp_input       Allocated with name '_interrupt_configure_ifp_interrupt_ifp_input_1_170'
                                   3062 ;------------------------------------------------------------
                                   3063 ;	../sdk/src/interrupt/src/interrupt_configure_ifp.c:57: bool interrupt_configure_ifp(interrupt_ifp_input_t interrupt_ifp_input, uint8_t ifp_int_config_options)
                                   3064 ;	-----------------------------------------
                                   3065 ;	 function interrupt_configure_ifp
                                   3066 ;	-----------------------------------------
      000A3A                       3067 _interrupt_configure_ifp:
      000A3A E5 82            [12] 3068 	mov	a,dpl
      000A3C 90r00r58         [24] 3069 	mov	dptr,#_interrupt_configure_ifp_interrupt_ifp_input_1_170
      000A3F F0               [24] 3070 	movx	@dptr,a
                                   3071 ;	../sdk/src/interrupt/src/interrupt_configure_ifp.c:60: if(ifp_int_config_options & INTERRUPT_IFP_CONFIG_OPTION_ENABLE)
      000A40 90r00r57         [24] 3072 	mov	dptr,#_interrupt_configure_ifp_PARM_2
      000A43 E0               [24] 3073 	movx	a,@dptr
      000A44 FF               [12] 3074 	mov	r7,a
      000A45 30 E7 3D         [24] 3075 	jnb	acc.7,00116$
                                   3076 ;	../sdk/src/interrupt/src/interrupt_configure_ifp.c:63: if(interrupt_ifp_input == INTERRUPT_IFP_INPUT_GPINT0)
      000A48 90r00r58         [24] 3077 	mov	dptr,#_interrupt_configure_ifp_interrupt_ifp_input_1_170
      000A4B E0               [24] 3078 	movx	a,@dptr
      000A4C FE               [12] 3079 	mov	r6,a
      000A4D BE 08 0A         [24] 3080 	cjne	r6,#0x08,00108$
                                   3081 ;	../sdk/src/interrupt/src/interrupt_configure_ifp.c:65: INTEXP = (INTEXP & ~INTERRUPT_IFP_CONFIG_INTEXP_GPINTX_MASK) | INTERRUPT_IFP_INPUT_GPINT0;
      000A50 74 C7            [12] 3082 	mov	a,#0xc7
      000A52 55 A6            [12] 3083 	anl	a,_INTEXP
      000A54 44 08            [12] 3084 	orl	a,#0x08
      000A56 F5 A6            [12] 3085 	mov	_INTEXP,a
      000A58 80 1E            [24] 3086 	sjmp	00109$
      000A5A                       3087 00108$:
                                   3088 ;	../sdk/src/interrupt/src/interrupt_configure_ifp.c:67: else if(interrupt_ifp_input == INTERRUPT_IFP_INPUT_GPINT1)
      000A5A BE 10 0A         [24] 3089 	cjne	r6,#0x10,00105$
                                   3090 ;	../sdk/src/interrupt/src/interrupt_configure_ifp.c:69: INTEXP = (INTEXP & ~INTERRUPT_IFP_CONFIG_INTEXP_GPINTX_MASK) | INTERRUPT_IFP_INPUT_GPINT1;
      000A5D 74 C7            [12] 3091 	mov	a,#0xc7
      000A5F 55 A6            [12] 3092 	anl	a,_INTEXP
      000A61 44 10            [12] 3093 	orl	a,#0x10
      000A63 F5 A6            [12] 3094 	mov	_INTEXP,a
      000A65 80 11            [24] 3095 	sjmp	00109$
      000A67                       3096 00105$:
                                   3097 ;	../sdk/src/interrupt/src/interrupt_configure_ifp.c:71: else if(interrupt_ifp_input == INTERRUPT_IFP_INPUT_GPINT2)
      000A67 BE 20 0A         [24] 3098 	cjne	r6,#0x20,00102$
                                   3099 ;	../sdk/src/interrupt/src/interrupt_configure_ifp.c:73: INTEXP = (INTEXP & ~INTERRUPT_IFP_CONFIG_INTEXP_GPINTX_MASK) | INTERRUPT_IFP_INPUT_GPINT2;
      000A6A 74 C7            [12] 3100 	mov	a,#0xc7
      000A6C 55 A6            [12] 3101 	anl	a,_INTEXP
      000A6E 44 20            [12] 3102 	orl	a,#0x20
      000A70 F5 A6            [12] 3103 	mov	_INTEXP,a
      000A72 80 04            [24] 3104 	sjmp	00109$
      000A74                       3105 00102$:
                                   3106 ;	../sdk/src/interrupt/src/interrupt_configure_ifp.c:78: return false;
      000A74 75 82 00         [24] 3107 	mov	dpl,#0x00
      000A77 22               [24] 3108 	ret
      000A78                       3109 00109$:
                                   3110 ;	../sdk/src/interrupt/src/interrupt_configure_ifp.c:82: TCON = (TCON & ~INTERRUPT_IFP_CONFIG_TCON_MASK) | (ifp_int_config_options & INTERRUPT_IFP_CONFIG_TCON_MASK);
      000A78 74 FE            [12] 3111 	mov	a,#0xfe
      000A7A 55 88            [12] 3112 	anl	a,_TCON
      000A7C FE               [12] 3113 	mov	r6,a
      000A7D 74 01            [12] 3114 	mov	a,#0x01
      000A7F 5F               [12] 3115 	anl	a,r7
      000A80 4E               [12] 3116 	orl	a,r6
      000A81 F5 88            [12] 3117 	mov	_TCON,a
      000A83 80 1B            [24] 3118 	sjmp	00117$
      000A85                       3119 00116$:
                                   3120 ;	../sdk/src/interrupt/src/interrupt_configure_ifp.c:87: if((interrupt_ifp_input == INTERRUPT_IFP_INPUT_GPINT0) || (interrupt_ifp_input == INTERRUPT_IFP_INPUT_GPINT1) || (interrupt_ifp_input == INTERRUPT_IFP_INPUT_GPINT2))
      000A85 90r00r58         [24] 3121 	mov	dptr,#_interrupt_configure_ifp_interrupt_ifp_input_1_170
      000A88 E0               [24] 3122 	movx	a,@dptr
      000A89 FF               [12] 3123 	mov	r7,a
      000A8A BF 08 02         [24] 3124 	cjne	r7,#0x08,00145$
      000A8D 80 08            [24] 3125 	sjmp	00110$
      000A8F                       3126 00145$:
      000A8F BF 10 02         [24] 3127 	cjne	r7,#0x10,00146$
      000A92 80 03            [24] 3128 	sjmp	00110$
      000A94                       3129 00146$:
      000A94 BF 20 05         [24] 3130 	cjne	r7,#0x20,00111$
      000A97                       3131 00110$:
                                   3132 ;	../sdk/src/interrupt/src/interrupt_configure_ifp.c:89: INTEXP = (INTEXP & ~INTERRUPT_IFP_CONFIG_INTEXP_GPINTX_MASK);
      000A97 53 A6 C7         [24] 3133 	anl	_INTEXP,#0xc7
      000A9A 80 04            [24] 3134 	sjmp	00117$
      000A9C                       3135 00111$:
                                   3136 ;	../sdk/src/interrupt/src/interrupt_configure_ifp.c:94: return false;
      000A9C 75 82 00         [24] 3137 	mov	dpl,#0x00
      000A9F 22               [24] 3138 	ret
      000AA0                       3139 00117$:
                                   3140 ;	../sdk/src/interrupt/src/interrupt_configure_ifp.c:98: return true;
      000AA0 75 82 01         [24] 3141 	mov	dpl,#0x01
      000AA3 22               [24] 3142 	ret
                                   3143 ;------------------------------------------------------------
                                   3144 ;Allocation info for local variables in function 'adc_configure'
                                   3145 ;------------------------------------------------------------
                                   3146 ;adc_config_options        Allocated with name '_adc_configure_adc_config_options_1_184'
                                   3147 ;------------------------------------------------------------
                                   3148 ;	../sdk/src/adc/src/adc_configure.c:54: void adc_configure(unsigned int adc_config_options)
                                   3149 ;	-----------------------------------------
                                   3150 ;	 function adc_configure
                                   3151 ;	-----------------------------------------
      000AA4                       3152 _adc_configure:
      000AA4 AF 83            [24] 3153 	mov	r7,dph
      000AA6 E5 82            [12] 3154 	mov	a,dpl
      000AA8 90r00r59         [24] 3155 	mov	dptr,#_adc_configure_adc_config_options_1_184
      000AAB F0               [24] 3156 	movx	@dptr,a
      000AAC EF               [12] 3157 	mov	a,r7
      000AAD A3               [24] 3158 	inc	dptr
      000AAE F0               [24] 3159 	movx	@dptr,a
                                   3160 ;	../sdk/src/adc/src/adc_configure.c:57: ADCCON1 = (adc_config_options >> 8) & ADC_CONFIG_OPTION_ADCCON1_WRITE_MASK;
      000AAF 90r00r59         [24] 3161 	mov	dptr,#_adc_configure_adc_config_options_1_184
      000AB2 E0               [24] 3162 	movx	a,@dptr
      000AB3 FE               [12] 3163 	mov	r6,a
      000AB4 A3               [24] 3164 	inc	dptr
      000AB5 E0               [24] 3165 	movx	a,@dptr
      000AB6 FD               [12] 3166 	mov	r5,a
      000AB7 74 03            [12] 3167 	mov	a,#0x03
      000AB9 5D               [12] 3168 	anl	a,r5
      000ABA F5 D3            [12] 3169 	mov	_ADCCON1,a
                                   3170 ;	../sdk/src/adc/src/adc_configure.c:58: ADCCON2 = (adc_config_options)      & ADC_CONFIG_OPTION_ADCCON2_WRITE_MASK;
      000ABC 8E D2            [24] 3171 	mov	_ADCCON2,r6
                                   3172 ;	../sdk/src/adc/src/adc_configure.c:59: ADCCON3 = (adc_config_options >> 8) & ADC_CONFIG_OPTION_ADCCON3_WRITE_MASK;
      000ABE 74 E0            [12] 3173 	mov	a,#0xe0
      000AC0 5D               [12] 3174 	anl	a,r5
      000AC1 F5 D1            [12] 3175 	mov	_ADCCON3,a
      000AC3 22               [24] 3176 	ret
                                   3177 ;------------------------------------------------------------
                                   3178 ;Allocation info for local variables in function 'adc_set_input_channel'
                                   3179 ;------------------------------------------------------------
                                   3180 ;adc_channel               Allocated with name '_adc_set_input_channel_adc_channel_1_186'
                                   3181 ;------------------------------------------------------------
                                   3182 ;	../sdk/src/adc/src/adc_set_input_channel.c:46: void adc_set_input_channel(adc_channel_t adc_channel)
                                   3183 ;	-----------------------------------------
                                   3184 ;	 function adc_set_input_channel
                                   3185 ;	-----------------------------------------
      000AC4                       3186 _adc_set_input_channel:
      000AC4 E5 82            [12] 3187 	mov	a,dpl
      000AC6 90r00r5B         [24] 3188 	mov	dptr,#_adc_set_input_channel_adc_channel_1_186
      000AC9 F0               [24] 3189 	movx	@dptr,a
                                   3190 ;	../sdk/src/adc/src/adc_set_input_channel.c:49: adc_channel &= (ADCCON1_CHAN_SEL_MASK >> ADCCON1_CHAN_SEL_SHIFT);
      000ACA E0               [24] 3191 	movx	a,@dptr
      000ACB FF               [12] 3192 	mov	r7,a
      000ACC 74 0F            [12] 3193 	mov	a,#0x0f
      000ACE 5F               [12] 3194 	anl	a,r7
      000ACF F0               [24] 3195 	movx	@dptr,a
                                   3196 ;	../sdk/src/adc/src/adc_set_input_channel.c:52: ADCCON1 = (ADCCON1 & ~ADCCON1_CHAN_SEL_MASK) | (adc_channel << ADCCON1_CHAN_SEL_SHIFT);
      000AD0 74 C3            [12] 3197 	mov	a,#0xc3
      000AD2 55 D3            [12] 3198 	anl	a,_ADCCON1
      000AD4 FF               [12] 3199 	mov	r7,a
      000AD5 E0               [24] 3200 	movx	a,@dptr
      000AD6 25 E0            [12] 3201 	add	a,acc
      000AD8 25 E0            [12] 3202 	add	a,acc
      000ADA 4F               [12] 3203 	orl	a,r7
      000ADB F5 D3            [12] 3204 	mov	_ADCCON1,a
      000ADD 22               [24] 3205 	ret
                                   3206 ;------------------------------------------------------------
                                   3207 ;Allocation info for local variables in function 'adc_start_single_conversion'
                                   3208 ;------------------------------------------------------------
                                   3209 ;adc_channel               Allocated with name '_adc_start_single_conversion_adc_channel_1_188'
                                   3210 ;------------------------------------------------------------
                                   3211 ;	../sdk/src/adc/src/adc_start_single_conversion.c:47: void adc_start_single_conversion(adc_channel_t adc_channel)
                                   3212 ;	-----------------------------------------
                                   3213 ;	 function adc_start_single_conversion
                                   3214 ;	-----------------------------------------
      000ADE                       3215 _adc_start_single_conversion:
      000ADE E5 82            [12] 3216 	mov	a,dpl
      000AE0 90r00r5C         [24] 3217 	mov	dptr,#_adc_start_single_conversion_adc_channel_1_188
      000AE3 F0               [24] 3218 	movx	@dptr,a
                                   3219 ;	../sdk/src/adc/src/adc_start_single_conversion.c:49: adc_set_input_channel(adc_channel);
      000AE4 E0               [24] 3220 	movx	a,@dptr
      000AE5 F5 82            [12] 3221 	mov	dpl,a
      000AE7 12r0ArC4         [24] 3222 	lcall	_adc_set_input_channel
                                   3223 ;	../sdk/src/adc/src/adc_start_single_conversion.c:52: adc_power_up();
      000AEA 43 D3 80         [24] 3224 	orl	_ADCCON1,#0x80
                                   3225 ;	../sdk/src/adc/src/adc_start_single_conversion.c:53: nop(); nop(); nop(); nop(); //4 clock cycles must elapse before busy flag is set (datasheet v1.3, p. 165)
      000AED 00               [12] 3226 	nop	
      000AEE 00               [12] 3227 	nop	
      000AEF 00               [12] 3228 	nop	
      000AF0 00               [12] 3229 	nop	
      000AF1 22               [24] 3230 	ret
                                   3231 ;------------------------------------------------------------
                                   3232 ;Allocation info for local variables in function 'adc_start_single_conversion_get_value'
                                   3233 ;------------------------------------------------------------
                                   3234 ;adc_channel               Allocated with name '_adc_start_single_conversion_get_value_adc_channel_1_190'
                                   3235 ;------------------------------------------------------------
                                   3236 ;	../sdk/src/adc/src/adc_start_single_conversion_get_value.c:48: uint16_t adc_start_single_conversion_get_value(adc_channel_t adc_channel)
                                   3237 ;	-----------------------------------------
                                   3238 ;	 function adc_start_single_conversion_get_value
                                   3239 ;	-----------------------------------------
      000AF2                       3240 _adc_start_single_conversion_get_value:
      000AF2 E5 82            [12] 3241 	mov	a,dpl
      000AF4 90r00r5D         [24] 3242 	mov	dptr,#_adc_start_single_conversion_get_value_adc_channel_1_190
      000AF7 F0               [24] 3243 	movx	@dptr,a
                                   3244 ;	../sdk/src/adc/src/adc_start_single_conversion_get_value.c:50: adc_start_single_conversion(adc_channel);
      000AF8 E0               [24] 3245 	movx	a,@dptr
      000AF9 F5 82            [12] 3246 	mov	dpl,a
      000AFB 12r0ArDE         [24] 3247 	lcall	_adc_start_single_conversion
                                   3248 ;	../sdk/src/adc/src/adc_start_single_conversion_get_value.c:52: while(adc_is_conversion_in_progress());
      000AFE                       3249 00101$:
      000AFE 74 40            [12] 3250 	mov	a,#0x40
      000B00 55 D3            [12] 3251 	anl	a,_ADCCON1
      000B02 FF               [12] 3252 	mov	r7,a
      000B03 BF 40 02         [24] 3253 	cjne	r7,#0x40,00112$
      000B06 80 F6            [24] 3254 	sjmp	00101$
      000B08                       3255 00112$:
                                   3256 ;	../sdk/src/adc/src/adc_start_single_conversion_get_value.c:54: return adc_get_result();
      000B08 85 D5 82         [24] 3257 	mov	dpl,((_ADCDAT >> 0) & 0xFF)
      000B0B 85 D4 83         [24] 3258 	mov	dph,((_ADCDAT >> 8) & 0xFF)
      000B0E 22               [24] 3259 	ret
                                   3260 ;------------------------------------------------------------
                                   3261 ;Allocation info for local variables in function 'timer0_configure'
                                   3262 ;------------------------------------------------------------
                                   3263 ;t0_val                    Allocated with name '_timer0_configure_PARM_2'
                                   3264 ;timer0_config_options     Allocated with name '_timer0_configure_timer0_config_options_1_193'
                                   3265 ;------------------------------------------------------------
                                   3266 ;	../sdk/src/timer0/src/timer0_configure.c:53: void timer0_configure(uint8_t timer0_config_options, uint16_t t0_val)
                                   3267 ;	-----------------------------------------
                                   3268 ;	 function timer0_configure
                                   3269 ;	-----------------------------------------
      000B0F                       3270 _timer0_configure:
      000B0F E5 82            [12] 3271 	mov	a,dpl
      000B11 90r00r60         [24] 3272 	mov	dptr,#_timer0_configure_timer0_config_options_1_193
      000B14 F0               [24] 3273 	movx	@dptr,a
                                   3274 ;	../sdk/src/timer0/src/timer0_configure.c:56: if((timer0_config_options & TMOD_MODE0_MASK) == TIMER0_CONFIG_OPTION_MODE_2_8_BIT_AUTO_RLD_TMR)
      000B15 E0               [24] 3275 	movx	a,@dptr
      000B16 FF               [12] 3276 	mov	r7,a
      000B17 53 07 03         [24] 3277 	anl	ar7,#0x03
      000B1A BF 02 0E         [24] 3278 	cjne	r7,#0x02,00102$
                                   3279 ;	../sdk/src/timer0/src/timer0_configure.c:58: TH0 = (uint8_t)t0_val;
      000B1D 90r00r5E         [24] 3280 	mov	dptr,#_timer0_configure_PARM_2
      000B20 E0               [24] 3281 	movx	a,@dptr
      000B21 FE               [12] 3282 	mov	r6,a
      000B22 A3               [24] 3283 	inc	dptr
      000B23 E0               [24] 3284 	movx	a,@dptr
      000B24 FF               [12] 3285 	mov	r7,a
      000B25 8E 8C            [24] 3286 	mov	_TH0,r6
                                   3287 ;	../sdk/src/timer0/src/timer0_configure.c:59: TL0 = (uint8_t)t0_val;
      000B27 8E 8A            [24] 3288 	mov	_TL0,r6
      000B29 80 0A            [24] 3289 	sjmp	00103$
      000B2B                       3290 00102$:
                                   3291 ;	../sdk/src/timer0/src/timer0_configure.c:63: timer0_set_t0_val(t0_val);
      000B2B 90r00r5E         [24] 3292 	mov	dptr,#_timer0_configure_PARM_2
      000B2E E0               [24] 3293 	movx	a,@dptr
      000B2F F5 8A            [12] 3294 	mov	((_T0 >> 0) & 0xFF),a
      000B31 A3               [24] 3295 	inc	dptr
      000B32 E0               [24] 3296 	movx	a,@dptr
      000B33 F5 8C            [12] 3297 	mov	((_T0 >> 8) & 0xFF),a
      000B35                       3298 00103$:
                                   3299 ;	../sdk/src/timer0/src/timer0_configure.c:67: TMOD = (TMOD & ~TIMER0_CONFIG_OPTION_TMOD_MASK) | (timer0_config_options & TIMER0_CONFIG_OPTION_TMOD_MASK);
      000B35 74 F0            [12] 3300 	mov	a,#0xf0
      000B37 55 89            [12] 3301 	anl	a,_TMOD
      000B39 FF               [12] 3302 	mov	r7,a
      000B3A 90r00r60         [24] 3303 	mov	dptr,#_timer0_configure_timer0_config_options_1_193
      000B3D E0               [24] 3304 	movx	a,@dptr
      000B3E FE               [12] 3305 	mov	r6,a
      000B3F 74 0F            [12] 3306 	mov	a,#0x0f
      000B41 5E               [12] 3307 	anl	a,r6
      000B42 4F               [12] 3308 	orl	a,r7
      000B43 F5 89            [12] 3309 	mov	_TMOD,a
      000B45 22               [24] 3310 	ret
                                   3311 ;------------------------------------------------------------
                                   3312 ;Allocation info for local variables in function 'timer1_configure'
                                   3313 ;------------------------------------------------------------
                                   3314 ;t1_val                    Allocated with name '_timer1_configure_PARM_2'
                                   3315 ;timer1_config_options     Allocated with name '_timer1_configure_timer1_config_options_1_198'
                                   3316 ;------------------------------------------------------------
                                   3317 ;	../sdk/src/timer1/src/timer1_configure.c:53: void timer1_configure(uint8_t timer1_config_options, uint16_t t1_val)
                                   3318 ;	-----------------------------------------
                                   3319 ;	 function timer1_configure
                                   3320 ;	-----------------------------------------
      000B46                       3321 _timer1_configure:
      000B46 E5 82            [12] 3322 	mov	a,dpl
      000B48 90r00r63         [24] 3323 	mov	dptr,#_timer1_configure_timer1_config_options_1_198
      000B4B F0               [24] 3324 	movx	@dptr,a
                                   3325 ;	../sdk/src/timer1/src/timer1_configure.c:56: if((timer1_config_options & TMOD_MODE1_MASK) == TIMER1_CONFIG_OPTION_MODE_2_8_BIT_AUTO_RLD_TMR)
      000B4C E0               [24] 3326 	movx	a,@dptr
      000B4D FF               [12] 3327 	mov	r7,a
      000B4E 53 07 30         [24] 3328 	anl	ar7,#0x30
      000B51 BF 20 0E         [24] 3329 	cjne	r7,#0x20,00102$
                                   3330 ;	../sdk/src/timer1/src/timer1_configure.c:58: TH1 = (uint8_t)t1_val;
      000B54 90r00r61         [24] 3331 	mov	dptr,#_timer1_configure_PARM_2
      000B57 E0               [24] 3332 	movx	a,@dptr
      000B58 FE               [12] 3333 	mov	r6,a
      000B59 A3               [24] 3334 	inc	dptr
      000B5A E0               [24] 3335 	movx	a,@dptr
      000B5B FF               [12] 3336 	mov	r7,a
      000B5C 8E 8D            [24] 3337 	mov	_TH1,r6
                                   3338 ;	../sdk/src/timer1/src/timer1_configure.c:59: TL1 = (uint8_t)t1_val;
      000B5E 8E 8B            [24] 3339 	mov	_TL1,r6
      000B60 80 0A            [24] 3340 	sjmp	00103$
      000B62                       3341 00102$:
                                   3342 ;	../sdk/src/timer1/src/timer1_configure.c:63: timer1_set_t1_val(t1_val);
      000B62 90r00r61         [24] 3343 	mov	dptr,#_timer1_configure_PARM_2
      000B65 E0               [24] 3344 	movx	a,@dptr
      000B66 F5 8B            [12] 3345 	mov	((_T1 >> 0) & 0xFF),a
      000B68 A3               [24] 3346 	inc	dptr
      000B69 E0               [24] 3347 	movx	a,@dptr
      000B6A F5 8D            [12] 3348 	mov	((_T1 >> 8) & 0xFF),a
      000B6C                       3349 00103$:
                                   3350 ;	../sdk/src/timer1/src/timer1_configure.c:67: TMOD = (TMOD & ~TIMER1_CONFIG_OPTION_TMOD_MASK) | (timer1_config_options & TIMER1_CONFIG_OPTION_TMOD_MASK);
      000B6C 74 0F            [12] 3351 	mov	a,#0x0f
      000B6E 55 89            [12] 3352 	anl	a,_TMOD
      000B70 FF               [12] 3353 	mov	r7,a
      000B71 90r00r63         [24] 3354 	mov	dptr,#_timer1_configure_timer1_config_options_1_198
      000B74 E0               [24] 3355 	movx	a,@dptr
      000B75 FE               [12] 3356 	mov	r6,a
      000B76 74 F0            [12] 3357 	mov	a,#0xf0
      000B78 5E               [12] 3358 	anl	a,r6
      000B79 4F               [12] 3359 	orl	a,r7
      000B7A F5 89            [12] 3360 	mov	_TMOD,a
      000B7C 22               [24] 3361 	ret
                                   3362 ;------------------------------------------------------------
                                   3363 ;Allocation info for local variables in function 'rtc2_configure'
                                   3364 ;------------------------------------------------------------
                                   3365 ;compare_value             Allocated with name '_rtc2_configure_PARM_2'
                                   3366 ;rtc2_config_options       Allocated with name '_rtc2_configure_rtc2_config_options_1_203'
                                   3367 ;------------------------------------------------------------
                                   3368 ;	../sdk/src/rtc2/src/rtc2_configure.c:53: void rtc2_configure(unsigned char rtc2_config_options, unsigned int compare_value)
                                   3369 ;	-----------------------------------------
                                   3370 ;	 function rtc2_configure
                                   3371 ;	-----------------------------------------
      000B7D                       3372 _rtc2_configure:
      000B7D E5 82            [12] 3373 	mov	a,dpl
      000B7F 90r00r66         [24] 3374 	mov	dptr,#_rtc2_configure_rtc2_config_options_1_203
      000B82 F0               [24] 3375 	movx	@dptr,a
                                   3376 ;	../sdk/src/rtc2/src/rtc2_configure.c:56: if(((rtc2_config_options & RTC2CON_COMPARE_MODE_MASK) == RTC2_CONFIG_OPTION_COMPARE_MODE_0_RESET_AT_IRQ) ||
      000B83 E0               [24] 3377 	movx	a,@dptr
      000B84 FF               [12] 3378 	mov	r7,a
      000B85 74 06            [12] 3379 	mov	a,#0x06
      000B87 5F               [12] 3380 	anl	a,r7
      000B88 FE               [12] 3381 	mov	r6,a
      000B89 BE 06 02         [24] 3382 	cjne	r6,#0x06,00109$
      000B8C 80 06            [24] 3383 	sjmp	00101$
      000B8E                       3384 00109$:
                                   3385 ;	../sdk/src/rtc2/src/rtc2_configure.c:57: ((rtc2_config_options & RTC2CON_COMPARE_MODE_MASK) == RTC2_CONFIG_OPTION_COMPARE_MODE_1_WRAP_AT_IRQ))
      000B8E 53 07 06         [24] 3386 	anl	ar7,#0x06
      000B91 BF 04 0C         [24] 3387 	cjne	r7,#0x04,00102$
      000B94                       3388 00101$:
                                   3389 ;	../sdk/src/rtc2/src/rtc2_configure.c:59: RTC2CMP0 = (unsigned char)compare_value;
      000B94 90r00r64         [24] 3390 	mov	dptr,#_rtc2_configure_PARM_2
      000B97 E0               [24] 3391 	movx	a,@dptr
      000B98 FE               [12] 3392 	mov	r6,a
      000B99 A3               [24] 3393 	inc	dptr
      000B9A E0               [24] 3394 	movx	a,@dptr
      000B9B FF               [12] 3395 	mov	r7,a
      000B9C 8E B4            [24] 3396 	mov	_RTC2CMP0,r6
                                   3397 ;	../sdk/src/rtc2/src/rtc2_configure.c:60: RTC2CMP1 = (unsigned char)(compare_value >> 8);
      000B9E 8F B5            [24] 3398 	mov	_RTC2CMP1,r7
      000BA0                       3399 00102$:
                                   3400 ;	../sdk/src/rtc2/src/rtc2_configure.c:64: RTC2CON = (RTC2CON & ~RTC2_CONFIG_OPTION_RTC2CON_MASK) | (rtc2_config_options & RTC2_CONFIG_OPTION_RTC2CON_MASK);
      000BA0 74 F0            [12] 3401 	mov	a,#0xf0
      000BA2 55 B3            [12] 3402 	anl	a,_RTC2CON
      000BA4 FF               [12] 3403 	mov	r7,a
      000BA5 90r00r66         [24] 3404 	mov	dptr,#_rtc2_configure_rtc2_config_options_1_203
      000BA8 E0               [24] 3405 	movx	a,@dptr
      000BA9 FE               [12] 3406 	mov	r6,a
      000BAA 74 0F            [12] 3407 	mov	a,#0x0f
      000BAC 5E               [12] 3408 	anl	a,r6
      000BAD 4F               [12] 3409 	orl	a,r7
      000BAE F5 B3            [12] 3410 	mov	_RTC2CON,a
      000BB0 22               [24] 3411 	ret
                                   3412 ;------------------------------------------------------------
                                   3413 ;Allocation info for local variables in function 'radiobegin'
                                   3414 ;------------------------------------------------------------
                                   3415 ;setup                     Allocated with name '_radiobegin_setup_1_206'
                                   3416 ;------------------------------------------------------------
                                   3417 ;	../nRFLE.c:22: void radiobegin() {
                                   3418 ;	-----------------------------------------
                                   3419 ;	 function radiobegin
                                   3420 ;	-----------------------------------------
      000BB1                       3421 _radiobegin:
                                   3422 ;	../nRFLE.c:26: rf_spi_configure_enable();
      000BB1 12r00r93         [24] 3423 	lcall	_rf_spi_configure_enable
                                   3424 ;	../nRFLE.c:28: setup = 255; // setup_retr setRetries 15*16+15
      000BB4 90r00r67         [24] 3425 	mov	dptr,#_radiobegin_setup_1_206
      000BB7 74 FF            [12] 3426 	mov	a,#0xff
      000BB9 F0               [24] 3427 	movx	@dptr,a
                                   3428 ;	../nRFLE.c:29: rf_write_register(RF_SETUP_RETR, &setup, 1);
      000BBA 90r00r05         [24] 3429 	mov	dptr,#_rf_write_register_PARM_2
      000BBD 74r67            [12] 3430 	mov	a,#_radiobegin_setup_1_206
      000BBF F0               [24] 3431 	movx	@dptr,a
      000BC0 74s00            [12] 3432 	mov	a,#(_radiobegin_setup_1_206 >> 8)
      000BC2 A3               [24] 3433 	inc	dptr
      000BC3 F0               [24] 3434 	movx	@dptr,a
      000BC4 E4               [12] 3435 	clr	a
      000BC5 A3               [24] 3436 	inc	dptr
      000BC6 F0               [24] 3437 	movx	@dptr,a
      000BC7 90r00r08         [24] 3438 	mov	dptr,#_rf_write_register_PARM_3
      000BCA 04               [12] 3439 	inc	a
      000BCB F0               [24] 3440 	movx	@dptr,a
      000BCC E4               [12] 3441 	clr	a
      000BCD A3               [24] 3442 	inc	dptr
      000BCE F0               [24] 3443 	movx	@dptr,a
      000BCF 75 82 04         [24] 3444 	mov	dpl,#0x04
      000BD2 02r00r55         [24] 3445 	ljmp	_rf_write_register
                                   3446 ;------------------------------------------------------------
                                   3447 ;Allocation info for local variables in function 'setChannel'
                                   3448 ;------------------------------------------------------------
                                   3449 ;channel                   Allocated with name '_setChannel_channel_1_207'
                                   3450 ;------------------------------------------------------------
                                   3451 ;	../nRFLE.c:35: void setChannel(unsigned char channel){
                                   3452 ;	-----------------------------------------
                                   3453 ;	 function setChannel
                                   3454 ;	-----------------------------------------
      000BD5                       3455 _setChannel:
      000BD5 E5 82            [12] 3456 	mov	a,dpl
      000BD7 90r00r68         [24] 3457 	mov	dptr,#_setChannel_channel_1_207
      000BDA F0               [24] 3458 	movx	@dptr,a
                                   3459 ;	../nRFLE.c:36: rf_write_register(RF_RF_CH, &channel, 1);
      000BDB 90r00r05         [24] 3460 	mov	dptr,#_rf_write_register_PARM_2
      000BDE 74r68            [12] 3461 	mov	a,#_setChannel_channel_1_207
      000BE0 F0               [24] 3462 	movx	@dptr,a
      000BE1 74s00            [12] 3463 	mov	a,#(_setChannel_channel_1_207 >> 8)
      000BE3 A3               [24] 3464 	inc	dptr
      000BE4 F0               [24] 3465 	movx	@dptr,a
      000BE5 E4               [12] 3466 	clr	a
      000BE6 A3               [24] 3467 	inc	dptr
      000BE7 F0               [24] 3468 	movx	@dptr,a
      000BE8 90r00r08         [24] 3469 	mov	dptr,#_rf_write_register_PARM_3
      000BEB 04               [12] 3470 	inc	a
      000BEC F0               [24] 3471 	movx	@dptr,a
      000BED E4               [12] 3472 	clr	a
      000BEE A3               [24] 3473 	inc	dptr
      000BEF F0               [24] 3474 	movx	@dptr,a
      000BF0 75 82 05         [24] 3475 	mov	dpl,#0x05
      000BF3 02r00r55         [24] 3476 	ljmp	_rf_write_register
                                   3477 ;------------------------------------------------------------
                                   3478 ;Allocation info for local variables in function 'setDataRate'
                                   3479 ;------------------------------------------------------------
                                   3480 ;speed                     Allocated with name '_setDataRate_speed_1_209'
                                   3481 ;buffer                    Allocated with name '_setDataRate_buffer_1_210'
                                   3482 ;------------------------------------------------------------
                                   3483 ;	../nRFLE.c:41: void setDataRate(unsigned char speed){
                                   3484 ;	-----------------------------------------
                                   3485 ;	 function setDataRate
                                   3486 ;	-----------------------------------------
      000BF6                       3487 _setDataRate:
      000BF6 E5 82            [12] 3488 	mov	a,dpl
      000BF8 90r00r69         [24] 3489 	mov	dptr,#_setDataRate_speed_1_209
      000BFB F0               [24] 3490 	movx	@dptr,a
                                   3491 ;	../nRFLE.c:43: rf_read_register(RF_RF_SETUP,&buffer,1);
      000BFC 90r00r25         [24] 3492 	mov	dptr,#_rf_read_register_PARM_2
      000BFF 74r6A            [12] 3493 	mov	a,#_setDataRate_buffer_1_210
      000C01 F0               [24] 3494 	movx	@dptr,a
      000C02 74s00            [12] 3495 	mov	a,#(_setDataRate_buffer_1_210 >> 8)
      000C04 A3               [24] 3496 	inc	dptr
      000C05 F0               [24] 3497 	movx	@dptr,a
      000C06 E4               [12] 3498 	clr	a
      000C07 A3               [24] 3499 	inc	dptr
      000C08 F0               [24] 3500 	movx	@dptr,a
      000C09 90r00r28         [24] 3501 	mov	dptr,#_rf_read_register_PARM_3
      000C0C 04               [12] 3502 	inc	a
      000C0D F0               [24] 3503 	movx	@dptr,a
      000C0E E4               [12] 3504 	clr	a
      000C0F A3               [24] 3505 	inc	dptr
      000C10 F0               [24] 3506 	movx	@dptr,a
      000C11 75 82 06         [24] 3507 	mov	dpl,#0x06
      000C14 12r03r05         [24] 3508 	lcall	_rf_read_register
                                   3509 ;	../nRFLE.c:45: buffer &= ~(_BV(RF_DR_LOW) | _BV(RF_DR_HIGH)) ;
      000C17 90r00r6A         [24] 3510 	mov	dptr,#_setDataRate_buffer_1_210
      000C1A E0               [24] 3511 	movx	a,@dptr
      000C1B FF               [12] 3512 	mov	r7,a
      000C1C 74 D7            [12] 3513 	mov	a,#0xd7
      000C1E 5F               [12] 3514 	anl	a,r7
      000C1F F0               [24] 3515 	movx	@dptr,a
                                   3516 ;	../nRFLE.c:47: if( speed == 1 )	 buffer |= _BV(RF_DR_LOW);
      000C20 90r00r69         [24] 3517 	mov	dptr,#_setDataRate_speed_1_209
      000C23 E0               [24] 3518 	movx	a,@dptr
      000C24 FF               [12] 3519 	mov	r7,a
      000C25 BF 01 0B         [24] 3520 	cjne	r7,#0x01,00104$
      000C28 90r00r6A         [24] 3521 	mov	dptr,#_setDataRate_buffer_1_210
      000C2B E0               [24] 3522 	movx	a,@dptr
      000C2C FE               [12] 3523 	mov	r6,a
      000C2D 74 20            [12] 3524 	mov	a,#0x20
      000C2F 4E               [12] 3525 	orl	a,r6
      000C30 F0               [24] 3526 	movx	@dptr,a
      000C31 80 0C            [24] 3527 	sjmp	00105$
      000C33                       3528 00104$:
                                   3529 ;	../nRFLE.c:49: else if ( speed == 3 ) buffer |= _BV(RF_DR_HIGH);
      000C33 BF 03 09         [24] 3530 	cjne	r7,#0x03,00105$
      000C36 90r00r6A         [24] 3531 	mov	dptr,#_setDataRate_buffer_1_210
      000C39 E0               [24] 3532 	movx	a,@dptr
      000C3A FF               [12] 3533 	mov	r7,a
      000C3B 74 08            [12] 3534 	mov	a,#0x08
      000C3D 4F               [12] 3535 	orl	a,r7
      000C3E F0               [24] 3536 	movx	@dptr,a
      000C3F                       3537 00105$:
                                   3538 ;	../nRFLE.c:51: rf_write_register(RF_RF_SETUP,&buffer,1 ) ;
      000C3F 90r00r05         [24] 3539 	mov	dptr,#_rf_write_register_PARM_2
      000C42 74r6A            [12] 3540 	mov	a,#_setDataRate_buffer_1_210
      000C44 F0               [24] 3541 	movx	@dptr,a
      000C45 74s00            [12] 3542 	mov	a,#(_setDataRate_buffer_1_210 >> 8)
      000C47 A3               [24] 3543 	inc	dptr
      000C48 F0               [24] 3544 	movx	@dptr,a
      000C49 E4               [12] 3545 	clr	a
      000C4A A3               [24] 3546 	inc	dptr
      000C4B F0               [24] 3547 	movx	@dptr,a
      000C4C 90r00r08         [24] 3548 	mov	dptr,#_rf_write_register_PARM_3
      000C4F 04               [12] 3549 	inc	a
      000C50 F0               [24] 3550 	movx	@dptr,a
      000C51 E4               [12] 3551 	clr	a
      000C52 A3               [24] 3552 	inc	dptr
      000C53 F0               [24] 3553 	movx	@dptr,a
      000C54 75 82 06         [24] 3554 	mov	dpl,#0x06
      000C57 02r00r55         [24] 3555 	ljmp	_rf_write_register
                                   3556 ;------------------------------------------------------------
                                   3557 ;Allocation info for local variables in function 'setAutoAck'
                                   3558 ;------------------------------------------------------------
                                   3559 ;enable                    Allocated with name '_setAutoAck_enable_1_211'
                                   3560 ;buffer                    Allocated with name '_setAutoAck_buffer_1_212'
                                   3561 ;------------------------------------------------------------
                                   3562 ;	../nRFLE.c:56: void setAutoAck(unsigned char enable)
                                   3563 ;	-----------------------------------------
                                   3564 ;	 function setAutoAck
                                   3565 ;	-----------------------------------------
      000C5A                       3566 _setAutoAck:
      000C5A E5 82            [12] 3567 	mov	a,dpl
      000C5C 90r00r6B         [24] 3568 	mov	dptr,#_setAutoAck_enable_1_211
      000C5F F0               [24] 3569 	movx	@dptr,a
                                   3570 ;	../nRFLE.c:60: if (enable==1) buffer=63;
      000C60 E0               [24] 3571 	movx	a,@dptr
      000C61 FF               [12] 3572 	mov	r7,a
      000C62 BF 01 08         [24] 3573 	cjne	r7,#0x01,00102$
      000C65 90r00r6C         [24] 3574 	mov	dptr,#_setAutoAck_buffer_1_212
      000C68 74 3F            [12] 3575 	mov	a,#0x3f
      000C6A F0               [24] 3576 	movx	@dptr,a
      000C6B 80 05            [24] 3577 	sjmp	00103$
      000C6D                       3578 00102$:
                                   3579 ;	../nRFLE.c:61: else        buffer=0;
      000C6D 90r00r6C         [24] 3580 	mov	dptr,#_setAutoAck_buffer_1_212
      000C70 E4               [12] 3581 	clr	a
      000C71 F0               [24] 3582 	movx	@dptr,a
      000C72                       3583 00103$:
                                   3584 ;	../nRFLE.c:62: rf_write_register(RF_EN_AA, &buffer,1);
      000C72 90r00r05         [24] 3585 	mov	dptr,#_rf_write_register_PARM_2
      000C75 74r6C            [12] 3586 	mov	a,#_setAutoAck_buffer_1_212
      000C77 F0               [24] 3587 	movx	@dptr,a
      000C78 74s00            [12] 3588 	mov	a,#(_setAutoAck_buffer_1_212 >> 8)
      000C7A A3               [24] 3589 	inc	dptr
      000C7B F0               [24] 3590 	movx	@dptr,a
      000C7C E4               [12] 3591 	clr	a
      000C7D A3               [24] 3592 	inc	dptr
      000C7E F0               [24] 3593 	movx	@dptr,a
      000C7F 90r00r08         [24] 3594 	mov	dptr,#_rf_write_register_PARM_3
      000C82 04               [12] 3595 	inc	a
      000C83 F0               [24] 3596 	movx	@dptr,a
      000C84 E4               [12] 3597 	clr	a
      000C85 A3               [24] 3598 	inc	dptr
      000C86 F0               [24] 3599 	movx	@dptr,a
      000C87 75 82 01         [24] 3600 	mov	dpl,#0x01
      000C8A 02r00r55         [24] 3601 	ljmp	_rf_write_register
                                   3602 ;------------------------------------------------------------
                                   3603 ;Allocation info for local variables in function 'setCRCLength'
                                   3604 ;------------------------------------------------------------
                                   3605 ;length                    Allocated with name '_setCRCLength_length_1_213'
                                   3606 ;buffer                    Allocated with name '_setCRCLength_buffer_1_214'
                                   3607 ;------------------------------------------------------------
                                   3608 ;	../nRFLE.c:67: void setCRCLength(unsigned char length)
                                   3609 ;	-----------------------------------------
                                   3610 ;	 function setCRCLength
                                   3611 ;	-----------------------------------------
      000C8D                       3612 _setCRCLength:
      000C8D E5 82            [12] 3613 	mov	a,dpl
      000C8F 90r00r6D         [24] 3614 	mov	dptr,#_setCRCLength_length_1_213
      000C92 F0               [24] 3615 	movx	@dptr,a
                                   3616 ;	../nRFLE.c:71: rf_read_register(RF_CONFIG,&buffer,1);
      000C93 90r00r25         [24] 3617 	mov	dptr,#_rf_read_register_PARM_2
      000C96 74r6E            [12] 3618 	mov	a,#_setCRCLength_buffer_1_214
      000C98 F0               [24] 3619 	movx	@dptr,a
      000C99 74s00            [12] 3620 	mov	a,#(_setCRCLength_buffer_1_214 >> 8)
      000C9B A3               [24] 3621 	inc	dptr
      000C9C F0               [24] 3622 	movx	@dptr,a
      000C9D E4               [12] 3623 	clr	a
      000C9E A3               [24] 3624 	inc	dptr
      000C9F F0               [24] 3625 	movx	@dptr,a
      000CA0 90r00r28         [24] 3626 	mov	dptr,#_rf_read_register_PARM_3
      000CA3 04               [12] 3627 	inc	a
      000CA4 F0               [24] 3628 	movx	@dptr,a
      000CA5 E4               [12] 3629 	clr	a
      000CA6 A3               [24] 3630 	inc	dptr
      000CA7 F0               [24] 3631 	movx	@dptr,a
      000CA8 75 82 00         [24] 3632 	mov	dpl,#0x00
      000CAB 12r03r05         [24] 3633 	lcall	_rf_read_register
                                   3634 ;	../nRFLE.c:73: buffer = buffer & ~( _BV(RF_CRCO) | _BV(RF_EN_CRC)) ;
      000CAE 90r00r6E         [24] 3635 	mov	dptr,#_setCRCLength_buffer_1_214
      000CB1 E0               [24] 3636 	movx	a,@dptr
      000CB2 FF               [12] 3637 	mov	r7,a
      000CB3 74 F3            [12] 3638 	mov	a,#0xf3
      000CB5 5F               [12] 3639 	anl	a,r7
      000CB6 F0               [24] 3640 	movx	@dptr,a
                                   3641 ;	../nRFLE.c:75: if (length==1) buffer |= _BV(RF_EN_CRC);
      000CB7 90r00r6D         [24] 3642 	mov	dptr,#_setCRCLength_length_1_213
      000CBA E0               [24] 3643 	movx	a,@dptr
      000CBB FF               [12] 3644 	mov	r7,a
      000CBC BF 01 0B         [24] 3645 	cjne	r7,#0x01,00104$
      000CBF 90r00r6E         [24] 3646 	mov	dptr,#_setCRCLength_buffer_1_214
      000CC2 E0               [24] 3647 	movx	a,@dptr
      000CC3 FE               [12] 3648 	mov	r6,a
      000CC4 74 08            [12] 3649 	mov	a,#0x08
      000CC6 4E               [12] 3650 	orl	a,r6
      000CC7 F0               [24] 3651 	movx	@dptr,a
      000CC8 80 0C            [24] 3652 	sjmp	00105$
      000CCA                       3653 00104$:
                                   3654 ;	../nRFLE.c:76: else if (length==2) buffer |= _BV(RF_EN_CRC) | _BV( RF_CRCO );
      000CCA BF 02 09         [24] 3655 	cjne	r7,#0x02,00105$
      000CCD 90r00r6E         [24] 3656 	mov	dptr,#_setCRCLength_buffer_1_214
      000CD0 E0               [24] 3657 	movx	a,@dptr
      000CD1 FF               [12] 3658 	mov	r7,a
      000CD2 74 0C            [12] 3659 	mov	a,#0x0c
      000CD4 4F               [12] 3660 	orl	a,r7
      000CD5 F0               [24] 3661 	movx	@dptr,a
      000CD6                       3662 00105$:
                                   3663 ;	../nRFLE.c:78: buffer |=1<<PWR_UP;
      000CD6 90r00r6E         [24] 3664 	mov	dptr,#_setCRCLength_buffer_1_214
      000CD9 E0               [24] 3665 	movx	a,@dptr
      000CDA FF               [12] 3666 	mov	r7,a
      000CDB 74 02            [12] 3667 	mov	a,#0x02
      000CDD 4F               [12] 3668 	orl	a,r7
      000CDE F0               [24] 3669 	movx	@dptr,a
                                   3670 ;	../nRFLE.c:80: rf_write_register(RF_CONFIG,&buffer,1 ) ;
      000CDF 90r00r05         [24] 3671 	mov	dptr,#_rf_write_register_PARM_2
      000CE2 74r6E            [12] 3672 	mov	a,#_setCRCLength_buffer_1_214
      000CE4 F0               [24] 3673 	movx	@dptr,a
      000CE5 74s00            [12] 3674 	mov	a,#(_setCRCLength_buffer_1_214 >> 8)
      000CE7 A3               [24] 3675 	inc	dptr
      000CE8 F0               [24] 3676 	movx	@dptr,a
      000CE9 E4               [12] 3677 	clr	a
      000CEA A3               [24] 3678 	inc	dptr
      000CEB F0               [24] 3679 	movx	@dptr,a
      000CEC 90r00r08         [24] 3680 	mov	dptr,#_rf_write_register_PARM_3
      000CEF 04               [12] 3681 	inc	a
      000CF0 F0               [24] 3682 	movx	@dptr,a
      000CF1 E4               [12] 3683 	clr	a
      000CF2 A3               [24] 3684 	inc	dptr
      000CF3 F0               [24] 3685 	movx	@dptr,a
      000CF4 75 82 00         [24] 3686 	mov	dpl,#0x00
      000CF7 02r00r55         [24] 3687 	ljmp	_rf_write_register
                                   3688 ;------------------------------------------------------------
                                   3689 ;Allocation info for local variables in function 'setPALevel'
                                   3690 ;------------------------------------------------------------
                                   3691 ;level                     Allocated with name '_setPALevel_level_1_215'
                                   3692 ;setup                     Allocated with name '_setPALevel_setup_1_216'
                                   3693 ;------------------------------------------------------------
                                   3694 ;	../nRFLE.c:84: void setPALevel(unsigned char level)
                                   3695 ;	-----------------------------------------
                                   3696 ;	 function setPALevel
                                   3697 ;	-----------------------------------------
      000CFA                       3698 _setPALevel:
      000CFA E5 82            [12] 3699 	mov	a,dpl
      000CFC 90r00r6F         [24] 3700 	mov	dptr,#_setPALevel_level_1_215
      000CFF F0               [24] 3701 	movx	@dptr,a
                                   3702 ;	../nRFLE.c:88: rf_read_register(RF_RF_SETUP,&setup,1) ;
      000D00 90r00r25         [24] 3703 	mov	dptr,#_rf_read_register_PARM_2
      000D03 74r70            [12] 3704 	mov	a,#_setPALevel_setup_1_216
      000D05 F0               [24] 3705 	movx	@dptr,a
      000D06 74s00            [12] 3706 	mov	a,#(_setPALevel_setup_1_216 >> 8)
      000D08 A3               [24] 3707 	inc	dptr
      000D09 F0               [24] 3708 	movx	@dptr,a
      000D0A E4               [12] 3709 	clr	a
      000D0B A3               [24] 3710 	inc	dptr
      000D0C F0               [24] 3711 	movx	@dptr,a
      000D0D 90r00r28         [24] 3712 	mov	dptr,#_rf_read_register_PARM_3
      000D10 04               [12] 3713 	inc	a
      000D11 F0               [24] 3714 	movx	@dptr,a
      000D12 E4               [12] 3715 	clr	a
      000D13 A3               [24] 3716 	inc	dptr
      000D14 F0               [24] 3717 	movx	@dptr,a
      000D15 75 82 06         [24] 3718 	mov	dpl,#0x06
      000D18 12r03r05         [24] 3719 	lcall	_rf_read_register
                                   3720 ;	../nRFLE.c:90: setup &= ~(_BV(RF_PWR_LOW) | _BV(RF_PWR_HIGH)) ;
      000D1B 90r00r70         [24] 3721 	mov	dptr,#_setPALevel_setup_1_216
      000D1E E0               [24] 3722 	movx	a,@dptr
      000D1F FF               [12] 3723 	mov	r7,a
      000D20 74 F9            [12] 3724 	mov	a,#0xf9
      000D22 5F               [12] 3725 	anl	a,r7
      000D23 F0               [24] 3726 	movx	@dptr,a
                                   3727 ;	../nRFLE.c:91: setup|= ((level&3)<<RF_PWR_LOW);
      000D24 90r00r6F         [24] 3728 	mov	dptr,#_setPALevel_level_1_215
      000D27 E0               [24] 3729 	movx	a,@dptr
      000D28 54 03            [12] 3730 	anl	a,#0x03
      000D2A 25 E0            [12] 3731 	add	a,acc
      000D2C FF               [12] 3732 	mov	r7,a
      000D2D 90r00r70         [24] 3733 	mov	dptr,#_setPALevel_setup_1_216
      000D30 E0               [24] 3734 	movx	a,@dptr
      000D31 4F               [12] 3735 	orl	a,r7
      000D32 F0               [24] 3736 	movx	@dptr,a
                                   3737 ;	../nRFLE.c:93: rf_write_register(RF_RF_SETUP,&setup,1);
      000D33 90r00r05         [24] 3738 	mov	dptr,#_rf_write_register_PARM_2
      000D36 74r70            [12] 3739 	mov	a,#_setPALevel_setup_1_216
      000D38 F0               [24] 3740 	movx	@dptr,a
      000D39 74s00            [12] 3741 	mov	a,#(_setPALevel_setup_1_216 >> 8)
      000D3B A3               [24] 3742 	inc	dptr
      000D3C F0               [24] 3743 	movx	@dptr,a
      000D3D E4               [12] 3744 	clr	a
      000D3E A3               [24] 3745 	inc	dptr
      000D3F F0               [24] 3746 	movx	@dptr,a
      000D40 90r00r08         [24] 3747 	mov	dptr,#_rf_write_register_PARM_3
      000D43 04               [12] 3748 	inc	a
      000D44 F0               [24] 3749 	movx	@dptr,a
      000D45 E4               [12] 3750 	clr	a
      000D46 A3               [24] 3751 	inc	dptr
      000D47 F0               [24] 3752 	movx	@dptr,a
      000D48 75 82 06         [24] 3753 	mov	dpl,#0x06
      000D4B 02r00r55         [24] 3754 	ljmp	_rf_write_register
                                   3755 ;------------------------------------------------------------
                                   3756 ;Allocation info for local variables in function 'openAllPipe'
                                   3757 ;------------------------------------------------------------
                                   3758 ;buffer                    Allocated with name '_openAllPipe_buffer_1_217'
                                   3759 ;setup                     Allocated with name '_openAllPipe_setup_1_217'
                                   3760 ;------------------------------------------------------------
                                   3761 ;	../nRFLE.c:101: void openAllPipe()
                                   3762 ;	-----------------------------------------
                                   3763 ;	 function openAllPipe
                                   3764 ;	-----------------------------------------
      000D4E                       3765 _openAllPipe:
                                   3766 ;	../nRFLE.c:106: buffer[1]=adr1;
      000D4E 90r00r72         [24] 3767 	mov	dptr,#(_openAllPipe_buffer_1_217 + 0x0001)
      000D51 74 F0            [12] 3768 	mov	a,#0xf0
      000D53 F0               [24] 3769 	movx	@dptr,a
                                   3770 ;	../nRFLE.c:107: buffer[2]=adr2;
      000D54 90r00r73         [24] 3771 	mov	dptr,#(_openAllPipe_buffer_1_217 + 0x0002)
      000D57 F0               [24] 3772 	movx	@dptr,a
                                   3773 ;	../nRFLE.c:108: buffer[3]=adr3;
      000D58 90r00r74         [24] 3774 	mov	dptr,#(_openAllPipe_buffer_1_217 + 0x0003)
      000D5B F0               [24] 3775 	movx	@dptr,a
                                   3776 ;	../nRFLE.c:109: buffer[4]=adr4;
      000D5C 90r00r75         [24] 3777 	mov	dptr,#(_openAllPipe_buffer_1_217 + 0x0004)
      000D5F F0               [24] 3778 	movx	@dptr,a
                                   3779 ;	../nRFLE.c:111: setup = 2; // en_rxaddr ,биты включения каналов B00000010 на прием
      000D60 90r00r76         [24] 3780 	mov	dptr,#_openAllPipe_setup_1_217
      000D63 74 02            [12] 3781 	mov	a,#0x02
      000D65 F0               [24] 3782 	movx	@dptr,a
                                   3783 ;	../nRFLE.c:112: rf_write_register(RF_EN_RXADDR, &setup, 1);
      000D66 90r00r05         [24] 3784 	mov	dptr,#_rf_write_register_PARM_2
      000D69 74r76            [12] 3785 	mov	a,#_openAllPipe_setup_1_217
      000D6B F0               [24] 3786 	movx	@dptr,a
      000D6C 74s00            [12] 3787 	mov	a,#(_openAllPipe_setup_1_217 >> 8)
      000D6E A3               [24] 3788 	inc	dptr
      000D6F F0               [24] 3789 	movx	@dptr,a
      000D70 E4               [12] 3790 	clr	a
      000D71 A3               [24] 3791 	inc	dptr
      000D72 F0               [24] 3792 	movx	@dptr,a
      000D73 90r00r08         [24] 3793 	mov	dptr,#_rf_write_register_PARM_3
      000D76 04               [12] 3794 	inc	a
      000D77 F0               [24] 3795 	movx	@dptr,a
      000D78 E4               [12] 3796 	clr	a
      000D79 A3               [24] 3797 	inc	dptr
      000D7A F0               [24] 3798 	movx	@dptr,a
      000D7B 75 82 02         [24] 3799 	mov	dpl,#0x02
      000D7E 12r00r55         [24] 3800 	lcall	_rf_write_register
                                   3801 ;	../nRFLE.c:115: buffer[0]=0xD2;
      000D81 90r00r71         [24] 3802 	mov	dptr,#_openAllPipe_buffer_1_217
      000D84 74 D2            [12] 3803 	mov	a,#0xd2
      000D86 F0               [24] 3804 	movx	@dptr,a
                                   3805 ;	../nRFLE.c:117: rf_write_register(RF_RX_ADDR_P0,buffer,5);
      000D87 90r00r05         [24] 3806 	mov	dptr,#_rf_write_register_PARM_2
      000D8A 74r71            [12] 3807 	mov	a,#_openAllPipe_buffer_1_217
      000D8C F0               [24] 3808 	movx	@dptr,a
      000D8D 74s00            [12] 3809 	mov	a,#(_openAllPipe_buffer_1_217 >> 8)
      000D8F A3               [24] 3810 	inc	dptr
      000D90 F0               [24] 3811 	movx	@dptr,a
      000D91 E4               [12] 3812 	clr	a
      000D92 A3               [24] 3813 	inc	dptr
      000D93 F0               [24] 3814 	movx	@dptr,a
      000D94 90r00r08         [24] 3815 	mov	dptr,#_rf_write_register_PARM_3
      000D97 74 05            [12] 3816 	mov	a,#0x05
      000D99 F0               [24] 3817 	movx	@dptr,a
      000D9A E4               [12] 3818 	clr	a
      000D9B A3               [24] 3819 	inc	dptr
      000D9C F0               [24] 3820 	movx	@dptr,a
      000D9D 75 82 0A         [24] 3821 	mov	dpl,#0x0a
      000DA0 12r00r55         [24] 3822 	lcall	_rf_write_register
                                   3823 ;	../nRFLE.c:118: rf_write_register(RF_TX_ADDR,buffer,5);
      000DA3 90r00r05         [24] 3824 	mov	dptr,#_rf_write_register_PARM_2
      000DA6 74r71            [12] 3825 	mov	a,#_openAllPipe_buffer_1_217
      000DA8 F0               [24] 3826 	movx	@dptr,a
      000DA9 74s00            [12] 3827 	mov	a,#(_openAllPipe_buffer_1_217 >> 8)
      000DAB A3               [24] 3828 	inc	dptr
      000DAC F0               [24] 3829 	movx	@dptr,a
      000DAD E4               [12] 3830 	clr	a
      000DAE A3               [24] 3831 	inc	dptr
      000DAF F0               [24] 3832 	movx	@dptr,a
      000DB0 90r00r08         [24] 3833 	mov	dptr,#_rf_write_register_PARM_3
      000DB3 74 05            [12] 3834 	mov	a,#0x05
      000DB5 F0               [24] 3835 	movx	@dptr,a
      000DB6 E4               [12] 3836 	clr	a
      000DB7 A3               [24] 3837 	inc	dptr
      000DB8 F0               [24] 3838 	movx	@dptr,a
      000DB9 75 82 10         [24] 3839 	mov	dpl,#0x10
      000DBC 12r00r55         [24] 3840 	lcall	_rf_write_register
                                   3841 ;	../nRFLE.c:122: buffer[0]=0xE1;
      000DBF 90r00r71         [24] 3842 	mov	dptr,#_openAllPipe_buffer_1_217
      000DC2 74 E1            [12] 3843 	mov	a,#0xe1
      000DC4 F0               [24] 3844 	movx	@dptr,a
                                   3845 ;	../nRFLE.c:124: rf_write_register(RF_RX_ADDR_P0+1,buffer,5);
      000DC5 90r00r05         [24] 3846 	mov	dptr,#_rf_write_register_PARM_2
      000DC8 74r71            [12] 3847 	mov	a,#_openAllPipe_buffer_1_217
      000DCA F0               [24] 3848 	movx	@dptr,a
      000DCB 74s00            [12] 3849 	mov	a,#(_openAllPipe_buffer_1_217 >> 8)
      000DCD A3               [24] 3850 	inc	dptr
      000DCE F0               [24] 3851 	movx	@dptr,a
      000DCF E4               [12] 3852 	clr	a
      000DD0 A3               [24] 3853 	inc	dptr
      000DD1 F0               [24] 3854 	movx	@dptr,a
      000DD2 90r00r08         [24] 3855 	mov	dptr,#_rf_write_register_PARM_3
      000DD5 74 05            [12] 3856 	mov	a,#0x05
      000DD7 F0               [24] 3857 	movx	@dptr,a
      000DD8 E4               [12] 3858 	clr	a
      000DD9 A3               [24] 3859 	inc	dptr
      000DDA F0               [24] 3860 	movx	@dptr,a
      000DDB 75 82 0B         [24] 3861 	mov	dpl,#0x0b
      000DDE 12r00r55         [24] 3862 	lcall	_rf_write_register
                                   3863 ;	../nRFLE.c:126: setup=32; //
      000DE1 90r00r76         [24] 3864 	mov	dptr,#_openAllPipe_setup_1_217
      000DE4 74 20            [12] 3865 	mov	a,#0x20
      000DE6 F0               [24] 3866 	movx	@dptr,a
                                   3867 ;	../nRFLE.c:127: rf_write_register(RF_RX_PW_P0+1,&setup,1);
      000DE7 90r00r05         [24] 3868 	mov	dptr,#_rf_write_register_PARM_2
      000DEA 74r76            [12] 3869 	mov	a,#_openAllPipe_setup_1_217
      000DEC F0               [24] 3870 	movx	@dptr,a
      000DED 74s00            [12] 3871 	mov	a,#(_openAllPipe_setup_1_217 >> 8)
      000DEF A3               [24] 3872 	inc	dptr
      000DF0 F0               [24] 3873 	movx	@dptr,a
      000DF1 E4               [12] 3874 	clr	a
      000DF2 A3               [24] 3875 	inc	dptr
      000DF3 F0               [24] 3876 	movx	@dptr,a
      000DF4 90r00r08         [24] 3877 	mov	dptr,#_rf_write_register_PARM_3
      000DF7 04               [12] 3878 	inc	a
      000DF8 F0               [24] 3879 	movx	@dptr,a
      000DF9 E4               [12] 3880 	clr	a
      000DFA A3               [24] 3881 	inc	dptr
      000DFB F0               [24] 3882 	movx	@dptr,a
      000DFC 75 82 12         [24] 3883 	mov	dpl,#0x12
      000DFF 02r00r55         [24] 3884 	ljmp	_rf_write_register
                                   3885 ;------------------------------------------------------------
                                   3886 ;Allocation info for local variables in function 'available'
                                   3887 ;------------------------------------------------------------
                                   3888 ;pipe_num                  Allocated with name '_available_pipe_num_1_218'
                                   3889 ;buffer                    Allocated with name '_available_buffer_1_219'
                                   3890 ;status                    Allocated with name '_available_status_1_219'
                                   3891 ;result                    Allocated with name '_available_result_1_219'
                                   3892 ;------------------------------------------------------------
                                   3893 ;	../nRFLE.c:200: unsigned char available(uint8_t* pipe_num)
                                   3894 ;	-----------------------------------------
                                   3895 ;	 function available
                                   3896 ;	-----------------------------------------
      000E02                       3897 _available:
      000E02 AF F0            [24] 3898 	mov	r7,b
      000E04 AE 83            [24] 3899 	mov	r6,dph
      000E06 E5 82            [12] 3900 	mov	a,dpl
      000E08 90r00r77         [24] 3901 	mov	dptr,#_available_pipe_num_1_218
      000E0B F0               [24] 3902 	movx	@dptr,a
      000E0C EE               [12] 3903 	mov	a,r6
      000E0D A3               [24] 3904 	inc	dptr
      000E0E F0               [24] 3905 	movx	@dptr,a
      000E0F EF               [12] 3906 	mov	a,r7
      000E10 A3               [24] 3907 	inc	dptr
      000E11 F0               [24] 3908 	movx	@dptr,a
                                   3909 ;	../nRFLE.c:203: uint8_t status = rf_get_status();
      000E12 90r00r15         [24] 3910 	mov	dptr,#_rf_spi_execute_command_PARM_2
      000E15 E4               [12] 3911 	clr	a
      000E16 F0               [24] 3912 	movx	@dptr,a
      000E17 A3               [24] 3913 	inc	dptr
      000E18 F0               [24] 3914 	movx	@dptr,a
      000E19 A3               [24] 3915 	inc	dptr
      000E1A F0               [24] 3916 	movx	@dptr,a
      000E1B 90r00r18         [24] 3917 	mov	dptr,#_rf_spi_execute_command_PARM_3
      000E1E F0               [24] 3918 	movx	@dptr,a
      000E1F A3               [24] 3919 	inc	dptr
      000E20 F0               [24] 3920 	movx	@dptr,a
      000E21 90r00r1A         [24] 3921 	mov	dptr,#_rf_spi_execute_command_PARM_4
      000E24 04               [12] 3922 	inc	a
      000E25 F0               [24] 3923 	movx	@dptr,a
      000E26 75 82 FF         [24] 3924 	mov	dpl,#0xff
      000E29 12r01rC9         [24] 3925 	lcall	_rf_spi_execute_command
      000E2C AF 82            [24] 3926 	mov	r7,dpl
                                   3927 ;	../nRFLE.c:206: uint8_t result = ( status & _BV(RX_DR) );
      000E2E 74 40            [12] 3928 	mov	a,#0x40
      000E30 5F               [12] 3929 	anl	a,r7
                                   3930 ;	../nRFLE.c:208: if (result)
      000E31 FE               [12] 3931 	mov	r6,a
      000E32 60 6E            [24] 3932 	jz	00104$
                                   3933 ;	../nRFLE.c:212: *pipe_num = ( status >> RX_P_NO ) & 7;
      000E34 90r00r77         [24] 3934 	mov	dptr,#_available_pipe_num_1_218
      000E37 E0               [24] 3935 	movx	a,@dptr
      000E38 FB               [12] 3936 	mov	r3,a
      000E39 A3               [24] 3937 	inc	dptr
      000E3A E0               [24] 3938 	movx	a,@dptr
      000E3B FC               [12] 3939 	mov	r4,a
      000E3C A3               [24] 3940 	inc	dptr
      000E3D E0               [24] 3941 	movx	a,@dptr
      000E3E FD               [12] 3942 	mov	r5,a
      000E3F EF               [12] 3943 	mov	a,r7
      000E40 C3               [12] 3944 	clr	c
      000E41 13               [12] 3945 	rrc	a
      000E42 FA               [12] 3946 	mov	r2,a
      000E43 53 02 07         [24] 3947 	anl	ar2,#0x07
      000E46 8B 82            [24] 3948 	mov	dpl,r3
      000E48 8C 83            [24] 3949 	mov	dph,r4
      000E4A 8D F0            [24] 3950 	mov	b,r5
      000E4C EA               [12] 3951 	mov	a,r2
      000E4D 12r00r00         [24] 3952 	lcall	__gptrput
                                   3953 ;	../nRFLE.c:214: buffer=64;// _BV(RX_DR);
      000E50 90r00r7A         [24] 3954 	mov	dptr,#_available_buffer_1_219
      000E53 74 40            [12] 3955 	mov	a,#0x40
      000E55 F0               [24] 3956 	movx	@dptr,a
                                   3957 ;	../nRFLE.c:215: rf_write_register(STATUS,&buffer,1 ); 
      000E56 90r00r05         [24] 3958 	mov	dptr,#_rf_write_register_PARM_2
      000E59 74r7A            [12] 3959 	mov	a,#_available_buffer_1_219
      000E5B F0               [24] 3960 	movx	@dptr,a
      000E5C 74s00            [12] 3961 	mov	a,#(_available_buffer_1_219 >> 8)
      000E5E A3               [24] 3962 	inc	dptr
      000E5F F0               [24] 3963 	movx	@dptr,a
      000E60 E4               [12] 3964 	clr	a
      000E61 A3               [24] 3965 	inc	dptr
      000E62 F0               [24] 3966 	movx	@dptr,a
      000E63 90r00r08         [24] 3967 	mov	dptr,#_rf_write_register_PARM_3
      000E66 04               [12] 3968 	inc	a
      000E67 F0               [24] 3969 	movx	@dptr,a
      000E68 E4               [12] 3970 	clr	a
      000E69 A3               [24] 3971 	inc	dptr
      000E6A F0               [24] 3972 	movx	@dptr,a
      000E6B 75 82 07         [24] 3973 	mov	dpl,#0x07
      000E6E C0 07            [24] 3974 	push	ar7
      000E70 C0 06            [24] 3975 	push	ar6
      000E72 12r00r55         [24] 3976 	lcall	_rf_write_register
      000E75 D0 06            [24] 3977 	pop	ar6
      000E77 D0 07            [24] 3978 	pop	ar7
                                   3979 ;	../nRFLE.c:218: if ( status & _BV(TX_DS) )
      000E79 EF               [12] 3980 	mov	a,r7
      000E7A 30 E5 25         [24] 3981 	jnb	acc.5,00104$
                                   3982 ;	../nRFLE.c:220: buffer=32;// _BV(TX_DS);
      000E7D 90r00r7A         [24] 3983 	mov	dptr,#_available_buffer_1_219
      000E80 74 20            [12] 3984 	mov	a,#0x20
      000E82 F0               [24] 3985 	movx	@dptr,a
                                   3986 ;	../nRFLE.c:221: rf_write_register(STATUS,&buffer,1 );
      000E83 90r00r05         [24] 3987 	mov	dptr,#_rf_write_register_PARM_2
      000E86 74r7A            [12] 3988 	mov	a,#_available_buffer_1_219
      000E88 F0               [24] 3989 	movx	@dptr,a
      000E89 74s00            [12] 3990 	mov	a,#(_available_buffer_1_219 >> 8)
      000E8B A3               [24] 3991 	inc	dptr
      000E8C F0               [24] 3992 	movx	@dptr,a
      000E8D E4               [12] 3993 	clr	a
      000E8E A3               [24] 3994 	inc	dptr
      000E8F F0               [24] 3995 	movx	@dptr,a
      000E90 90r00r08         [24] 3996 	mov	dptr,#_rf_write_register_PARM_3
      000E93 04               [12] 3997 	inc	a
      000E94 F0               [24] 3998 	movx	@dptr,a
      000E95 E4               [12] 3999 	clr	a
      000E96 A3               [24] 4000 	inc	dptr
      000E97 F0               [24] 4001 	movx	@dptr,a
      000E98 75 82 07         [24] 4002 	mov	dpl,#0x07
      000E9B C0 06            [24] 4003 	push	ar6
      000E9D 12r00r55         [24] 4004 	lcall	_rf_write_register
      000EA0 D0 06            [24] 4005 	pop	ar6
      000EA2                       4006 00104$:
                                   4007 ;	../nRFLE.c:225: return result;
      000EA2 8E 82            [24] 4008 	mov	dpl,r6
      000EA4 22               [24] 4009 	ret
                                   4010 ;------------------------------------------------------------
                                   4011 ;Allocation info for local variables in function 'OneWireReset'
                                   4012 ;------------------------------------------------------------
                                   4013 ;r                         Allocated with name '_OneWireReset_r_1_225'
                                   4014 ;------------------------------------------------------------
                                   4015 ;	../libraries/ds18b20/ds18b20.c:10: static uint8_t OneWireReset(void)
                                   4016 ;	-----------------------------------------
                                   4017 ;	 function OneWireReset
                                   4018 ;	-----------------------------------------
      000EA5                       4019 _OneWireReset:
                                   4020 ;	../libraries/ds18b20/ds18b20.c:16: );
      000EA5 90r00r35         [24] 4021 	mov	dptr,#_gpio_pin_configure_PARM_2
      000EA8 74 01            [12] 4022 	mov	a,#0x01
      000EAA F0               [24] 4023 	movx	@dptr,a
      000EAB 75 82 0B         [24] 4024 	mov	dpl,#0x0b
      000EAE 12r04r54         [24] 4025 	lcall	_gpio_pin_configure
                                   4026 ;	../libraries/ds18b20/ds18b20.c:17: delay_us(480);
      000EB1 90 01 E0         [24] 4027 	mov	dptr,#0x01e0
      000EB4 12r07rDE         [24] 4028 	lcall	_delay_us
                                   4029 ;	../libraries/ds18b20/ds18b20.c:19: GPIO_PIN_CONFIG_OPTION_DIR_INPUT
      000EB7 90r00r35         [24] 4030 	mov	dptr,#_gpio_pin_configure_PARM_2
      000EBA E4               [12] 4031 	clr	a
      000EBB F0               [24] 4032 	movx	@dptr,a
      000EBC 75 82 0B         [24] 4033 	mov	dpl,#0x0b
      000EBF 12r04r54         [24] 4034 	lcall	_gpio_pin_configure
                                   4035 ;	../libraries/ds18b20/ds18b20.c:21: delay_us(80);
      000EC2 90 00 50         [24] 4036 	mov	dptr,#0x0050
      000EC5 12r07rDE         [24] 4037 	lcall	_delay_us
                                   4038 ;	../libraries/ds18b20/ds18b20.c:22: r = !gpio_pin_val_read(DSPIN);
      000EC8 75 82 0B         [24] 4039 	mov	dpl,#0x0b
      000ECB 12r06r58         [24] 4040 	lcall	_gpio_pin_val_read
      000ECE E5 82            [12] 4041 	mov	a,dpl
      000ED0 FF               [12] 4042 	mov	r7,a
      000ED1 B4 01 00         [24] 4043 	cjne	a,#0x01,00103$
      000ED4                       4044 00103$:
      000ED4 92*00            [24] 4045 	mov  _OneWireReset_sloc0_1_0,c
      000ED6 E4               [12] 4046 	clr	a
      000ED7 33               [12] 4047 	rlc	a
      000ED8 FF               [12] 4048 	mov	r7,a
                                   4049 ;	../libraries/ds18b20/ds18b20.c:23: delay_us(400);
      000ED9 90 01 90         [24] 4050 	mov	dptr,#0x0190
      000EDC C0 07            [24] 4051 	push	ar7
      000EDE 12r07rDE         [24] 4052 	lcall	_delay_us
      000EE1 D0 07            [24] 4053 	pop	ar7
                                   4054 ;	../libraries/ds18b20/ds18b20.c:24: return r;
      000EE3 8F 82            [24] 4055 	mov	dpl,r7
      000EE5 22               [24] 4056 	ret
                                   4057 ;------------------------------------------------------------
                                   4058 ;Allocation info for local variables in function 'OneWireOutByte'
                                   4059 ;------------------------------------------------------------
                                   4060 ;d                         Allocated with name '_OneWireOutByte_d_1_226'
                                   4061 ;n                         Allocated with name '_OneWireOutByte_n_1_227'
                                   4062 ;------------------------------------------------------------
                                   4063 ;	../libraries/ds18b20/ds18b20.c:27: static void OneWireOutByte(uint8_t d)
                                   4064 ;	-----------------------------------------
                                   4065 ;	 function OneWireOutByte
                                   4066 ;	-----------------------------------------
      000EE6                       4067 _OneWireOutByte:
      000EE6 E5 82            [12] 4068 	mov	a,dpl
      000EE8 90r00r7B         [24] 4069 	mov	dptr,#_OneWireOutByte_d_1_226
      000EEB F0               [24] 4070 	movx	@dptr,a
                                   4071 ;	../libraries/ds18b20/ds18b20.c:30: interrupt_control_global_disable();
      000EEC C2 AF            [12] 4072 	clr	_IEN0_SB_GLOBAL 
                                   4073 ;	../libraries/ds18b20/ds18b20.c:31: for(n = 8; n > 0; n--) {
      000EEE 7F 08            [12] 4074 	mov	r7,#0x08
      000EF0                       4075 00105$:
                                   4076 ;	../libraries/ds18b20/ds18b20.c:32: if (d & 0x01) {
      000EF0 90r00r7B         [24] 4077 	mov	dptr,#_OneWireOutByte_d_1_226
      000EF3 E0               [24] 4078 	movx	a,@dptr
      000EF4 FE               [12] 4079 	mov	r6,a
      000EF5 30 E0 29         [24] 4080 	jnb	acc.0,00102$
                                   4081 ;	../libraries/ds18b20/ds18b20.c:36: );
      000EF8 90r00r35         [24] 4082 	mov	dptr,#_gpio_pin_configure_PARM_2
      000EFB 74 01            [12] 4083 	mov	a,#0x01
      000EFD F0               [24] 4084 	movx	@dptr,a
      000EFE 75 82 0B         [24] 4085 	mov	dpl,#0x0b
      000F01 C0 07            [24] 4086 	push	ar7
      000F03 12r04r54         [24] 4087 	lcall	_gpio_pin_configure
                                   4088 ;	../libraries/ds18b20/ds18b20.c:37: delay_us(1);
      000F06 90 00 01         [24] 4089 	mov	dptr,#0x0001
      000F09 12r07rDE         [24] 4090 	lcall	_delay_us
                                   4091 ;	../libraries/ds18b20/ds18b20.c:39: GPIO_PIN_CONFIG_OPTION_DIR_INPUT
      000F0C 90r00r35         [24] 4092 	mov	dptr,#_gpio_pin_configure_PARM_2
      000F0F E4               [12] 4093 	clr	a
      000F10 F0               [24] 4094 	movx	@dptr,a
      000F11 75 82 0B         [24] 4095 	mov	dpl,#0x0b
      000F14 12r04r54         [24] 4096 	lcall	_gpio_pin_configure
                                   4097 ;	../libraries/ds18b20/ds18b20.c:41: delay_us(49);
      000F17 90 00 31         [24] 4098 	mov	dptr,#0x0031
      000F1A 12r07rDE         [24] 4099 	lcall	_delay_us
      000F1D D0 07            [24] 4100 	pop	ar7
      000F1F 80 27            [24] 4101 	sjmp	00103$
      000F21                       4102 00102$:
                                   4103 ;	../libraries/ds18b20/ds18b20.c:47: );
      000F21 90r00r35         [24] 4104 	mov	dptr,#_gpio_pin_configure_PARM_2
      000F24 74 01            [12] 4105 	mov	a,#0x01
      000F26 F0               [24] 4106 	movx	@dptr,a
      000F27 75 82 0B         [24] 4107 	mov	dpl,#0x0b
      000F2A C0 07            [24] 4108 	push	ar7
      000F2C 12r04r54         [24] 4109 	lcall	_gpio_pin_configure
                                   4110 ;	../libraries/ds18b20/ds18b20.c:48: delay_us(49);
      000F2F 90 00 31         [24] 4111 	mov	dptr,#0x0031
      000F32 12r07rDE         [24] 4112 	lcall	_delay_us
                                   4113 ;	../libraries/ds18b20/ds18b20.c:50: GPIO_PIN_CONFIG_OPTION_DIR_INPUT
      000F35 90r00r35         [24] 4114 	mov	dptr,#_gpio_pin_configure_PARM_2
      000F38 E4               [12] 4115 	clr	a
      000F39 F0               [24] 4116 	movx	@dptr,a
      000F3A 75 82 0B         [24] 4117 	mov	dpl,#0x0b
      000F3D 12r04r54         [24] 4118 	lcall	_gpio_pin_configure
                                   4119 ;	../libraries/ds18b20/ds18b20.c:52: delay_us(1);
      000F40 90 00 01         [24] 4120 	mov	dptr,#0x0001
      000F43 12r07rDE         [24] 4121 	lcall	_delay_us
      000F46 D0 07            [24] 4122 	pop	ar7
      000F48                       4123 00103$:
                                   4124 ;	../libraries/ds18b20/ds18b20.c:54: d = d >> 1;
      000F48 90r00r7B         [24] 4125 	mov	dptr,#_OneWireOutByte_d_1_226
      000F4B E0               [24] 4126 	movx	a,@dptr
      000F4C C3               [12] 4127 	clr	c
      000F4D 13               [12] 4128 	rrc	a
      000F4E FE               [12] 4129 	mov	r6,a
      000F4F F0               [24] 4130 	movx	@dptr,a
                                   4131 ;	../libraries/ds18b20/ds18b20.c:31: for(n = 8; n > 0; n--) {
      000F50 DF 9E            [24] 4132 	djnz	r7,00105$
                                   4133 ;	../libraries/ds18b20/ds18b20.c:56: interrupt_control_global_enable();
      000F52 D2 AF            [12] 4134 	setb	_IEN0_SB_GLOBAL 
      000F54 22               [24] 4135 	ret
                                   4136 ;------------------------------------------------------------
                                   4137 ;Allocation info for local variables in function 'OneWireInByte'
                                   4138 ;------------------------------------------------------------
                                   4139 ;d                         Allocated with name '_OneWireInByte_d_1_233'
                                   4140 ;n                         Allocated with name '_OneWireInByte_n_1_233'
                                   4141 ;b                         Allocated with name '_OneWireInByte_b_1_233'
                                   4142 ;------------------------------------------------------------
                                   4143 ;	../libraries/ds18b20/ds18b20.c:59: static uint8_t OneWireInByte(void)
                                   4144 ;	-----------------------------------------
                                   4145 ;	 function OneWireInByte
                                   4146 ;	-----------------------------------------
      000F55                       4147 _OneWireInByte:
                                   4148 ;	../libraries/ds18b20/ds18b20.c:61: uint8_t d = 0, n, b = 0;
      000F55 90r00r7C         [24] 4149 	mov	dptr,#_OneWireInByte_d_1_233
      000F58 E4               [12] 4150 	clr	a
      000F59 F0               [24] 4151 	movx	@dptr,a
                                   4152 ;	../libraries/ds18b20/ds18b20.c:62: interrupt_control_global_disable();
      000F5A C2 AF            [12] 4153 	clr	_IEN0_SB_GLOBAL 
                                   4154 ;	../libraries/ds18b20/ds18b20.c:63: for (n = 0; n < 8; n++) {
      000F5C 7F 00            [12] 4155 	mov	r7,#0x00
      000F5E                       4156 00102$:
                                   4157 ;	../libraries/ds18b20/ds18b20.c:67: );
      000F5E 90r00r35         [24] 4158 	mov	dptr,#_gpio_pin_configure_PARM_2
      000F61 74 01            [12] 4159 	mov	a,#0x01
      000F63 F0               [24] 4160 	movx	@dptr,a
      000F64 75 82 0B         [24] 4161 	mov	dpl,#0x0b
      000F67 C0 07            [24] 4162 	push	ar7
      000F69 12r04r54         [24] 4163 	lcall	_gpio_pin_configure
                                   4164 ;	../libraries/ds18b20/ds18b20.c:68: delay_us(1);
      000F6C 90 00 01         [24] 4165 	mov	dptr,#0x0001
      000F6F 12r07rDE         [24] 4166 	lcall	_delay_us
                                   4167 ;	../libraries/ds18b20/ds18b20.c:70: GPIO_PIN_CONFIG_OPTION_DIR_INPUT
      000F72 90r00r35         [24] 4168 	mov	dptr,#_gpio_pin_configure_PARM_2
      000F75 E4               [12] 4169 	clr	a
      000F76 F0               [24] 4170 	movx	@dptr,a
      000F77 75 82 0B         [24] 4171 	mov	dpl,#0x0b
      000F7A 12r04r54         [24] 4172 	lcall	_gpio_pin_configure
                                   4173 ;	../libraries/ds18b20/ds18b20.c:72: delay_us(2);
      000F7D 90 00 02         [24] 4174 	mov	dptr,#0x0002
      000F80 12r07rDE         [24] 4175 	lcall	_delay_us
                                   4176 ;	../libraries/ds18b20/ds18b20.c:73: b = gpio_pin_val_read(DSPIN);
      000F83 75 82 0B         [24] 4177 	mov	dpl,#0x0b
      000F86 12r06r58         [24] 4178 	lcall	_gpio_pin_val_read
      000F89 AE 82            [24] 4179 	mov	r6,dpl
                                   4180 ;	../libraries/ds18b20/ds18b20.c:74: delay_us(60);
      000F8B 90 00 3C         [24] 4181 	mov	dptr,#0x003c
      000F8E C0 06            [24] 4182 	push	ar6
      000F90 12r07rDE         [24] 4183 	lcall	_delay_us
      000F93 D0 06            [24] 4184 	pop	ar6
      000F95 D0 07            [24] 4185 	pop	ar7
                                   4186 ;	../libraries/ds18b20/ds18b20.c:75: d = (d >> 1) | (b << 7);
      000F97 90r00r7C         [24] 4187 	mov	dptr,#_OneWireInByte_d_1_233
      000F9A E0               [24] 4188 	movx	a,@dptr
      000F9B C3               [12] 4189 	clr	c
      000F9C 13               [12] 4190 	rrc	a
      000F9D FD               [12] 4191 	mov	r5,a
      000F9E EE               [12] 4192 	mov	a,r6
      000F9F 03               [12] 4193 	rr	a
      000FA0 54 80            [12] 4194 	anl	a,#0x80
      000FA2 FE               [12] 4195 	mov	r6,a
      000FA3 4D               [12] 4196 	orl	a,r5
      000FA4 F0               [24] 4197 	movx	@dptr,a
                                   4198 ;	../libraries/ds18b20/ds18b20.c:63: for (n = 0; n < 8; n++) {
      000FA5 0F               [12] 4199 	inc	r7
      000FA6 BF 08 00         [24] 4200 	cjne	r7,#0x08,00113$
      000FA9                       4201 00113$:
      000FA9 40 B3            [24] 4202 	jc	00102$
                                   4203 ;	../libraries/ds18b20/ds18b20.c:77: interrupt_control_global_enable();
      000FAB D2 AF            [12] 4204 	setb	_IEN0_SB_GLOBAL 
                                   4205 ;	../libraries/ds18b20/ds18b20.c:78: return d;
      000FAD 90r00r7C         [24] 4206 	mov	dptr,#_OneWireInByte_d_1_233
      000FB0 E0               [24] 4207 	movx	a,@dptr
      000FB1 F5 82            [12] 4208 	mov	dpl,a
      000FB3 22               [24] 4209 	ret
                                   4210 ;------------------------------------------------------------
                                   4211 ;Allocation info for local variables in function 'ds18b20_read'
                                   4212 ;------------------------------------------------------------
                                   4213 ;temp                      Allocated with name '_ds18b20_read_temp_1_236'
                                   4214 ;i                         Allocated with name '_ds18b20_read_i_1_237'
                                   4215 ;data                      Allocated with name '_ds18b20_read_data_1_237'
                                   4216 ;crc                       Allocated with name '_ds18b20_read_crc_1_237'
                                   4217 ;trow                      Allocated with name '_ds18b20_read_trow_1_237'
                                   4218 ;convtm                    Allocated with name '_ds18b20_read_convtm_1_237'
                                   4219 ;decimal                   Allocated with name '_ds18b20_read_decimal_1_237'
                                   4220 ;------------------------------------------------------------
                                   4221 ;	../libraries/ds18b20/ds18b20.c:82: dserror_t ds18b20_read(int *temp)
                                   4222 ;	-----------------------------------------
                                   4223 ;	 function ds18b20_read
                                   4224 ;	-----------------------------------------
      000FB4                       4225 _ds18b20_read:
      000FB4 AF F0            [24] 4226 	mov	r7,b
      000FB6 AE 83            [24] 4227 	mov	r6,dph
      000FB8 E5 82            [12] 4228 	mov	a,dpl
      000FBA 90r00r7D         [24] 4229 	mov	dptr,#_ds18b20_read_temp_1_236
      000FBD F0               [24] 4230 	movx	@dptr,a
      000FBE EE               [12] 4231 	mov	a,r6
      000FBF A3               [24] 4232 	inc	dptr
      000FC0 F0               [24] 4233 	movx	@dptr,a
      000FC1 EF               [12] 4234 	mov	a,r7
      000FC2 A3               [24] 4235 	inc	dptr
      000FC3 F0               [24] 4236 	movx	@dptr,a
                                   4237 ;	../libraries/ds18b20/ds18b20.c:90: if (!OneWireReset()) {
      000FC4 12r0ErA5         [24] 4238 	lcall	_OneWireReset
      000FC7 E5 82            [12] 4239 	mov	a,dpl
      000FC9 70 04            [24] 4240 	jnz	00102$
                                   4241 ;	../libraries/ds18b20/ds18b20.c:91: return DS_NOT_FOUND;
      000FCB 75 82 01         [24] 4242 	mov	dpl,#0x01
      000FCE 22               [24] 4243 	ret
      000FCF                       4244 00102$:
                                   4245 ;	../libraries/ds18b20/ds18b20.c:94: OneWireOutByte(SKIP_ROM_CMD);
      000FCF 75 82 CC         [24] 4246 	mov	dpl,#0xcc
      000FD2 12r0ErE6         [24] 4247 	lcall	_OneWireOutByte
                                   4248 ;	../libraries/ds18b20/ds18b20.c:97: OneWireOutByte(WRITE_SCR_CMD);
      000FD5 75 82 4E         [24] 4249 	mov	dpl,#0x4e
      000FD8 12r0ErE6         [24] 4250 	lcall	_OneWireOutByte
                                   4251 ;	../libraries/ds18b20/ds18b20.c:98: OneWireOutByte(REG_TH);
      000FDB 75 82 00         [24] 4252 	mov	dpl,#0x00
      000FDE 12r0ErE6         [24] 4253 	lcall	_OneWireOutByte
                                   4254 ;	../libraries/ds18b20/ds18b20.c:99: OneWireOutByte(REG_TL);
      000FE1 75 82 FF         [24] 4255 	mov	dpl,#0xff
      000FE4 12r0ErE6         [24] 4256 	lcall	_OneWireOutByte
                                   4257 ;	../libraries/ds18b20/ds18b20.c:100: OneWireOutByte(REG_CONFIG);
      000FE7 75 82 3F         [24] 4258 	mov	dpl,#0x3f
      000FEA 12r0ErE6         [24] 4259 	lcall	_OneWireOutByte
                                   4260 ;	../libraries/ds18b20/ds18b20.c:102: if (!OneWireReset()) {
      000FED 12r0ErA5         [24] 4261 	lcall	_OneWireReset
      000FF0 E5 82            [12] 4262 	mov	a,dpl
      000FF2 70 04            [24] 4263 	jnz	00104$
                                   4264 ;	../libraries/ds18b20/ds18b20.c:103: return DS_NOT_FOUND;
      000FF4 75 82 01         [24] 4265 	mov	dpl,#0x01
      000FF7 22               [24] 4266 	ret
      000FF8                       4267 00104$:
                                   4268 ;	../libraries/ds18b20/ds18b20.c:106: OneWireOutByte(SKIP_ROM_CMD);
      000FF8 75 82 CC         [24] 4269 	mov	dpl,#0xcc
      000FFB 12r0ErE6         [24] 4270 	lcall	_OneWireOutByte
                                   4271 ;	../libraries/ds18b20/ds18b20.c:108: OneWireOutByte(START_CONV_CMD);
      000FFE 75 82 44         [24] 4272 	mov	dpl,#0x44
      001001 12r0ErE6         [24] 4273 	lcall	_OneWireOutByte
                                   4274 ;	../libraries/ds18b20/ds18b20.c:112: while (!gpio_pin_val_read(DSPIN) && --convtm > 0);
      001004 7E 90            [12] 4275 	mov	r6,#0x90
      001006 7F 01            [12] 4276 	mov	r7,#0x01
      001008                       4277 00106$:
      001008 75 82 0B         [24] 4278 	mov	dpl,#0x0b
      00100B C0 07            [24] 4279 	push	ar7
      00100D C0 06            [24] 4280 	push	ar6
      00100F 12r06r58         [24] 4281 	lcall	_gpio_pin_val_read
      001012 E5 82            [12] 4282 	mov	a,dpl
      001014 D0 06            [24] 4283 	pop	ar6
      001016 D0 07            [24] 4284 	pop	ar7
      001018 70 09            [24] 4285 	jnz	00108$
      00101A 1E               [12] 4286 	dec	r6
      00101B BE FF 01         [24] 4287 	cjne	r6,#0xff,00162$
      00101E 1F               [12] 4288 	dec	r7
      00101F                       4289 00162$:
      00101F EE               [12] 4290 	mov	a,r6
      001020 4F               [12] 4291 	orl	a,r7
      001021 70 E5            [24] 4292 	jnz	00106$
      001023                       4293 00108$:
                                   4294 ;	../libraries/ds18b20/ds18b20.c:114: if (convtm == 0) {
      001023 EE               [12] 4295 	mov	a,r6
      001024 4F               [12] 4296 	orl	a,r7
      001025 70 04            [24] 4297 	jnz	00110$
                                   4298 ;	../libraries/ds18b20/ds18b20.c:115: return DS_TIMEOUT;
      001027 75 82 02         [24] 4299 	mov	dpl,#0x02
      00102A 22               [24] 4300 	ret
      00102B                       4301 00110$:
                                   4302 ;	../libraries/ds18b20/ds18b20.c:118: if (!OneWireReset()) {
      00102B 12r0ErA5         [24] 4303 	lcall	_OneWireReset
      00102E E5 82            [12] 4304 	mov	a,dpl
      001030 70 04            [24] 4305 	jnz	00112$
                                   4306 ;	../libraries/ds18b20/ds18b20.c:119: return DS_NOT_FOUND;
      001032 75 82 01         [24] 4307 	mov	dpl,#0x01
      001035 22               [24] 4308 	ret
      001036                       4309 00112$:
                                   4310 ;	../libraries/ds18b20/ds18b20.c:122: OneWireOutByte(SKIP_ROM_CMD);
      001036 75 82 CC         [24] 4311 	mov	dpl,#0xcc
      001039 12r0ErE6         [24] 4312 	lcall	_OneWireOutByte
                                   4313 ;	../libraries/ds18b20/ds18b20.c:124: OneWireOutByte(READ_SCR_CMD);
      00103C 75 82 BE         [24] 4314 	mov	dpl,#0xbe
      00103F 12r0ErE6         [24] 4315 	lcall	_OneWireOutByte
                                   4316 ;	../libraries/ds18b20/ds18b20.c:126: for (i = 0; i < 9; i++) {
      001042 7F 00            [12] 4317 	mov	r7,#0x00
      001044                       4318 00120$:
                                   4319 ;	../libraries/ds18b20/ds18b20.c:128: data[i] = OneWireInByte();
      001044 EF               [12] 4320 	mov	a,r7
      001045 24r81            [12] 4321 	add	a,#_ds18b20_read_data_1_237
      001047 FD               [12] 4322 	mov	r5,a
      001048 E4               [12] 4323 	clr	a
      001049 34s00            [12] 4324 	addc	a,#(_ds18b20_read_data_1_237 >> 8)
      00104B FE               [12] 4325 	mov	r6,a
      00104C C0 07            [24] 4326 	push	ar7
      00104E C0 06            [24] 4327 	push	ar6
      001050 C0 05            [24] 4328 	push	ar5
      001052 12r0Fr55         [24] 4329 	lcall	_OneWireInByte
      001055 AC 82            [24] 4330 	mov	r4,dpl
      001057 D0 05            [24] 4331 	pop	ar5
      001059 D0 06            [24] 4332 	pop	ar6
      00105B D0 07            [24] 4333 	pop	ar7
      00105D 8D 82            [24] 4334 	mov	dpl,r5
      00105F 8E 83            [24] 4335 	mov	dph,r6
      001061 EC               [12] 4336 	mov	a,r4
      001062 F0               [24] 4337 	movx	@dptr,a
                                   4338 ;	../libraries/ds18b20/ds18b20.c:126: for (i = 0; i < 9; i++) {
      001063 0F               [12] 4339 	inc	r7
      001064 BF 09 00         [24] 4340 	cjne	r7,#0x09,00166$
      001067                       4341 00166$:
      001067 40 DB            [24] 4342 	jc	00120$
                                   4343 ;	../libraries/ds18b20/ds18b20.c:131: if (CRC8(data, 8) != data[8]) {
      001069 90r00r00         [24] 4344 	mov	dptr,#_CRC8_PARM_2
      00106C 74 08            [12] 4345 	mov	a,#0x08
      00106E F0               [24] 4346 	movx	@dptr,a
      00106F 90r00r81         [24] 4347 	mov	dptr,#_ds18b20_read_data_1_237
      001072 75 F0 00         [24] 4348 	mov	b,#0x00
      001075 12r00r00         [24] 4349 	lcall	_CRC8
      001078 AF 82            [24] 4350 	mov	r7,dpl
      00107A 90r00r89         [24] 4351 	mov	dptr,#(_ds18b20_read_data_1_237 + 0x0008)
      00107D E0               [24] 4352 	movx	a,@dptr
      00107E FE               [12] 4353 	mov	r6,a
      00107F EF               [12] 4354 	mov	a,r7
      001080 B5 06 02         [24] 4355 	cjne	a,ar6,00168$
      001083 80 04            [24] 4356 	sjmp	00115$
      001085                       4357 00168$:
                                   4358 ;	../libraries/ds18b20/ds18b20.c:132: return DS_CRC_ERROR;
      001085 75 82 03         [24] 4359 	mov	dpl,#0x03
      001088 22               [24] 4360 	ret
      001089                       4361 00115$:
                                   4362 ;	../libraries/ds18b20/ds18b20.c:136: trow = ((int16_t) data[1] << 8) | data[0];
      001089 90r00r82         [24] 4363 	mov	dptr,#(_ds18b20_read_data_1_237 + 0x0001)
      00108C E0               [24] 4364 	movx	a,@dptr
      00108D FE               [12] 4365 	mov	r6,a
      00108E 7F 00            [12] 4366 	mov	r7,#0x00
      001090 90r00r81         [24] 4367 	mov	dptr,#_ds18b20_read_data_1_237
      001093 E0               [24] 4368 	movx	a,@dptr
      001094 FD               [12] 4369 	mov	r5,a
      001095 7C 00            [12] 4370 	mov	r4,#0x00
      001097 42 07            [12] 4371 	orl	ar7,a
      001099 EC               [12] 4372 	mov	a,r4
      00109A 42 06            [12] 4373 	orl	ar6,a
      00109C 90r00r8A         [24] 4374 	mov	dptr,#_ds18b20_read_trow_1_237
      00109F EF               [12] 4375 	mov	a,r7
      0010A0 F0               [24] 4376 	movx	@dptr,a
      0010A1 EE               [12] 4377 	mov	a,r6
      0010A2 A3               [24] 4378 	inc	dptr
      0010A3 F0               [24] 4379 	movx	@dptr,a
                                   4380 ;	../libraries/ds18b20/ds18b20.c:139: i = 0;
      0010A4 90r00r80         [24] 4381 	mov	dptr,#_ds18b20_read_i_1_237
      0010A7 E4               [12] 4382 	clr	a
      0010A8 F0               [24] 4383 	movx	@dptr,a
                                   4384 ;	../libraries/ds18b20/ds18b20.c:140: if (trow & 0x8000) {
      0010A9 EE               [12] 4385 	mov	a,r6
      0010AA 30 E7 17         [24] 4386 	jnb	acc.7,00117$
                                   4387 ;	../libraries/ds18b20/ds18b20.c:142: trow = ~trow + 1;
      0010AD EF               [12] 4388 	mov	a,r7
      0010AE F4               [12] 4389 	cpl	a
      0010AF FF               [12] 4390 	mov	r7,a
      0010B0 EE               [12] 4391 	mov	a,r6
      0010B1 F4               [12] 4392 	cpl	a
      0010B2 FE               [12] 4393 	mov	r6,a
      0010B3 90r00r8A         [24] 4394 	mov	dptr,#_ds18b20_read_trow_1_237
      0010B6 74 01            [12] 4395 	mov	a,#0x01
      0010B8 2F               [12] 4396 	add	a,r7
      0010B9 F0               [24] 4397 	movx	@dptr,a
      0010BA E4               [12] 4398 	clr	a
      0010BB 3E               [12] 4399 	addc	a,r6
      0010BC A3               [24] 4400 	inc	dptr
      0010BD F0               [24] 4401 	movx	@dptr,a
                                   4402 ;	../libraries/ds18b20/ds18b20.c:143: i = 1;
      0010BE 90r00r80         [24] 4403 	mov	dptr,#_ds18b20_read_i_1_237
      0010C1 74 01            [12] 4404 	mov	a,#0x01
      0010C3 F0               [24] 4405 	movx	@dptr,a
      0010C4                       4406 00117$:
                                   4407 ;	../libraries/ds18b20/ds18b20.c:146: decimal = (float)((int16_t) trow >> 2) / 4;	// 10bit
      0010C4 90r00r8A         [24] 4408 	mov	dptr,#_ds18b20_read_trow_1_237
      0010C7 E0               [24] 4409 	movx	a,@dptr
      0010C8 FE               [12] 4410 	mov	r6,a
      0010C9 A3               [24] 4411 	inc	dptr
      0010CA E0               [24] 4412 	movx	a,@dptr
      0010CB A2 E7            [12] 4413 	mov	c,acc.7
      0010CD 13               [12] 4414 	rrc	a
      0010CE CE               [12] 4415 	xch	a,r6
      0010CF 13               [12] 4416 	rrc	a
      0010D0 CE               [12] 4417 	xch	a,r6
      0010D1 A2 E7            [12] 4418 	mov	c,acc.7
      0010D3 13               [12] 4419 	rrc	a
      0010D4 CE               [12] 4420 	xch	a,r6
      0010D5 13               [12] 4421 	rrc	a
      0010D6 CE               [12] 4422 	xch	a,r6
      0010D7 FF               [12] 4423 	mov	r7,a
      0010D8 8E 82            [24] 4424 	mov	dpl,r6
      0010DA 8F 83            [24] 4425 	mov	dph,r7
      0010DC 12r00r00         [24] 4426 	lcall	___sint2fs
      0010DF AC 82            [24] 4427 	mov	r4,dpl
      0010E1 AD 83            [24] 4428 	mov	r5,dph
      0010E3 AE F0            [24] 4429 	mov	r6,b
      0010E5 FF               [12] 4430 	mov	r7,a
      0010E6 E4               [12] 4431 	clr	a
      0010E7 C0 E0            [24] 4432 	push	acc
      0010E9 C0 E0            [24] 4433 	push	acc
      0010EB 74 80            [12] 4434 	mov	a,#0x80
      0010ED C0 E0            [24] 4435 	push	acc
      0010EF 03               [12] 4436 	rr	a
      0010F0 C0 E0            [24] 4437 	push	acc
      0010F2 8C 82            [24] 4438 	mov	dpl,r4
      0010F4 8D 83            [24] 4439 	mov	dph,r5
      0010F6 8E F0            [24] 4440 	mov	b,r6
      0010F8 EF               [12] 4441 	mov	a,r7
      0010F9 12r00r00         [24] 4442 	lcall	___fsdiv
      0010FC AC 82            [24] 4443 	mov	r4,dpl
      0010FE AD 83            [24] 4444 	mov	r5,dph
      001100 AE F0            [24] 4445 	mov	r6,b
      001102 FF               [12] 4446 	mov	r7,a
      001103 E5 81            [12] 4447 	mov	a,sp
      001105 24 FC            [12] 4448 	add	a,#0xfc
      001107 F5 81            [12] 4449 	mov	sp,a
      001109 90r00r8C         [24] 4450 	mov	dptr,#_ds18b20_read_decimal_1_237
      00110C EC               [12] 4451 	mov	a,r4
      00110D F0               [24] 4452 	movx	@dptr,a
      00110E ED               [12] 4453 	mov	a,r5
      00110F A3               [24] 4454 	inc	dptr
      001110 F0               [24] 4455 	movx	@dptr,a
      001111 EE               [12] 4456 	mov	a,r6
      001112 A3               [24] 4457 	inc	dptr
      001113 F0               [24] 4458 	movx	@dptr,a
      001114 EF               [12] 4459 	mov	a,r7
      001115 A3               [24] 4460 	inc	dptr
      001116 F0               [24] 4461 	movx	@dptr,a
                                   4462 ;	../libraries/ds18b20/ds18b20.c:147: if (i) {
      001117 90r00r80         [24] 4463 	mov	dptr,#_ds18b20_read_i_1_237
      00111A E0               [24] 4464 	movx	a,@dptr
      00111B 60 10            [24] 4465 	jz	00119$
                                   4466 ;	../libraries/ds18b20/ds18b20.c:148: decimal = 0 - decimal;
      00111D 90r00r8C         [24] 4467 	mov	dptr,#_ds18b20_read_decimal_1_237
      001120 EC               [12] 4468 	mov	a,r4
      001121 F0               [24] 4469 	movx	@dptr,a
      001122 ED               [12] 4470 	mov	a,r5
      001123 A3               [24] 4471 	inc	dptr
      001124 F0               [24] 4472 	movx	@dptr,a
      001125 EE               [12] 4473 	mov	a,r6
      001126 A3               [24] 4474 	inc	dptr
      001127 F0               [24] 4475 	movx	@dptr,a
      001128 EF               [12] 4476 	mov	a,r7
      001129 B2 E7            [12] 4477 	cpl	acc.7
      00112B A3               [24] 4478 	inc	dptr
      00112C F0               [24] 4479 	movx	@dptr,a
      00112D                       4480 00119$:
                                   4481 ;	../libraries/ds18b20/ds18b20.c:151: *temp = (int) (decimal * 10);
      00112D 90r00r7D         [24] 4482 	mov	dptr,#_ds18b20_read_temp_1_236
      001130 E0               [24] 4483 	movx	a,@dptr
      001131 FD               [12] 4484 	mov	r5,a
      001132 A3               [24] 4485 	inc	dptr
      001133 E0               [24] 4486 	movx	a,@dptr
      001134 FE               [12] 4487 	mov	r6,a
      001135 A3               [24] 4488 	inc	dptr
      001136 E0               [24] 4489 	movx	a,@dptr
      001137 FF               [12] 4490 	mov	r7,a
      001138 C0 07            [24] 4491 	push	ar7
      00113A C0 06            [24] 4492 	push	ar6
      00113C C0 05            [24] 4493 	push	ar5
      00113E 90r00r8C         [24] 4494 	mov	dptr,#_ds18b20_read_decimal_1_237
      001141 E0               [24] 4495 	movx	a,@dptr
      001142 C0 E0            [24] 4496 	push	acc
      001144 A3               [24] 4497 	inc	dptr
      001145 E0               [24] 4498 	movx	a,@dptr
      001146 C0 E0            [24] 4499 	push	acc
      001148 A3               [24] 4500 	inc	dptr
      001149 E0               [24] 4501 	movx	a,@dptr
      00114A C0 E0            [24] 4502 	push	acc
      00114C A3               [24] 4503 	inc	dptr
      00114D E0               [24] 4504 	movx	a,@dptr
      00114E C0 E0            [24] 4505 	push	acc
      001150 90 00 00         [24] 4506 	mov	dptr,#0x0000
      001153 75 F0 20         [24] 4507 	mov	b,#0x20
      001156 74 41            [12] 4508 	mov	a,#0x41
      001158 12r00r00         [24] 4509 	lcall	___fsmul
      00115B A9 82            [24] 4510 	mov	r1,dpl
      00115D AA 83            [24] 4511 	mov	r2,dph
      00115F AB F0            [24] 4512 	mov	r3,b
      001161 FC               [12] 4513 	mov	r4,a
      001162 E5 81            [12] 4514 	mov	a,sp
      001164 24 FC            [12] 4515 	add	a,#0xfc
      001166 F5 81            [12] 4516 	mov	sp,a
      001168 89 82            [24] 4517 	mov	dpl,r1
      00116A 8A 83            [24] 4518 	mov	dph,r2
      00116C 8B F0            [24] 4519 	mov	b,r3
      00116E EC               [12] 4520 	mov	a,r4
      00116F 12r00r00         [24] 4521 	lcall	___fs2sint
      001172 AB 82            [24] 4522 	mov	r3,dpl
      001174 AC 83            [24] 4523 	mov	r4,dph
      001176 D0 05            [24] 4524 	pop	ar5
      001178 D0 06            [24] 4525 	pop	ar6
      00117A D0 07            [24] 4526 	pop	ar7
      00117C 8D 82            [24] 4527 	mov	dpl,r5
      00117E 8E 83            [24] 4528 	mov	dph,r6
      001180 8F F0            [24] 4529 	mov	b,r7
      001182 EB               [12] 4530 	mov	a,r3
      001183 12r00r00         [24] 4531 	lcall	__gptrput
      001186 A3               [24] 4532 	inc	dptr
      001187 EC               [12] 4533 	mov	a,r4
      001188 12r00r00         [24] 4534 	lcall	__gptrput
                                   4535 ;	../libraries/ds18b20/ds18b20.c:153: return DS_NO_ERROR;
      00118B 75 82 00         [24] 4536 	mov	dpl,#0x00
      00118E 22               [24] 4537 	ret
                                   4538 ;------------------------------------------------------------
                                   4539 ;Allocation info for local variables in function 'main'
                                   4540 ;------------------------------------------------------------
                                   4541 ;countloop                 Allocated with name '_main_countloop_1_247'
                                   4542 ;sleep_counter             Allocated with name '_main_sleep_counter_1_247'
                                   4543 ;ret                       Allocated with name '_main_ret_1_247'
                                   4544 ;------------------------------------------------------------
                                   4545 ;	main.c:33: void main()
                                   4546 ;	-----------------------------------------
                                   4547 ;	 function main
                                   4548 ;	-----------------------------------------
      00118F                       4549 _main:
                                   4550 ;	main.c:40: CLKLFCTRL = 1;
      00118F 75 AD 01         [24] 4551 	mov	_CLKLFCTRL,#0x01
                                   4552 ;	main.c:41: rtc2_configure(RTC2_CONFIG_OPTION_COMPARE_MODE_0_RESET_AT_IRQ , 65535); //65535=2 сек, 32767=1 сек
      001192 90r00r64         [24] 4553 	mov	dptr,#_rtc2_configure_PARM_2
      001195 74 FF            [12] 4554 	mov	a,#0xff
      001197 F0               [24] 4555 	movx	@dptr,a
      001198 A3               [24] 4556 	inc	dptr
      001199 F0               [24] 4557 	movx	@dptr,a
      00119A 75 82 06         [24] 4558 	mov	dpl,#0x06
      00119D 12r0Br7D         [24] 4559 	lcall	_rtc2_configure
                                   4560 ;	main.c:42: rtc2_run();
      0011A0 43 B3 01         [24] 4561 	orl	_RTC2CON,#0x01
                                   4562 ;	main.c:43: pwr_clk_mgmt_wakeup_configure(PWR_CLK_MGMT_WAKEUP_CONFIG_OPTION_WAKEUP_ON_RTC2_TICK_ALWAYS,0);
      0011A3 90r00r4B         [24] 4563 	mov	dptr,#_pwr_clk_mgmt_wakeup_configure_PARM_2
      0011A6 E4               [12] 4564 	clr	a
      0011A7 F0               [24] 4565 	movx	@dptr,a
      0011A8 A3               [24] 4566 	inc	dptr
      0011A9 F0               [24] 4567 	movx	@dptr,a
      0011AA 75 82 20         [24] 4568 	mov	dpl,#0x20
      0011AD 12r09r3F         [24] 4569 	lcall	_pwr_clk_mgmt_wakeup_configure
                                   4570 ;	main.c:44: pwr_clk_mgmt_pwr_failure_configure(PWR_CLK_MGMT_PWR_FAILURE_CONFIG_OPTION_POF_ENABLE|POF);
      0011B0 75 82 E0         [24] 4571 	mov	dpl,#0xe0
      0011B3 12r09r55         [24] 4572 	lcall	_pwr_clk_mgmt_pwr_failure_configure
                                   4573 ;	main.c:45: interrupt_control_global_enable();
      0011B6 D2 AF            [12] 4574 	setb	_IEN0_SB_GLOBAL 
                                   4575 ;	main.c:47: if ((PWRDWN&0x7)==0x3) {
      0011B8 74 07            [12] 4576 	mov	a,#0x07
      0011BA 55 A4            [12] 4577 	anl	a,_PWRDWN
      0011BC FF               [12] 4578 	mov	r7,a
      0011BD BF 03 02         [24] 4579 	cjne	r7,#0x03,00145$
      0011C0 80 03            [24] 4580 	sjmp	00146$
      0011C2                       4581 00145$:
      0011C2 02r12r4D         [24] 4582 	ljmp	00107$
      0011C5                       4583 00146$:
                                   4584 ;	main.c:48: PWRDWN=0x0;
      0011C5 75 A4 00         [24] 4585 	mov	_PWRDWN,#0x00
                                   4586 ;	main.c:49: RSTREAS=0x0;
      0011C8 75 B1 00         [24] 4587 	mov	_RSTREAS,#0x00
                                   4588 ;	main.c:50: if (sleep_counter<(SEND_INTERVAL/2)) {
      0011CB 90 01 10         [24] 4589 	mov	dptr,#_main_sleep_counter_1_247
      0011CE E0               [24] 4590 	movx	a,@dptr
      0011CF FE               [12] 4591 	mov	r6,a
      0011D0 A3               [24] 4592 	inc	dptr
      0011D1 E0               [24] 4593 	movx	a,@dptr
      0011D2 FF               [12] 4594 	mov	r7,a
      0011D3 C3               [12] 4595 	clr	c
      0011D4 EE               [12] 4596 	mov	a,r6
      0011D5 94 96            [12] 4597 	subb	a,#0x96
      0011D7 EF               [12] 4598 	mov	a,r7
      0011D8 64 80            [12] 4599 	xrl	a,#0x80
      0011DA 94 80            [12] 4600 	subb	a,#0x80
      0011DC 50 0F            [24] 4601 	jnc	00102$
                                   4602 ;	main.c:51: sleep_counter++;
      0011DE 90 01 10         [24] 4603 	mov	dptr,#_main_sleep_counter_1_247
      0011E1 E0               [24] 4604 	movx	a,@dptr
      0011E2 24 01            [12] 4605 	add	a,#0x01
      0011E4 F0               [24] 4606 	movx	@dptr,a
      0011E5 A3               [24] 4607 	inc	dptr
      0011E6 E0               [24] 4608 	movx	a,@dptr
      0011E7 34 00            [12] 4609 	addc	a,#0x00
      0011E9 F0               [24] 4610 	movx	@dptr,a
                                   4611 ;	main.c:52: pwr_clk_mgmt_enter_pwr_mode_memory_ret_tmr_on();
      0011EA 75 A4 03         [24] 4612 	mov	_PWRDWN,#0x03
      0011ED                       4613 00102$:
                                   4614 ;	main.c:54: if (countloop < 2147483646) {
      0011ED 90 01 00         [24] 4615 	mov	dptr,#_main_countloop_1_247
      0011F0 E0               [24] 4616 	movx	a,@dptr
      0011F1 FC               [12] 4617 	mov	r4,a
      0011F2 A3               [24] 4618 	inc	dptr
      0011F3 E0               [24] 4619 	movx	a,@dptr
      0011F4 FD               [12] 4620 	mov	r5,a
      0011F5 A3               [24] 4621 	inc	dptr
      0011F6 E0               [24] 4622 	movx	a,@dptr
      0011F7 FE               [12] 4623 	mov	r6,a
      0011F8 A3               [24] 4624 	inc	dptr
      0011F9 E0               [24] 4625 	movx	a,@dptr
      0011FA FF               [12] 4626 	mov	r7,a
      0011FB C3               [12] 4627 	clr	c
      0011FC EC               [12] 4628 	mov	a,r4
      0011FD 94 FE            [12] 4629 	subb	a,#0xfe
      0011FF ED               [12] 4630 	mov	a,r5
      001200 94 FF            [12] 4631 	subb	a,#0xff
      001202 EE               [12] 4632 	mov	a,r6
      001203 94 FF            [12] 4633 	subb	a,#0xff
      001205 EF               [12] 4634 	mov	a,r7
      001206 64 80            [12] 4635 	xrl	a,#0x80
      001208 94 FF            [12] 4636 	subb	a,#0xff
      00120A 50 18            [24] 4637 	jnc	00104$
                                   4638 ;	main.c:55: countloop++;
      00120C 90 01 00         [24] 4639 	mov	dptr,#_main_countloop_1_247
      00120F E0               [24] 4640 	movx	a,@dptr
      001210 24 01            [12] 4641 	add	a,#0x01
      001212 F0               [24] 4642 	movx	@dptr,a
      001213 A3               [24] 4643 	inc	dptr
      001214 E0               [24] 4644 	movx	a,@dptr
      001215 34 00            [12] 4645 	addc	a,#0x00
      001217 F0               [24] 4646 	movx	@dptr,a
      001218 A3               [24] 4647 	inc	dptr
      001219 E0               [24] 4648 	movx	a,@dptr
      00121A 34 00            [12] 4649 	addc	a,#0x00
      00121C F0               [24] 4650 	movx	@dptr,a
      00121D A3               [24] 4651 	inc	dptr
      00121E E0               [24] 4652 	movx	a,@dptr
      00121F 34 00            [12] 4653 	addc	a,#0x00
      001221 F0               [24] 4654 	movx	@dptr,a
      001222 80 0B            [24] 4655 	sjmp	00105$
      001224                       4656 00104$:
                                   4657 ;	main.c:57: countloop = 0;
      001224 90 01 00         [24] 4658 	mov	dptr,#_main_countloop_1_247
      001227 E4               [12] 4659 	clr	a
      001228 F0               [24] 4660 	movx	@dptr,a
      001229 A3               [24] 4661 	inc	dptr
      00122A F0               [24] 4662 	movx	@dptr,a
      00122B A3               [24] 4663 	inc	dptr
      00122C F0               [24] 4664 	movx	@dptr,a
      00122D A3               [24] 4665 	inc	dptr
      00122E F0               [24] 4666 	movx	@dptr,a
      00122F                       4667 00105$:
                                   4668 ;	main.c:59: clientnf.count=countloop;
      00122F 90 01 00         [24] 4669 	mov	dptr,#_main_countloop_1_247
      001232 E0               [24] 4670 	movx	a,@dptr
      001233 FC               [12] 4671 	mov	r4,a
      001234 A3               [24] 4672 	inc	dptr
      001235 E0               [24] 4673 	movx	a,@dptr
      001236 FD               [12] 4674 	mov	r5,a
      001237 A3               [24] 4675 	inc	dptr
      001238 E0               [24] 4676 	movx	a,@dptr
      001239 FE               [12] 4677 	mov	r6,a
      00123A A3               [24] 4678 	inc	dptr
      00123B E0               [24] 4679 	movx	a,@dptr
      00123C FF               [12] 4680 	mov	r7,a
      00123D 90r00r92         [24] 4681 	mov	dptr,#(_clientnf + 0x0002)
      001240 EC               [12] 4682 	mov	a,r4
      001241 F0               [24] 4683 	movx	@dptr,a
      001242 ED               [12] 4684 	mov	a,r5
      001243 A3               [24] 4685 	inc	dptr
      001244 F0               [24] 4686 	movx	@dptr,a
      001245 EE               [12] 4687 	mov	a,r6
      001246 A3               [24] 4688 	inc	dptr
      001247 F0               [24] 4689 	movx	@dptr,a
      001248 EF               [12] 4690 	mov	a,r7
      001249 A3               [24] 4691 	inc	dptr
      00124A F0               [24] 4692 	movx	@dptr,a
      00124B 80 15            [24] 4693 	sjmp	00108$
      00124D                       4694 00107$:
                                   4695 ;	main.c:61: countloop = 0;
      00124D 90 01 00         [24] 4696 	mov	dptr,#_main_countloop_1_247
      001250 E4               [12] 4697 	clr	a
      001251 F0               [24] 4698 	movx	@dptr,a
      001252 A3               [24] 4699 	inc	dptr
      001253 F0               [24] 4700 	movx	@dptr,a
      001254 A3               [24] 4701 	inc	dptr
      001255 F0               [24] 4702 	movx	@dptr,a
      001256 A3               [24] 4703 	inc	dptr
      001257 F0               [24] 4704 	movx	@dptr,a
                                   4705 ;	main.c:62: clientnf.count = 0;
      001258 90r00r92         [24] 4706 	mov	dptr,#(_clientnf + 0x0002)
      00125B F0               [24] 4707 	movx	@dptr,a
      00125C A3               [24] 4708 	inc	dptr
      00125D F0               [24] 4709 	movx	@dptr,a
      00125E A3               [24] 4710 	inc	dptr
      00125F F0               [24] 4711 	movx	@dptr,a
      001260 A3               [24] 4712 	inc	dptr
      001261 F0               [24] 4713 	movx	@dptr,a
      001262                       4714 00108$:
                                   4715 ;	main.c:65: radiobegin();
      001262 12r0BrB1         [24] 4716 	lcall	_radiobegin
                                   4717 ;	main.c:66: openAllPipe();
      001265 12r0Dr4E         [24] 4718 	lcall	_openAllPipe
                                   4719 ;	main.c:68: setChannel(CHANNEL);
      001268 75 82 4B         [24] 4720 	mov	dpl,#0x4b
      00126B 12r0BrD5         [24] 4721 	lcall	_setChannel
                                   4722 ;	main.c:69: setDataRate(SPEED);
      00126E 75 82 01         [24] 4723 	mov	dpl,#0x01
      001271 12r0BrF6         [24] 4724 	lcall	_setDataRate
                                   4725 ;	main.c:70: setAutoAck(AutoAck);
      001274 75 82 00         [24] 4726 	mov	dpl,#0x00
      001277 12r0Cr5A         [24] 4727 	lcall	_setAutoAck
                                   4728 ;	main.c:71: setCRCLength(Crclength);
      00127A 75 82 02         [24] 4729 	mov	dpl,#0x02
      00127D 12r0Cr8D         [24] 4730 	lcall	_setCRCLength
                                   4731 ;	main.c:72: setPALevel(PAlevel);
      001280 75 82 03         [24] 4732 	mov	dpl,#0x03
      001283 12r0CrFA         [24] 4733 	lcall	_setPALevel
                                   4734 ;	main.c:74: clientnf.identifier=chclient;
      001286 90r00r90         [24] 4735 	mov	dptr,#_clientnf
      001289 74 03            [12] 4736 	mov	a,#0x03
      00128B F0               [24] 4737 	movx	@dptr,a
                                   4738 ;	main.c:77: ret = ds18b20_read(&DSTemp);
      00128C 90r00r99         [24] 4739 	mov	dptr,#_DSTemp
      00128F 75 F0 00         [24] 4740 	mov	b,#0x00
      001292 12r0FrB4         [24] 4741 	lcall	_ds18b20_read
                                   4742 ;	main.c:78: if (ret == DS_NO_ERROR) {
      001295 E5 82            [12] 4743 	mov	a,dpl
      001297 FF               [12] 4744 	mov	r7,a
      001298 70 12            [24] 4745 	jnz	00110$
                                   4746 ;	main.c:79: clientnf.temp = DSTemp;
      00129A 90r00r99         [24] 4747 	mov	dptr,#_DSTemp
      00129D E0               [24] 4748 	movx	a,@dptr
      00129E FD               [12] 4749 	mov	r5,a
      00129F A3               [24] 4750 	inc	dptr
      0012A0 E0               [24] 4751 	movx	a,@dptr
      0012A1 FE               [12] 4752 	mov	r6,a
      0012A2 90r00r97         [24] 4753 	mov	dptr,#(_clientnf + 0x0007)
      0012A5 ED               [12] 4754 	mov	a,r5
      0012A6 F0               [24] 4755 	movx	@dptr,a
      0012A7 EE               [12] 4756 	mov	a,r6
      0012A8 A3               [24] 4757 	inc	dptr
      0012A9 F0               [24] 4758 	movx	@dptr,a
      0012AA 80 07            [24] 4759 	sjmp	00111$
      0012AC                       4760 00110$:
                                   4761 ;	main.c:81: clientnf.temp = 0;
      0012AC 90r00r97         [24] 4762 	mov	dptr,#(_clientnf + 0x0007)
      0012AF E4               [12] 4763 	clr	a
      0012B0 F0               [24] 4764 	movx	@dptr,a
      0012B1 A3               [24] 4765 	inc	dptr
      0012B2 F0               [24] 4766 	movx	@dptr,a
      0012B3                       4767 00111$:
                                   4768 ;	main.c:83: clientnf.error = ret;
      0012B3 90r00r96         [24] 4769 	mov	dptr,#(_clientnf + 0x0006)
      0012B6 EF               [12] 4770 	mov	a,r7
      0012B7 F0               [24] 4771 	movx	@dptr,a
                                   4772 ;	main.c:97: if(pwr_clk_mgmt_is_vdd_below_bor_threshold()) { // power control
      0012B8 E5 DC            [12] 4773 	mov	a,_POFCON
      0012BA 30 E4 08         [24] 4774 	jnb	acc.4,00113$
                                   4775 ;	main.c:98: clientnf.powerControl = 1; // < 2.7
      0012BD 90r00r91         [24] 4776 	mov	dptr,#(_clientnf + 0x0001)
      0012C0 74 01            [12] 4777 	mov	a,#0x01
      0012C2 F0               [24] 4778 	movx	@dptr,a
      0012C3 80 05            [24] 4779 	sjmp	00114$
      0012C5                       4780 00113$:
                                   4781 ;	main.c:100: clientnf.powerControl = 0; // > 2.7
      0012C5 90r00r91         [24] 4782 	mov	dptr,#(_clientnf + 0x0001)
      0012C8 E4               [12] 4783 	clr	a
      0012C9 F0               [24] 4784 	movx	@dptr,a
      0012CA                       4785 00114$:
                                   4786 ;	main.c:103: rf_power_up(1);
      0012CA 75 82 01         [24] 4787 	mov	dpl,#0x01
      0012CD 12r03rE6         [24] 4788 	lcall	_rf_power_up
                                   4789 ;	main.c:104: rf_write_tx_payload((const uint8_t*)&clientnf, 32, true);
      0012D0 90r00r0B         [24] 4790 	mov	dptr,#_rf_write_tx_payload_PARM_2
      0012D3 74 20            [12] 4791 	mov	a,#0x20
      0012D5 F0               [24] 4792 	movx	@dptr,a
      0012D6 E4               [12] 4793 	clr	a
      0012D7 A3               [24] 4794 	inc	dptr
      0012D8 F0               [24] 4795 	movx	@dptr,a
      0012D9 90r00r0D         [24] 4796 	mov	dptr,#_rf_write_tx_payload_PARM_3
      0012DC 04               [12] 4797 	inc	a
      0012DD F0               [24] 4798 	movx	@dptr,a
      0012DE 90r00r90         [24] 4799 	mov	dptr,#_clientnf
      0012E1 75 F0 00         [24] 4800 	mov	b,#0x00
      0012E4 12r00r9A         [24] 4801 	lcall	_rf_write_tx_payload
                                   4802 ;	main.c:105: while(!(rf_irq_pin_active() && rf_irq_tx_ds_active()));
      0012E7                       4803 00116$:
      0012E7 30 C1 FD         [24] 4804 	jnb	_IRCON_SB_RFIRQ,00116$
      0012EA 90r00r15         [24] 4805 	mov	dptr,#_rf_spi_execute_command_PARM_2
      0012ED E4               [12] 4806 	clr	a
      0012EE F0               [24] 4807 	movx	@dptr,a
      0012EF A3               [24] 4808 	inc	dptr
      0012F0 F0               [24] 4809 	movx	@dptr,a
      0012F1 A3               [24] 4810 	inc	dptr
      0012F2 F0               [24] 4811 	movx	@dptr,a
      0012F3 90r00r18         [24] 4812 	mov	dptr,#_rf_spi_execute_command_PARM_3
      0012F6 F0               [24] 4813 	movx	@dptr,a
      0012F7 A3               [24] 4814 	inc	dptr
      0012F8 F0               [24] 4815 	movx	@dptr,a
      0012F9 90r00r1A         [24] 4816 	mov	dptr,#_rf_spi_execute_command_PARM_4
      0012FC 04               [12] 4817 	inc	a
      0012FD F0               [24] 4818 	movx	@dptr,a
      0012FE 75 82 FF         [24] 4819 	mov	dpl,#0xff
      001301 12r01rC9         [24] 4820 	lcall	_rf_spi_execute_command
      001304 E5 82            [12] 4821 	mov	a,dpl
      001306 30 E5 DE         [24] 4822 	jnb	acc.5,00116$
                                   4823 ;	main.c:106: rf_irq_clear_all();
      001309 12r01r5D         [24] 4824 	lcall	_rf_irq_clear_all
                                   4825 ;	main.c:107: rf_power_down();
      00130C 12r03r9E         [24] 4826 	lcall	_rf_power_down
                                   4827 ;	main.c:108: sleep_counter=0;
      00130F 90 01 10         [24] 4828 	mov	dptr,#_main_sleep_counter_1_247
      001312 E4               [12] 4829 	clr	a
      001313 F0               [24] 4830 	movx	@dptr,a
      001314 A3               [24] 4831 	inc	dptr
      001315 F0               [24] 4832 	movx	@dptr,a
                                   4833 ;	main.c:109: pwr_clk_mgmt_enter_pwr_mode_memory_ret_tmr_on();
      001316 75 A4 03         [24] 4834 	mov	_PWRDWN,#0x03
      001319 22               [24] 4835 	ret
                                   4836 	.area CSEG    (CODE)
                                   4837 	.area CONST   (CODE)
                                   4838 	.area XINIT   (CODE)
                                   4839 	.area CABS    (ABS,CODE)
